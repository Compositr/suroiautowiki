{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/hooks/debounce.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport function useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // Update debounced value after the specified delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value or delay changes\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]); // Only re-call effect if value or delay changes\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n"],"names":[],"mappings":";;;;;;;AAEO,SAAS,YAAe,KAAQ,EAAE,KAAa;IACpD,wCAAwC;IACxC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,0TAAY;IAExD,2TAAU;QACR,mDAAmD;QACnD,MAAM,UAAU,WAAW;YACzB,kBAAkB;QACpB,GAAG;QAEH,+CAA+C;QAC/C,OAAO;YACL,aAAa;QACf;IACF,GAAG;QAAC;QAAO;KAAM,GAAG,gDAAgD;IAEpE,OAAO;AACT;uCAEe"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/api/ErrorCodes.ts"],"sourcesContent":["// Error codes for API routes that need to be shown to the user\nenum APIErrorCodes {\n  Unknown,\n  ItemNotFound,\n  LootTableNotFound,\n  ItemNotInLootTable\n}\n\nexport const ErrorMessages: Record<APIErrorCodes, string> ={\n  \"0\": \"Unknown error\",\n  \"1\": \"Item not found\",\n  \"2\": \"Invalid loot table\",\n  \"3\": \"Item cannot be obtained from this loot table\",\n}\n\nexport default APIErrorCodes;\n"],"names":[],"mappings":"AAAA,+DAA+D;;;;;;UAC1D;;;;;GAAA,kBAAA;AAOE,MAAM,gBAA8C;IACzD,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP;uCAEe"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/interactive/LootCalc.tsx"],"sourcesContent":["\"use client\";\nimport APIErrorCodes, { ErrorMessages } from \"@/lib/api/ErrorCodes\";\nimport useDebounce from \"@/lib/hooks/debounce\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\n\nexport default function LootCalc() {\n  const [lootTable, setLootTable] = useState(\"\");\n  const [item, setItem] = useState(\"\");\n\n  const debouncedTable = useDebounce(lootTable, 500);\n  const debouncedItem = useDebounce(item, 500);\n\n  const results = useQuery({\n    queryKey: [\"loottablechance\", debouncedTable, debouncedItem],\n    enabled: !!(debouncedTable && debouncedItem),\n    queryFn: () =>\n      fetch(\n        `/api/loot/chance?table=${debouncedTable}&item=${debouncedItem}`\n      ).then((r) => r.json()),\n  });\n\n  return (\n    <div className=\"p-4\">\n      <div>\n        <div className=\"mt-2\">\n          <div className=\"flex gap-2 items-center\">\n            <div>\n              <span className=\"font-bold\">Loot Table</span>\n            </div>\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                value={lootTable}\n                onChange={(e) => setLootTable(e.target.value)}\n                className=\"w-full rounded-md bg-muted\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-2\">\n          <div className=\"flex gap-2 items-center\">\n            <div>\n              <span className=\"font-bold\">Item ID</span>\n            </div>\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                value={item}\n                onChange={(e) => setItem(e.target.value)}\n                className=\"w-full rounded-md bg-muted\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-4 text-center\">\n        {results.data?.error && (\n          <p>Error: {ErrorMessages[results.data.error as APIErrorCodes]}</p>\n        )}\n        {results.data && !results.data.error ? (\n          <p>\n            <b>{results.data.itemName}</b> has a{\" \"}\n            <code>{(results.data.chance * 100).toPrecision(2)}%</code> or{\" \"}\n            <b>1 in {results.data.oneIn}</b> chance of dropping.\n          </p>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,0TAAS;IAC3C,MAAM,CAAC,MAAM,QAAQ,GAAG,0TAAS;IAEjC,MAAM,iBAAiB,6HAAY,WAAW;IAC9C,MAAM,gBAAgB,6HAAY,MAAM;IAExC,MAAM,UAAU,0SAAS;QACvB,UAAU;YAAC;YAAmB;YAAgB;SAAc;QAC5D,SAAS,CAAC,CAAC,CAAC,kBAAkB,aAAa;QAC3C,SAAS,IACP,MACE,CAAC,uBAAuB,EAAE,eAAe,MAAM,EAAE,cAAc,CAAC,EAChE,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;IACxB;IAEA,qBACE,iVAAC;QAAI,WAAU;;0BACb,iVAAC;;kCACC,iVAAC;wBAAI,WAAU;kCACb,cAAA,iVAAC;4BAAI,WAAU;;8CACb,iVAAC;8CACC,cAAA,iVAAC;wCAAK,WAAU;kDAAY;;;;;;;;;;;8CAE9B,iVAAC;oCAAI,WAAU;8CACb,cAAA,iVAAC;wCACC,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;wCAC5C,WAAU;;;;;;;;;;;;;;;;;;;;;;kCAKlB,iVAAC;wBAAI,WAAU;kCACb,cAAA,iVAAC;4BAAI,WAAU;;8CACb,iVAAC;8CACC,cAAA,iVAAC;wCAAK,WAAU;kDAAY;;;;;;;;;;;8CAE9B,iVAAC;oCAAI,WAAU;8CACb,cAAA,iVAAC;wCACC,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;wCACvC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMpB,iVAAC;gBAAI,WAAU;;oBACZ,QAAQ,IAAI,EAAE,uBACb,iVAAC;;4BAAE;4BAAQ,kIAAa,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAkB;;;;;;;oBAE9D,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,iBAClC,iVAAC;;0CACC,iVAAC;0CAAG,QAAQ,IAAI,CAAC,QAAQ;;;;;;4BAAK;4BAAO;0CACrC,iVAAC;;oCAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,WAAW,CAAC;oCAAG;;;;;;;4BAAQ;4BAAI;0CAC9D,iVAAC;;oCAAE;oCAAM,QAAQ,IAAI,CAAC,KAAK;;;;;;;4BAAK;;;;;;+BAEhC;;;;;;;;;;;;;AAIZ"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}