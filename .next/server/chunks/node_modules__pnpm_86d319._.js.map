{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@swc+helpers@0.5.2/node_modules/@swc/helpers/esm/_interop_require_default.js"],"sourcesContent":["export function _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexport { _interop_require_default as _ };\n"],"names":[],"mappings":";;;;AAAO,SAAS,yBAAyB,GAAG;IACxC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@swc+helpers@0.5.2/node_modules/@swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nexports._ = exports._interop_require_default = _interop_require_default;\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n"],"names":[],"mappings":"AAAA;AAEA,QAAQ,CAAC,GAAG,QAAQ,wBAAwB,GAAG;AAC/C,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/is-buffer@2.0.5/node_modules/is-buffer/index.js"],"sourcesContent":["/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,OAAO,OAAO,GAAG,SAAS,SAAU,GAAG;IACrC,OAAO,OAAO,QAAQ,IAAI,WAAW,IAAI,QACvC,OAAO,IAAI,WAAW,CAAC,QAAQ,KAAK,cAAc,IAAI,WAAW,CAAC,QAAQ,CAAC;AAC/E"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile-matter@3.0.1/node_modules/vfile-matter/index.js"],"sourcesContent":["/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('js-yaml').LoadOptions} LoadOptions\n *\n * @typedef Options VFile matter options\n * @property {boolean} [strip=false] Remove the YAML front matter from the file\n * @property {Omit<LoadOptions, 'filename'>} [yaml] Options for the YAML parser\n */\n\nimport buffer from 'is-buffer'\nimport {load} from 'js-yaml'\n\n/**\n * Parse the YAML front matter in a [`vfile`](https://github.com/vfile/vfile), and add it as `file.data.matter`.\n *\n * If no matter is found in the file, nothing happens, except that `file.data.matter` is set to an empty object (`{}`).\n * @param {VFile} file Virtual file\n * @param {Options} [options] Options\n * @returns The given `file`\n */\nexport function matter(file, options = {}) {\n  var strip = options.strip\n  var yamlOptions = options.yaml || {}\n  var doc = String(file)\n  var match =\n    /^---(?:\\r?\\n|\\r)(?:([\\s\\S]*?)(?:\\r?\\n|\\r))?---(?:\\r?\\n|\\r|$)/.exec(doc)\n\n  if (match) {\n    file.data.matter = load(\n      match[1],\n      Object.assign({}, yamlOptions, {filename: file.path})\n    )\n\n    if (strip) {\n      doc = doc.slice(match[0].length)\n      file.value = buffer(file.value) ? Buffer.from(doc) : doc\n    }\n  } else {\n    file.data.matter = {}\n  }\n\n  return file\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;;;;;AAaM,SAAS,OAAO,IAAI,EAAE,UAAU,CAAC,CAAC;IACvC,IAAI,QAAQ,QAAQ,KAAK;IACzB,IAAI,cAAc,QAAQ,IAAI,IAAI,CAAC;IACnC,IAAI,MAAM,OAAO;IACjB,IAAI,QACF,+DAA+D,IAAI,CAAC;IAEtE,IAAI,OAAO;QACT,KAAK,IAAI,CAAC,MAAM,GAAG,0MACjB,KAAK,CAAC,EAAE,EACR,OAAO,MAAM,CAAC,CAAC,GAAG,aAAa;YAAC,UAAU,KAAK,IAAI;QAAA;QAGrD,IAAI,OAAO;YACT,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;YAC/B,KAAK,KAAK,GAAG,mMAAO,KAAK,KAAK,IAAI,OAAO,IAAI,CAAC,OAAO;QACvD;IACF,OAAO;QACL,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC;IACtB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minurl.shared.js"],"sourcesContent":["/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;CAgBC,GAED;;;;;;;CAOC,GACD,gFAAgF;;;;AACzE,SAAS,MAAM,aAAa;IACjC,OACE,kBAAkB,QAClB,OAAO,kBAAkB,YACzB,+BAA+B;IAC/B,cAAc,IAAI,IAClB,+BAA+B;IAC/B,cAAc,MAAM;AAExB"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/lib/minurl.shared.js"],"sourcesContent":["/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;CAiBC,GACD,+EAA+E;;;;AACxE,SAAS,MAAM,aAAa;IACjC,OAAO,QACL,kBAAkB,QAChB,OAAO,kBAAkB,YACzB,UAAU,iBACV,cAAc,IAAI,IAClB,cAAc,iBACd,cAAc,QAAQ,IACtB,sCAAsC;IACtC,cAAc,IAAI,KAAK;AAE7B"}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 648, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1301, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/index.js"],"sourcesContent":["// More types exposed from `index.d.ts`.\nexport {VFile} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,wCAAwC"}},
    {"offset": {"line": 1308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1313, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-stringify-position@3.0.3/node_modules/unist-util-stringify-position/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;;;;;;;;CAcC;;;AACM,SAAS,kBAAkB,KAAK;IACrC,WAAW;IACX,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,QAAQ;IACR,IAAI,cAAc,SAAS,UAAU,OAAO;QAC1C,OAAO,SAAS,MAAM,QAAQ;IAChC;IAEA,YAAY;IACZ,IAAI,WAAW,SAAS,SAAS,OAAO;QACtC,OAAO,SAAS;IAClB;IAEA,SAAS;IACT,IAAI,UAAU,SAAS,YAAY,OAAO;QACxC,OAAO,MAAM;IACf;IAEA,IAAI;IACJ,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,MAAM,SAAS,MAAM,IAAI,IAAI,MAAM,MAAM,SAAS,MAAM,MAAM;AACvE;AAEA;;;CAGC,GACD,SAAS,SAAS,GAAG;IACnB,OAAO,MAAM,OAAO,IAAI,KAAK,IAAI,MAAM,MAAM,OAAO,IAAI,GAAG;AAC7D;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,SAAS,OAAO,UAAU,WAAW,QAAQ;AACtD"}},
    {"offset": {"line": 1385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;;;;;;;;CAcC;;;AACM,SAAS,kBAAkB,KAAK;IACrC,WAAW;IACX,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,QAAQ;IACR,IAAI,cAAc,SAAS,UAAU,OAAO;QAC1C,OAAO,SAAS,MAAM,QAAQ;IAChC;IAEA,YAAY;IACZ,IAAI,WAAW,SAAS,SAAS,OAAO;QACtC,OAAO,SAAS;IAClB;IAEA,SAAS;IACT,IAAI,UAAU,SAAS,YAAY,OAAO;QACxC,OAAO,MAAM;IACf;IAEA,IAAI;IACJ,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,MAAM,SAAS,MAAM,IAAI,IAAI,MAAM,MAAM,SAAS,MAAM,MAAM;AACvE;AAEA;;;CAGC,GACD,SAAS,SAAS,GAAG;IACnB,OAAO,MAAM,OAAO,IAAI,KAAK,IAAI,MAAM,MAAM,OAAO,IAAI,GAAG;AAC7D;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,SAAS,OAAO,UAAU,WAAW,QAAQ;AACtD"}},
    {"offset": {"line": 1473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1489, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile-message@3.1.4/node_modules/vfile-message/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1686, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1691, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1944, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1949, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {VFileMessage} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 1957, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1962, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/color.js"],"sourcesContent":["/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,MAAM,CAAC;IACrB,OAAO,eAAe,IAAI;AAC5B"}},
    {"offset": {"line": 1971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1976, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;;;;;;CAkBC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAmCC,GAED;;;;;;;;;CASC;;;;;;;;;;;AAQM,MAAM,WAAW;AAKjB,MAAM,OAAO;AAKb,MAAM,OAAO;AA+Bb,MAAM,eAQT;;;;;;KAMC,GACD,SAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IACpC,IAAI,OAAO,SAAS,cAAc,OAAO,YAAY,YAAY;QAC/D,UAAU;QACV,2DAA2D;QAC3D,UAAU;QACV,OAAO;IACT;IAEA,MAAM,KAAK,iNAAQ;IACnB,MAAM,OAAO,UAAU,CAAC,IAAI;IAE5B,QAAQ,MAAM,WAAW,EAAE;IAE3B;;;;OAIC,GACD,SAAS,QAAQ,IAAI,EAAE,KAAK,EAAE,OAAO;QACnC,oCAAoC,GACpC,yBAAyB;QACzB,MAAM,QAAQ,QAAQ,OAAO,SAAS,WAAW,OAAO,CAAC;QAEzD,IAAI,OAAO,MAAM,IAAI,KAAK,UAAU;YAClC,MAAM,OACJ,SAAS;YACT,OAAO,MAAM,OAAO,KAAK,WACrB,MAAM,OAAO,GAEf,OAAO,MAAM,IAAI,KAAK,WACpB,MAAM,IAAI,GACV;YAEN,OAAO,cAAc,CAAC,OAAO,QAAQ;gBACnC,OACE,WAAW,kPAAM,KAAK,IAAI,GAAG,CAAC,OAAO,MAAM,OAAO,MAAM,EAAE,KAAK;YACnE;QACF;QAEA,OAAO;QAEP,SAAS;YACP,wBAAwB,GACxB,IAAI,SAAS,EAAE;YACf,wBAAwB,GACxB,IAAI;YACJ,mBAAmB,GACnB,IAAI;YACJ,0BAA0B,GAC1B,IAAI;YAEJ,IAAI,CAAC,QAAQ,GAAG,MAAM,OAAO,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,IAAI,OAAO;gBACjE,SAAS,SAAS,QAAQ,MAAM;gBAEhC,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;oBACtB,OAAO;gBACT;YACF;YAEA,wCAAwC;YACxC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACvC,wCAAwC;gBACxC,SAAS,CAAC,UAAU,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI;gBACjD,wCAAwC;gBACxC,eAAe,QAAQ,MAAM,CAAC;gBAE9B,wCAAwC;gBACxC,MAAO,SAAS,CAAC,KAAK,SAAS,KAAK,QAAQ,CAAC,MAAM,CAAE;oBACnD,wCAAwC;oBACxC,YAAY,QAAQ,KAAK,QAAQ,CAAC,OAAO,EAAE,QAAQ;oBAEnD,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM;wBACzB,OAAO;oBACT;oBAEA,SACE,OAAO,SAAS,CAAC,EAAE,KAAK,WAAW,SAAS,CAAC,EAAE,GAAG,SAAS;gBAC/D;YACF;YAEA,OAAO;QACT;IACF;AACF;AAGJ;;;;;;;CAOC,GACD,SAAS,SAAS,KAAK;IACrB,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO;IACT;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;YAAC;YAAU;SAAM;IAC1B;IAEA,OAAO;QAAC;KAAM;AAChB"}},
    {"offset": {"line": 2139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2144, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["// Note: types exported from `index.d.ts`\nexport {CONTINUE, EXIT, SKIP, visitParents} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 2154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2159, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/color.node.js"],"sourcesContent":["/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,MAAM,CAAC;IACrB,OAAO,eAAe,IAAI;AAC5B"}},
    {"offset": {"line": 2168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2173, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2461, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["// Note: types exported from `index.d.ts`\nexport {CONTINUE, EXIT, SKIP, visitParents} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 2471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2476, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;;;;;CAiBC,GAED;;;;;CAKC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;CAWC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;CAaC;;;;AACM,MAAM,KAWT;;;;;;;KAOC,GACD,sCAAsC;AACtC,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO;IAC5C,MAAM,QAAQ,QAAQ;IAEtB,IACE,UAAU,aACV,UAAU,QACV,CAAC,OAAO,UAAU,YAChB,QAAQ,KACR,UAAU,OAAO,iBAAiB,GACpC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,WAAW,aACX,WAAW,QACX,CAAC,CAAC,GAAG,WAAW,CAAC,OAAO,QAAQ,GAChC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,CAAC,WAAW,aAAa,WAAW,IAAI,MACxC,CAAC,UAAU,aAAa,UAAU,IAAI,GACtC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,sCAAsC;IACtC,OAAO,QAAQ,KAAK,IAAI,IAAI,OAAO,KAAK,IAAI,KAAK,WAC7C,QAAQ,MAAM,IAAI,CAAC,SAAS,MAAM,OAAO,WACzC;AACN;AAqBG,MAAM,UAQT;;;KAGC,GACD,SAAU,IAAI;IACZ,IAAI,SAAS,aAAa,SAAS,MAAM;QACvC,OAAO;IACT;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,YAAY;IACrB;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,MAAM,OAAO,CAAC,QAAQ,WAAW,QAAQ,aAAa;IAC/D;IAEA,IAAI,OAAO,SAAS,YAAY;QAC9B,OAAO,YAAY;IACrB;IAEA,MAAM,IAAI,MAAM;AAClB;AAGJ;;;CAGC,GACD,SAAS,WAAW,KAAK;IACvB,kCAAkC,GAClC,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,CAAC,MAAM,GAAG,QAAQ,KAAK,CAAC,MAAM;IACtC;IAEA,OAAO,YAAY;IAEnB;;;;GAIC,GACD,SAAS,IAAI,GAAG,UAAU;QACxB,IAAI,QAAQ,CAAC;QAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;YAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,aAAa,OAAO;QACtD;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,aAAa,KAAK;IACzB,OAAO,YAAY;IAEnB;;;GAGC,GACD,SAAS,IAAI,IAAI;QACf,mBAAmB,GACnB,IAAI;QAEJ,IAAK,OAAO,MAAO;YACjB,qDAAqD;YACrD,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE,OAAO;QACvC;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACxB,OAAO,YAAY;IAEnB;;GAEC,GACD,SAAS,KAAK,IAAI;QAChB,OAAO,QAAQ,KAAK,IAAI,KAAK;IAC/B;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACxB,OAAO;IAEP;;;;;GAKC,GACD,SAAS,UAAU,IAAI,EAAE,GAAG,UAAU;QACpC,OAAO,QACL,QACE,OAAO,SAAS,YAChB,UAAU,QACV,0BAA0B;QAC1B,QAAQ,MAAM,IAAI,CAAC,IAAI,EAAE,SAAS;IAExC;AACF;AAEA,SAAS;IACP,OAAO;AACT"}},
    {"offset": {"line": 2673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2678, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Test} Test\n * @typedef {import('./lib/index.js').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('./lib/index.js').AssertAnything} AssertAnything\n */\n\n/**\n * @template {import('unist').Node} Kind\n * @typedef {import('./lib/index.js').PredicateTest<Kind>} PredicateTest\n */\n\n/**\n * @template {import('unist').Node} Kind\n * @typedef {import('./lib/index.js').TestFunctionPredicate<Kind>} TestFunctionPredicate\n */\n\n/**\n * @template {import('unist').Node} Kind\n * @typedef {import('./lib/index.js').AssertPredicate<Kind>} AssertPredicate\n */\n\nexport {is, convert} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;CAGC,GAED;;;CAGC,GAED;;;CAGC"}},
    {"offset": {"line": 2698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2703, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;CAIC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCC,GAED;;;;;;;;;;;;;;;CAeC;;;;AACM,MAAM,KAaT;;;;;;;KAOC,GACD,sCAAsC;AACtC,SAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO;IAC1C,MAAM,QAAQ,QAAQ;IAEtB,IACE,UAAU,aACV,UAAU,QACV,CAAC,OAAO,UAAU,YAChB,QAAQ,KACR,UAAU,OAAO,iBAAiB,GACpC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,WAAW,aACX,WAAW,QACX,CAAC,CAAC,GAAG,WAAW,CAAC,OAAO,QAAQ,GAChC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,IACE,CAAC,WAAW,aAAa,WAAW,IAAI,MACxC,CAAC,UAAU,aAAa,UAAU,IAAI,GACtC;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,eAAe,QAClB,MAAM,IAAI,CAAC,SAAS,MAAM,OAAO,UACjC;AACN;AAqBG,MAAM,UAYT;;;KAGC,GACD,SAAU,IAAI;IACZ,IAAI,SAAS,QAAQ,SAAS,WAAW;QACvC,OAAO;IACT;IAEA,IAAI,OAAO,SAAS,YAAY;QAC9B,OAAO,YAAY;IACrB;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,MAAM,OAAO,CAAC,QAAQ,WAAW,QAAQ,aAAa;IAC/D;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,YAAY;IACrB;IAEA,MAAM,IAAI,MAAM;AAClB;AAGJ;;;CAGC,GACD,SAAS,WAAW,KAAK;IACvB,yBAAyB,GACzB,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,CAAC,MAAM,GAAG,QAAQ,KAAK,CAAC,MAAM;IACtC;IAEA,OAAO,YAAY;IAEnB;;;GAGC,GACD,SAAS,IAAI,GAAG,UAAU;QACxB,IAAI,QAAQ,CAAC;QAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;YAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,OAAO;QACpD;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,aAAa,KAAK;IACzB,MAAM,gBAAwD;IAE9D,OAAO,YAAY;IAEnB;;;GAGC,GACD,SAAS,IAAI,IAAI;QACf,MAAM,eACoB;QAG1B,mBAAmB,GACnB,IAAI;QAEJ,IAAK,OAAO,MAAO;YACjB,IAAI,YAAY,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,EAAE,OAAO;QACvD;QAEA,OAAO;IACT;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACxB,OAAO,YAAY;IAEnB;;GAEC,GACD,SAAS,KAAK,IAAI;QAChB,OAAO,QAAQ,KAAK,IAAI,KAAK;IAC/B;AACF;AAEA;;;;;CAKC,GACD,SAAS,YAAY,YAAY;IAC/B,OAAO;IAEP;;;GAGC,GACD,SAAS,MAAM,KAAK,EAAE,KAAK,EAAE,MAAM;QACjC,OAAO,QACL,eAAe,UACb,aAAa,IAAI,CACf,IAAI,EACJ,OACA,OAAO,UAAU,WAAW,QAAQ,WACpC,UAAU;IAGlB;AACF;AAEA,SAAS;IACP,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,eAAe,KAAK;IAC3B,OAAO,UAAU,QAAQ,OAAO,UAAU,YAAY,UAAU;AAClE"}},
    {"offset": {"line": 2881, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2886, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Check} Check\n * @typedef {import('./lib/index.js').Test} Test\n * @typedef {import('./lib/index.js').TestFunction} TestFunction\n */\n\nexport {is, convert} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;;CAIC"}},
    {"offset": {"line": 2897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2902, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit@4.1.2/node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;;;;;;;;;;;;;;;;;CAiBC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqCC,GAED;;;;;;;;;;CAUC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;CAeC;;;;;;;;;;AAiCM,MAAM,QAQT;;;;;;KAMC,GACD,SAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IACpC,IAAI,OAAO,SAAS,cAAc,OAAO,YAAY,YAAY;QAC/D,UAAU;QACV,UAAU;QACV,OAAO;IACT;IAEA,kPAAa,MAAM,MAAM,UAAU;IAEnC;;;OAGC,GACD,SAAS,SAAS,IAAI,EAAE,OAAO;QAC7B,MAAM,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;QAC1C,OAAO,QACL,MACA,SAAS,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,MACzC;IAEJ;AACF"}},
    {"offset": {"line": 3033, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3038, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit@4.1.2/node_modules/unist-util-visit/index.js"],"sourcesContent":["// Note: types exported from `index.d.ts`\nexport {CONTINUE, EXIT, SKIP, visit} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 3048, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3053, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;CAOC,GAED,uEAAuE;AAEvE;;;;;;;;;;;CAWC,GAED;;;;;;;;;;;;;;;;;;;CAmBC,GAED;;;;;;;;;;;CAWC,GAED;;;CAGC,GAED;;;;;CAKC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;CAOC,GAED;;;;;;;;;;;;;;;;;CAiBC,GAED;;;;;;;;;;;;;;;;;;;;;;;;CAwBC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqCC,GAED;;;;;;;;;CASC,GAED;;;;;;;;;;;;;;CAcC,GAED;;;;;;;;;;;;;;CAcC;;;;;;;;;;;AAqDM,SAAS,MAAM,IAAI,EAAE,aAAa,EAAE,gBAAgB,EAAE,YAAY;IACvE,uCAAuC,GACvC,IAAI;IACJ,iBAAiB,GACjB,IAAI;IACJ,oBAAoB,GACpB,IAAI;IAEJ,IACE,OAAO,kBAAkB,cACzB,OAAO,qBAAqB,YAC5B;QACA,OAAO;QACP,UAAU;QACV,UAAU;IACZ,OAAO;QACL,6DAA6D;QAC7D,OAAO;QACP,6DAA6D;QAC7D,UAAU;QACV,UAAU;IACZ;IAEA,kPAAa,MAAM,MAAM,UAAU;IAEnC;;;GAGC,GACD,SAAS,SAAS,IAAI,EAAE,OAAO;QAC7B,MAAM,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;QAC1C,MAAM,QAAQ,SAAS,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ;QACvD,OAAO,QAAQ,MAAM,OAAO;IAC9B;AACF"}},
    {"offset": {"line": 3285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3290, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/index.js"],"sourcesContent":["// Note: types exported from `index.d.ts`\nexport {CONTINUE, EXIT, SKIP, visit} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 3300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3305, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/collapse-white-space@2.1.0/node_modules/collapse-white-space/index.js"],"sourcesContent":["/**\n * @typedef {'html'|'js'} Style\n *\n * @typedef Options\n *   Configuration.\n * @property {Style} [style='js']\n *   Style of white space to support.\n * @property {boolean} [preserveLineEndings=false]\n *   Whether to collapse white space containing a line ending to that line\n *   ending.\n *   The default is to collapse to a single space.\n * @property {boolean} [trim=false]\n *   Whether to drop white space at the start and end of `value`.\n *   The default is to keep it.\n */\n\nconst js = /\\s+/g\nconst html = /[\\t\\n\\v\\f\\r ]+/g\n\n/**\n * Collapse white space.\n *\n * @param {string} value\n *   Value to collapse white space in.\n * @param {Style|Options} [options='js']\n *   Configuration.\n * @returns {string}\n *   Value with collapsed white space.\n */\nexport function collapseWhiteSpace(value, options) {\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string') {\n    options = {style: options}\n  }\n\n  const replace = options.preserveLineEndings ? replaceLineEnding : replaceSpace\n\n  return String(value).replace(\n    options.style === 'html' ? html : js,\n    options.trim ? trimFactory(replace) : replace\n  )\n}\n\n/**\n * Replace white space with a line ending as that line ending and otherwise a\n * space.\n *\n * @param {string} value\n * @returns {string}\n */\nfunction replaceLineEnding(value) {\n  const match = /\\r?\\n|\\r/.exec(value)\n  return match ? match[0] : ' '\n}\n\n/**\n * Replace white space with a space.\n *\n * @returns {string}\n */\nfunction replaceSpace() {\n  return ' '\n}\n\n/**\n * @param {(value: string) => string} replace\n */\nfunction trimFactory(replace) {\n  return dropOrReplace\n\n  /**\n   * Replace white space with nothing if it starts or ends the string.\n   * Calls `replace` otherwise.\n   *\n   * @param {string} value\n   * @param {number} index\n   * @param {string} all\n   * @returns {string}\n   */\n  function dropOrReplace(value, index, all) {\n    return index === 0 || index + value.length === all.length\n      ? ''\n      : replace(value)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;AAED,MAAM,KAAK;AACX,MAAM,OAAO;AAYN,SAAS,mBAAmB,KAAK,EAAE,OAAO;IAC/C,IAAI,CAAC,SAAS;QACZ,UAAU,CAAC;IACb,OAAO,IAAI,OAAO,YAAY,UAAU;QACtC,UAAU;YAAC,OAAO;QAAO;IAC3B;IAEA,MAAM,UAAU,QAAQ,mBAAmB,GAAG,oBAAoB;IAElE,OAAO,OAAO,OAAO,OAAO,CAC1B,QAAQ,KAAK,KAAK,SAAS,OAAO,IAClC,QAAQ,IAAI,GAAG,YAAY,WAAW;AAE1C;AAEA;;;;;;CAMC,GACD,SAAS,kBAAkB,KAAK;IAC9B,MAAM,QAAQ,WAAW,IAAI,CAAC;IAC9B,OAAO,QAAQ,KAAK,CAAC,EAAE,GAAG;AAC5B;AAEA;;;;CAIC,GACD,SAAS;IACP,OAAO;AACT;AAEA;;CAEC,GACD,SAAS,YAAY,OAAO;IAC1B,OAAO;IAEP;;;;;;;;GAQC,GACD,SAAS,cAAc,KAAK,EAAE,KAAK,EAAE,GAAG;QACtC,OAAO,UAAU,KAAK,QAAQ,MAAM,MAAM,KAAK,IAAI,MAAM,GACrD,KACA,QAAQ;IACd;AACF"}},
    {"offset": {"line": 3368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3373, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/hast-util-whitespace@2.0.1/node_modules/hast-util-whitespace/index.js"],"sourcesContent":["/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC;;;AACM,SAAS,WAAW,KAAK;IAC9B,mBAAmB,GACnB,MAAM,QACJ,sCAAsC;IACtC,SAAS,OAAO,UAAU,YAAY,MAAM,IAAI,KAAK,SAEjD,MAAM,KAAK,IAAI,KACf;IAEN,8BAA8B;IAC9B,yDAAyD;IACzD,OAAO,OAAO,UAAU,YAAY,MAAM,OAAO,CAAC,gBAAgB,QAAQ;AAC5E"}},
    {"offset": {"line": 3394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3399, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,8BAA8B;AAC9B,yDAAyD;;;;AACzD,MAAM,KAAK;AAaJ,SAAS,WAAW,KAAK;IAC9B,OAAO,OAAO,UAAU,WACpB,MAAM,IAAI,KAAK,SACb,MAAM,MAAM,KAAK,IACjB,QACF,MAAM;AACZ;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,MAAM,OAAO,CAAC,IAAI,QAAQ;AACnC"}},
    {"offset": {"line": 3416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3432, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-attach-comments@2.1.1/node_modules/estree-util-attach-comments/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree').BaseNode} EstreeNode\n * @typedef {import('estree').Comment} EstreeComment\n *\n * @typedef State\n *   Info passed around.\n * @property {Array<EstreeComment>} comments\n *   Comments.\n * @property {number} index\n *   Index of comment.\n *\n * @typedef Fields\n * @property {boolean} leading\n * @property {boolean} trailing\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * This mutates the given `tree`.\n * It takes `comments`, walks the tree, and adds comments as close as possible\n * to where they originated.\n *\n * Comment nodes are given two boolean fields: `leading` (`true` for\n * `/* a *\\/ b`) and `trailing` (`true` for `a /* b *\\/`).\n * Both fields are `false` for dangling comments: `[/* a *\\/]`.\n * This is what `recast` uses too, and is somewhat similar to Babel, which is\n * not estree but instead uses `leadingComments`, `trailingComments`, and\n * `innerComments` arrays on nodes.\n *\n * The algorithm checks any node: even recent (or future) proposals or\n * nonstandard syntax such as JSX, because it ducktypes to find nodes instead\n * of having a list of visitor keys.\n *\n * The algorithm supports `loc` fields (line/column), `range` fields (offsets),\n * and direct `start` / `end` fields.\n *\n * @template {EstreeNode} Tree\n *   Node type.\n * @param {Tree} tree\n *   Tree to attach to.\n * @param {Array<EstreeComment> | null | undefined} [comments]\n *   List of comments.\n * @returns {Tree}\n *   Given tree.\n */\n// To do: next major: don’t return given `tree`.\nexport function attachComments(tree, comments) {\n  const list = (comments || []).concat().sort(compare)\n  if (list.length > 0) walk(tree, {comments: list, index: 0})\n  return tree\n}\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * @param {EstreeNode} node\n *   Node.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction walk(node, state) {\n  // Done, we can quit.\n  if (state.index === state.comments.length) {\n    return\n  }\n\n  /** @type {Array<EstreeNode>} */\n  const children = []\n  /** @type {Array<EstreeComment>} */\n  const comments = []\n  /** @type {string} */\n  let key\n\n  // Find all children of `node`\n  for (key in node) {\n    if (own.call(node, key)) {\n      /** @type {EstreeNode | Array<EstreeNode>} */\n      // @ts-expect-error: indexable.\n      const value = node[key]\n\n      // Ignore comments.\n      if (value && typeof value === 'object' && key !== 'comments') {\n        if (Array.isArray(value)) {\n          let index = -1\n\n          while (++index < value.length) {\n            if (value[index] && typeof value[index].type === 'string') {\n              children.push(value[index])\n            }\n          }\n        } else if (typeof value.type === 'string') {\n          children.push(value)\n        }\n      }\n    }\n  }\n\n  // Sort the children.\n  children.sort(compare)\n\n  // Initial comments.\n  comments.push(...slice(state, node, false, {leading: true, trailing: false}))\n\n  let index = -1\n\n  while (++index < children.length) {\n    walk(children[index], state)\n  }\n\n  // Dangling or trailing comments.\n  comments.push(\n    ...slice(state, node, true, {\n      leading: false,\n      trailing: children.length > 0\n    })\n  )\n\n  if (comments.length > 0) {\n    // @ts-expect-error, yes, because they’re nonstandard.\n    node.comments = comments\n  }\n}\n\n/**\n * @param {State} state\n *   Info passed around.\n * @param {EstreeNode} node\n *   Node.\n * @param {boolean} compareEnd\n *   Whether to compare on the end (default is on start).\n * @param {Fields} fields\n *   Fields.\n * @returns {Array<EstreeComment>}\n *   Slice from `state.comments`.\n */\nfunction slice(state, node, compareEnd, fields) {\n  /** @type {Array<EstreeComment>} */\n  const result = []\n\n  while (\n    state.comments[state.index] &&\n    compare(state.comments[state.index], node, compareEnd) < 1\n  ) {\n    result.push(Object.assign({}, state.comments[state.index++], fields))\n  }\n\n  return result\n}\n\n/**\n * Sort two nodes (or comments).\n *\n * @param {EstreeNode | EstreeComment} left\n *   A node.\n * @param {EstreeNode | EstreeComment} right\n *   The other node.\n * @param {boolean | undefined} [compareEnd=false]\n *   Compare on `end` of `right`, default is to compare on `start`.\n * @returns {number}\n *   Sorting.\n */\nfunction compare(left, right, compareEnd) {\n  const field = compareEnd ? 'end' : 'start'\n\n  // Offsets.\n  if (left.range && right.range) {\n    return left.range[0] - right.range[compareEnd ? 1 : 0]\n  }\n\n  // Points.\n  if (left.loc && left.loc.start && right.loc && right.loc[field]) {\n    return (\n      left.loc.start.line - right.loc[field].line ||\n      left.loc.start.column - right.loc[field].column\n    )\n  }\n\n  // Just `start` (and `end`) on nodes.\n  // Default in most parsers.\n  if ('start' in left && field in right) {\n    // @ts-expect-error Added by Acorn\n    return left.start - right[field]\n  }\n\n  return Number.NaN\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;AAED,MAAM,MAAM,CAAC,EAAE,cAAc;AAiCtB,SAAS,eAAe,IAAI,EAAE,QAAQ;IAC3C,MAAM,OAAO,CAAC,YAAY,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC;IAC5C,IAAI,KAAK,MAAM,GAAG,GAAG,KAAK,MAAM;QAAC,UAAU;QAAM,OAAO;IAAC;IACzD,OAAO;AACT;AAEA;;;;;;;;;CASC,GACD,SAAS,KAAK,IAAI,EAAE,KAAK;IACvB,qBAAqB;IACrB,IAAI,MAAM,KAAK,KAAK,MAAM,QAAQ,CAAC,MAAM,EAAE;QACzC;IACF;IAEA,8BAA8B,GAC9B,MAAM,WAAW,EAAE;IACnB,iCAAiC,GACjC,MAAM,WAAW,EAAE;IACnB,mBAAmB,GACnB,IAAI;IAEJ,8BAA8B;IAC9B,IAAK,OAAO,KAAM;QAChB,IAAI,IAAI,IAAI,CAAC,MAAM,MAAM;YACvB,2CAA2C,GAC3C,+BAA+B;YAC/B,MAAM,QAAQ,IAAI,CAAC,IAAI;YAEvB,mBAAmB;YACnB,IAAI,SAAS,OAAO,UAAU,YAAY,QAAQ,YAAY;gBAC5D,IAAI,MAAM,OAAO,CAAC,QAAQ;oBACxB,IAAI,QAAQ,CAAC;oBAEb,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;wBAC7B,IAAI,KAAK,CAAC,MAAM,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU;4BACzD,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM;wBAC5B;oBACF;gBACF,OAAO,IAAI,OAAO,MAAM,IAAI,KAAK,UAAU;oBACzC,SAAS,IAAI,CAAC;gBAChB;YACF;QACF;IACF;IAEA,qBAAqB;IACrB,SAAS,IAAI,CAAC;IAEd,oBAAoB;IACpB,SAAS,IAAI,IAAI,MAAM,OAAO,MAAM,OAAO;QAAC,SAAS;QAAM,UAAU;IAAK;IAE1E,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,KAAK,QAAQ,CAAC,MAAM,EAAE;IACxB;IAEA,iCAAiC;IACjC,SAAS,IAAI,IACR,MAAM,OAAO,MAAM,MAAM;QAC1B,SAAS;QACT,UAAU,SAAS,MAAM,GAAG;IAC9B;IAGF,IAAI,SAAS,MAAM,GAAG,GAAG;QACvB,sDAAsD;QACtD,KAAK,QAAQ,GAAG;IAClB;AACF;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,MAAM,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM;IAC5C,iCAAiC,GACjC,MAAM,SAAS,EAAE;IAEjB,MACE,MAAM,QAAQ,CAAC,MAAM,KAAK,CAAC,IAC3B,QAAQ,MAAM,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM,cAAc,EACzD;QACA,OAAO,IAAI,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,MAAM,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;IAC/D;IAEA,OAAO;AACT;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,QAAQ,IAAI,EAAE,KAAK,EAAE,UAAU;IACtC,MAAM,QAAQ,aAAa,QAAQ;IAEnC,WAAW;IACX,IAAI,KAAK,KAAK,IAAI,MAAM,KAAK,EAAE;QAC7B,OAAO,KAAK,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,aAAa,IAAI,EAAE;IACxD;IAEA,UAAU;IACV,IAAI,KAAK,GAAG,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG,CAAC,MAAM,EAAE;QAC/D,OACE,KAAK,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,IAC3C,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM;IAEnD;IAEA,qCAAqC;IACrC,2BAA2B;IAC3B,IAAI,WAAW,QAAQ,SAAS,OAAO;QACrC,kCAAkC;QAClC,OAAO,KAAK,KAAK,GAAG,KAAK,CAAC,MAAM;IAClC;IAEA,OAAO,OAAO,GAAG;AACnB"}},
    {"offset": {"line": 3563, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3574, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3579, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-attach-comments@3.0.0/node_modules/estree-util-attach-comments/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree').Comment} Comment\n * @typedef {import('estree').Node} Nodes\n */\n\n/**\n * @typedef Fields\n *   Fields.\n * @property {boolean} leading\n *   Whether it’s leading.\n * @property {boolean} trailing\n *   Whether it’s trailing.\n *\n * @typedef State\n *   Info passed around.\n * @property {Array<Comment>} comments\n *   Comments.\n * @property {number} index\n *   Index of comment.\n */\n\nconst own = {}.hasOwnProperty\n\n/** @type {Array<Comment>} */\nconst emptyComments = []\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * This mutates the given `tree`.\n * It takes `comments`, walks the tree, and adds comments as close as possible\n * to where they originated.\n *\n * Comment nodes are given two boolean fields: `leading` (`true` for\n * `/* a *\\/ b`) and `trailing` (`true` for `a /* b *\\/`).\n * Both fields are `false` for dangling comments: `[/* a *\\/]`.\n * This is what `recast` uses too, and is somewhat similar to Babel, which is\n * not estree but instead uses `leadingComments`, `trailingComments`, and\n * `innerComments` arrays on nodes.\n *\n * The algorithm checks any node: even recent (or future) proposals or\n * nonstandard syntax such as JSX, because it ducktypes to find nodes instead\n * of having a list of visitor keys.\n *\n * The algorithm supports `loc` fields (line/column), `range` fields (offsets),\n * and direct `start` / `end` fields.\n *\n * @template {Nodes} Tree\n *   Node type.\n * @param {Tree} tree\n *   Tree to attach to.\n * @param {Array<Comment> | null | undefined} [comments]\n *   List of comments (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport function attachComments(tree, comments) {\n  const list = comments ? [...comments].sort(compare) : emptyComments\n  if (list.length > 0) walk(tree, {comments: list, index: 0})\n}\n\n/**\n * Attach semistandard estree comment nodes to the tree.\n *\n * @param {Nodes} node\n *   Node.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction walk(node, state) {\n  // Done, we can quit.\n  if (state.index === state.comments.length) {\n    return\n  }\n\n  /** @type {Array<Nodes>} */\n  const children = []\n  /** @type {Array<Comment>} */\n  const comments = []\n  /** @type {string} */\n  let key\n\n  // Find all children of `node`\n  for (key in node) {\n    if (own.call(node, key)) {\n      /** @type {Array<Nodes> | Nodes} */\n      // @ts-expect-error: indexable.\n      const value = node[key]\n\n      // Ignore comments.\n      if (value && typeof value === 'object' && key !== 'comments') {\n        if (Array.isArray(value)) {\n          let index = -1\n\n          while (++index < value.length) {\n            if (value[index] && typeof value[index].type === 'string') {\n              children.push(value[index])\n            }\n          }\n        } else if (typeof value.type === 'string') {\n          children.push(value)\n        }\n      }\n    }\n  }\n\n  // Sort the children.\n  children.sort(compare)\n\n  // Initial comments.\n  comments.push(...slice(state, node, false, {leading: true, trailing: false}))\n\n  let index = -1\n\n  while (++index < children.length) {\n    walk(children[index], state)\n  }\n\n  // Dangling or trailing comments.\n  comments.push(\n    ...slice(state, node, true, {\n      leading: false,\n      trailing: children.length > 0\n    })\n  )\n\n  if (comments.length > 0) {\n    // @ts-expect-error, yes, because they’re nonstandard.\n    node.comments = comments\n  }\n}\n\n/**\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Node.\n * @param {boolean} compareEnd\n *   Whether to compare on the end (default is on start).\n * @param {Fields} fields\n *   Fields.\n * @returns {Array<Comment>}\n *   Slice from `state.comments`.\n */\nfunction slice(state, node, compareEnd, fields) {\n  /** @type {Array<Comment>} */\n  const result = []\n\n  while (\n    state.comments[state.index] &&\n    compare(state.comments[state.index], node, compareEnd) < 1\n  ) {\n    result.push(Object.assign({}, state.comments[state.index++], fields))\n  }\n\n  return result\n}\n\n/**\n * Sort two nodes (or comments).\n *\n * @param {Comment | Nodes} left\n *   A node.\n * @param {Comment | Nodes} right\n *   The other node.\n * @param {boolean | undefined} [compareEnd=false]\n *   Compare on `end` of `right`, default is to compare on `start` (default:\n *   `false`).\n * @returns {number}\n *   Sorting.\n */\nfunction compare(left, right, compareEnd) {\n  const field = compareEnd ? 'end' : 'start'\n\n  // Offsets.\n  if (left.range && right.range) {\n    return left.range[0] - right.range[compareEnd ? 1 : 0]\n  }\n\n  // Points.\n  if (left.loc && left.loc.start && right.loc && right.loc[field]) {\n    return (\n      left.loc.start.line - right.loc[field].line ||\n      left.loc.start.column - right.loc[field].column\n    )\n  }\n\n  // Just `start` (and `end`) on nodes.\n  // Default in most parsers.\n  if ('start' in left && field in right) {\n    // @ts-expect-error Added by Acorn\n    return left.start - right[field]\n  }\n\n  return Number.NaN\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3716, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3721, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3727, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3732, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/normalize.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,UAAU,KAAK;IAC7B,OAAO,MAAM,WAAW;AAC1B"}},
    {"offset": {"line": 3741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3746, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/hast-to-react.js"],"sourcesContent":["/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;AACM,MAAM,cAAc;IACzB,SAAS;IACT,UAAU;IACV,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,QAAQ;IACR,cAAc;IACd,cAAc;IACd,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;IACX,YAAY;AACd"}},
    {"offset": {"line": 3776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3781, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/info.js"],"sourcesContent":["export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n"],"names":[],"mappings":";;;AAAO,MAAM;IACX;;;;GAIC,GACD,YAAY,QAAQ,EAAE,SAAS,CAAE;QAC/B,mBAAmB,GACnB,IAAI,CAAC,QAAQ,GAAG;QAChB,mBAAmB,GACnB,IAAI,CAAC,SAAS,GAAG;IACnB;AACF;AAEA,wBAAwB,GACxB,KAAK,SAAS,CAAC,KAAK,GAAG;AACvB,KAAK,SAAS,CAAC,OAAO,GAAG;AACzB,KAAK,SAAS,CAAC,UAAU,GAAG;AAC5B,KAAK,SAAS,CAAC,iBAAiB,GAAG;AACnC,KAAK,SAAS,CAAC,MAAM,GAAG;AACxB,KAAK,SAAS,CAAC,cAAc,GAAG;AAChC,KAAK,SAAS,CAAC,cAAc,GAAG;AAChC,KAAK,SAAS,CAAC,qBAAqB,GAAG;AACvC,KAAK,SAAS,CAAC,eAAe,GAAG;AACjC,KAAK,SAAS,CAAC,OAAO,GAAG"}},
    {"offset": {"line": 3804, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3809, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/types.js"],"sourcesContent":["let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA,IAAI,SAAS;AAEN,MAAM,UAAU;AAChB,MAAM,aAAa;AACnB,MAAM,oBAAoB;AAC1B,MAAM,SAAS;AACf,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;AACvB,MAAM,wBAAwB;AAErC,SAAS;IACP,OAAO,KAAK,EAAE;AAChB"}},
    {"offset": {"line": 3829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3834, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/defined-info.js"],"sourcesContent":["import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAGA,+BAA+B,GAC/B,0BAA0B;AAC1B,MAAM,SAAS,OAAO,IAAI;AAEnB,MAAM;IACX;;;;;;GAMC,GACD,YAAY,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,CAAE;QAC5C,IAAI,QAAQ,CAAC;QAEb,KAAK,CAAC,UAAU;QAEhB,KAAK,IAAI,EAAE,SAAS;QAEpB,IAAI,OAAO,SAAS,UAAU;YAC5B,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;gBAC9B,MAAM,QAAQ,MAAM,CAAC,MAAM;gBAC3B,KAAK,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,4NAAK,CAAC,MAAM,MAAM,4NAAK,CAAC,MAAM;YAClE;QACF;IACF;AACF;AAEA,YAAY,SAAS,CAAC,OAAO,GAAG;AAEhC;;;;CAIC,GACD,SAAS,KAAK,MAAM,EAAE,GAAG,EAAE,KAAK;IAC9B,IAAI,OAAO;QACT,wEAAwE;QACxE,MAAM,CAAC,IAAI,GAAG;IAChB;AACF"}},
    {"offset": {"line": 3874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3879, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/find.js"],"sourcesContent":["/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;AAMD,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,MAAM;AAOL,SAAS,KAAK,MAAM,EAAE,KAAK;IAChC,MAAM,SAAS,sOAAU;IACzB,IAAI,OAAO;IACX,IAAI;IAEJ,IAAI,UAAU,OAAO,MAAM,EAAE;QAC3B,OAAO,OAAO,QAAQ,CAAC,OAAO,MAAM,CAAC,OAAO,CAAC;IAC/C;IAEA,IAAI,OAAO,MAAM,GAAG,KAAK,OAAO,KAAK,CAAC,GAAG,OAAO,UAAU,MAAM,IAAI,CAAC,QAAQ;QAC3E,yBAAyB;QACzB,IAAI,MAAM,MAAM,CAAC,OAAO,KAAK;YAC3B,2BAA2B;YAC3B,MAAM,OAAO,MAAM,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM;YAC1C,OAAO,SAAS,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;QAC5D,OAAO;YACL,6BAA6B;YAC7B,MAAM,OAAO,MAAM,KAAK,CAAC;YAEzB,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO;gBACpB,IAAI,SAAS,KAAK,OAAO,CAAC,KAAK;gBAE/B,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK;oBAC5B,SAAS,MAAM;gBACjB;gBAEA,QAAQ,SAAS;YACnB;QACF;QAEA;IACF;IAEA,OAAO,IAAI,KAAK,MAAM;AACxB;AAEA;;;CAGC,GACD,SAAS,MAAM,EAAE;IACf,OAAO,MAAM,GAAG,WAAW;AAC7B;AAEA;;;CAGC,GACD,SAAS,UAAU,EAAE;IACnB,OAAO,GAAG,MAAM,CAAC,GAAG,WAAW;AACjC"}},
    {"offset": {"line": 3934, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3939, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/case-sensitive-transform.js"],"sourcesContent":["/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,SAAS,uBAAuB,UAAU,EAAE,SAAS;IAC1D,OAAO,aAAa,aAAa,UAAU,CAAC,UAAU,GAAG;AAC3D"}},
    {"offset": {"line": 3949, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3954, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/schema.js"],"sourcesContent":["/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AAEM,MAAM;IACX;;;;;GAKC,GACD,YAAY,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE;QACnC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,OAAO;YACT,IAAI,CAAC,KAAK,GAAG;QACf;IACF;AACF;AAEA,uBAAuB,GACvB,OAAO,SAAS,CAAC,QAAQ,GAAG,CAAC;AAC7B,mBAAmB,GACnB,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC;AAC3B,wBAAwB,GACxB,OAAO,SAAS,CAAC,KAAK,GAAG"}},
    {"offset": {"line": 3978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3983, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/create.js"],"sourcesContent":["/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC;;;;;;;;;;AAMD,MAAM,MAAM,CAAC,EAAE,cAAc;AAMtB,SAAS,OAAO,UAAU;IAC/B,uBAAuB,GACvB,MAAM,WAAW,CAAC;IAClB,mBAAmB,GACnB,MAAM,SAAS,CAAC;IAChB,mBAAmB,GACnB,IAAI;IAEJ,IAAK,QAAQ,WAAW,UAAU,CAAE;QAClC,IAAI,IAAI,IAAI,CAAC,WAAW,UAAU,EAAE,OAAO;YACzC,MAAM,QAAQ,WAAW,UAAU,CAAC,KAAK;YACzC,MAAM,OAAO,0PACX,MACA,WAAW,SAAS,CAAC,WAAW,UAAU,IAAI,CAAC,GAAG,OAClD,OACA,WAAW,KAAK;YAGlB,IACE,WAAW,eAAe,IAC1B,WAAW,eAAe,CAAC,QAAQ,CAAC,OACpC;gBACA,KAAK,eAAe,GAAG;YACzB;YAEA,QAAQ,CAAC,KAAK,GAAG;YAEjB,MAAM,CAAC,sOAAU,MAAM,GAAG;YAC1B,MAAM,CAAC,sOAAU,KAAK,SAAS,EAAE,GAAG;QACtC;IACF;IAEA,OAAO,4OAAW,UAAU,QAAQ,WAAW,KAAK;AACtD"}},
    {"offset": {"line": 4024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4029, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/svg.js"],"sourcesContent":["import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4601, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/case-insensitive-transform.js"],"sourcesContent":["import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n"],"names":[],"mappings":";;;;;;AAOO,SAAS,yBAAyB,UAAU,EAAE,QAAQ;IAC3D,OAAO,gRAAuB,YAAY,SAAS,WAAW;AAChE"}},
    {"offset": {"line": 4610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4615, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/html.js"],"sourcesContent":["import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4942, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/aria.js"],"sourcesContent":["import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,OAAO,wOAAO;IACzB,WAAU,CAAC,EAAE,IAAI;QACf,OAAO,SAAS,SAAS,OAAO,UAAU,KAAK,KAAK,CAAC,GAAG,WAAW;IACrE;IACA,YAAY;QACV,sBAAsB;QACtB,UAAU;QACV,kBAAkB;QAClB,QAAQ;QACR,WAAW;QACX,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,aAAa;QACb,eAAe;QACf,aAAa;QACb,YAAY;QACZ,cAAc;QACd,kBAAkB;QAClB,YAAY;QACZ,UAAU;QACV,WAAW;QACX,cAAc;QACd,UAAU;QACV,aAAa;QACb,kBAAkB;QAClB,WAAW;QACX,cAAc;QACd,SAAS;QACT,UAAU;QACV,SAAS;QACT,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,QAAQ;QACR,iBAAiB;QACjB,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,cAAc;QACd,YAAY;QACZ,mBAAmB;QACnB,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,WAAW;QACX,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,YAAY;QACZ,eAAe;QACf,MAAM;IACR;AACF"}},
    {"offset": {"line": 5006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5011, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/xmlns.js"],"sourcesContent":["import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,QAAQ,wOAAO;IAC1B,OAAO;IACP,YAAY;QAAC,YAAY;IAAa;IACtC,SAAS;IACT,YAAY;QAAC,OAAO;QAAM,YAAY;IAAI;AAC5C"}},
    {"offset": {"line": 5030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5035, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/xml.js"],"sourcesContent":["import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,MAAM,wOAAO;IACxB,OAAO;IACP,WAAU,CAAC,EAAE,IAAI;QACf,OAAO,SAAS,KAAK,KAAK,CAAC,GAAG,WAAW;IAC3C;IACA,YAAY;QAAC,SAAS;QAAM,SAAS;QAAM,UAAU;IAAI;AAC3D"}},
    {"offset": {"line": 5052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5057, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/xlink.js"],"sourcesContent":["import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,QAAQ,wOAAO;IAC1B,OAAO;IACP,WAAU,CAAC,EAAE,IAAI;QACf,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG,WAAW;IAC7C;IACA,YAAY;QACV,cAAc;QACd,cAAc;QACd,WAAW;QACX,WAAW;QACX,WAAW;QACX,YAAY;QACZ,WAAW;IACb;AACF"}},
    {"offset": {"line": 5078, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5083, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/lib/util/merge.js"],"sourcesContent":["/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;AASM,SAAS,MAAM,WAAW,EAAE,KAAK;IACtC,uBAAuB,GACvB,MAAM,WAAW,CAAC;IAClB,mBAAmB,GACnB,MAAM,SAAS,CAAC;IAChB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,YAAY,MAAM,CAAE;QACnC,OAAO,MAAM,CAAC,UAAU,WAAW,CAAC,MAAM,CAAC,QAAQ;QACnD,OAAO,MAAM,CAAC,QAAQ,WAAW,CAAC,MAAM,CAAC,MAAM;IACjD;IAEA,OAAO,4OAAW,UAAU,QAAQ;AACtC"}},
    {"offset": {"line": 5102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5107, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/property-information@6.4.0/node_modules/property-information/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaM,MAAM,OAAO,sOAAM;;;;;;CAAmC,EAAE;AACxD,MAAM,MAAM,sOAAM;;;;;;CAAkC,EAAE"}},
    {"offset": {"line": 5152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5156, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/inline-style-parser@0.1.1/node_modules/inline-style-parser/index.js"],"sourcesContent":["// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5369, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/style-to-object@0.4.4/node_modules/style-to-object/index.js"],"sourcesContent":["var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n"],"names":[],"mappings":"AAAA,IAAI,QAAQ;AAEZ;;;;;;;;;;CAUC,GACD,SAAS,cAAc,KAAK,EAAE,QAAQ;IACpC,IAAI,SAAS;IACb,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,IAAI;IACJ,IAAI,eAAe,MAAM;IACzB,IAAI,cAAc,OAAO,aAAa;IACtC,IAAI;IACJ,IAAI;IAEJ,IAAK,IAAI,IAAI,GAAG,MAAM,aAAa,MAAM,EAAE,IAAI,KAAK,IAAK;QACvD,cAAc,YAAY,CAAC,EAAE;QAC7B,WAAW,YAAY,QAAQ;QAC/B,QAAQ,YAAY,KAAK;QAEzB,IAAI,aAAa;YACf,SAAS,UAAU,OAAO;QAC5B,OAAO,IAAI,OAAO;YAChB,UAAU,CAAC,SAAS,CAAC,CAAC;YACtB,MAAM,CAAC,SAAS,GAAG;QACrB;IACF;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;AACjB,OAAO,OAAO,CAAC,OAAO,GAAG,eAAe,cAAc"}},
    {"offset": {"line": 5405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5422, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-is-identifier-name@2.1.0/node_modules/estree-util-is-identifier-name/lib/regex.js"],"sourcesContent":["// This module is generated by `build.js`.\nexport const start =\n  /[$A-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\nexport const cont =\n  /[\\d\\u00B7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F]/\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;;AACnC,MAAM,QACX;AACK,MAAM,OACX"}},
    {"offset": {"line": 5429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5434, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-is-identifier-name@2.1.0/node_modules/estree-util-is-identifier-name/lib/index.js"],"sourcesContent":["import {start as startRe, cont as contRe} from './regex.js'\n\n/**\n * Checks if the given character code can start an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// To do: support astrals.\nexport function start(code) {\n  return startRe.test(String.fromCharCode(code))\n}\n\n/**\n * Checks if the given character code can continue an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// To do: support astrals.\nexport function cont(code) {\n  const character = String.fromCharCode(code)\n  return startRe.test(character) || contRe.test(character)\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name) {\n  let index = -1\n\n  while (++index < name.length) {\n    if (!(index ? cont : start)(name.charCodeAt(index))) return false\n  }\n\n  // `false` if `name` is empty.\n  return index > 0\n}\n"],"names":[],"mappings":";;;;;;;;AAWO,SAAS,MAAM,IAAI;IACxB,OAAO,oQAAQ,IAAI,CAAC,OAAO,YAAY,CAAC;AAC1C;AAWO,SAAS,KAAK,IAAI;IACvB,MAAM,YAAY,OAAO,YAAY,CAAC;IACtC,OAAO,oQAAQ,IAAI,CAAC,cAAc,mQAAO,IAAI,CAAC;AAChD;AAUO,SAAS,KAAK,IAAI;IACvB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,KAAK,MAAM,CAAE;QAC5B,IAAI,CAAC,CAAC,QAAQ,OAAO,KAAK,EAAE,KAAK,UAAU,CAAC,SAAS,OAAO;IAC9D;IAEA,8BAA8B;IAC9B,OAAO,QAAQ;AACjB"}},
    {"offset": {"line": 5457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5475, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js"],"sourcesContent":["/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;AAED,MAAM,UAAU;AAChB,MAAM,SAAS;AACf,MAAM,YAAY;AAClB,MAAM,SAAS;AACf,MAAM,YAAY;AAElB,oBAAoB,GACpB,MAAM,eAAe,CAAC;AAWf,SAAS,MAAM,IAAI;IACxB,OAAO,OAAO,QAAQ,IAAI,CAAC,OAAO,aAAa,CAAC,SAAS;AAC3D;AAaO,SAAS,KAAK,IAAI,EAAE,OAAO;IAChC,MAAM,WAAW,WAAW;IAC5B,MAAM,KAAK,SAAS,GAAG,GAAG,YAAY;IACtC,OAAO,OAAO,GAAG,IAAI,CAAC,OAAO,aAAa,CAAC,SAAS;AACtD;AAYO,SAAS,KAAK,IAAI,EAAE,OAAO;IAChC,MAAM,WAAW,WAAW;IAC5B,MAAM,KAAK,SAAS,GAAG,GAAG,YAAY;IACtC,OAAO,GAAG,IAAI,CAAC;AACjB"}},
    {"offset": {"line": 5504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5509, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {cont, name, start} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 5519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5524, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js"],"sourcesContent":["/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;AACM,SAAS,MAAM,KAAK;IACzB,MAAM,QAAQ,OAAO,SAAS,IAAI,IAAI;IACtC,OAAO,QAAQ,MAAM,KAAK,CAAC,mBAAmB,EAAE;AAClD;AAUO,SAAS,UAAU,MAAM;IAC9B,OAAO,OAAO,IAAI,CAAC,KAAK,IAAI;AAC9B"}},
    {"offset": {"line": 5542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5547, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js"],"sourcesContent":["/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED;;;CAGC,GAED;;;;;;;CAOC;;;;AACM,SAAS,MAAM,KAAK;IACzB,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,MAAM,QAAQ,OAAO,SAAS;IAC9B,IAAI,QAAQ,MAAM,OAAO,CAAC;IAC1B,IAAI,QAAQ;IACZ,oBAAoB,GACpB,IAAI,MAAM;IAEV,MAAO,CAAC,IAAK;QACX,IAAI,UAAU,CAAC,GAAG;YAChB,QAAQ,MAAM,MAAM;YACpB,MAAM;QACR;QAEA,MAAM,QAAQ,MAAM,KAAK,CAAC,OAAO,OAAO,IAAI;QAE5C,IAAI,SAAS,CAAC,KAAK;YACjB,OAAO,IAAI,CAAC;QACd;QAEA,QAAQ,QAAQ;QAChB,QAAQ,MAAM,OAAO,CAAC,KAAK;IAC7B;IAEA,OAAO;AACT;AAYO,SAAS,UAAU,MAAM,EAAE,OAAO;IACvC,MAAM,WAAW,WAAW,CAAC;IAE7B,uCAAuC;IACvC,MAAM,QAAQ,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE,KAAK,KAAK;WAAI;QAAQ;KAAG,GAAG;IAEnE,OAAO,MACJ,IAAI,CACH,CAAC,SAAS,QAAQ,GAAG,MAAM,EAAE,IAC3B,MACA,CAAC,SAAS,OAAO,KAAK,QAAQ,KAAK,GAAG,GAEzC,IAAI;AACT"}},
    {"offset": {"line": 5597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5602, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js"],"sourcesContent":["/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC,GAED;;;;;;;;;;CAUC,GAED;;;;;;;;;CASC,GAED;;;;;;;;;;;;CAYC;;;AAED,MAAM,MAAM,CAAC,EAAE,cAAc;AActB,SAAS,OAAO,GAAG,EAAE,OAAO;IACjC,MAAM,WAAW,WAAW,CAAC;IAE7B;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BC,GACD,SAAS,IAAI,KAAK,EAAE,GAAG,UAAU;QAC/B,8BAA8B,GAC9B,IAAI,KAAK,IAAI,OAAO;QACpB,MAAM,WAAW,IAAI,QAAQ;QAE7B,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,MAAM;YACjC,8BAA8B;YAC9B,MAAM,KAAK,OAAO,KAAK,CAAC,IAAI;YAC5B,8BAA8B;YAC9B,KAAK,IAAI,IAAI,CAAC,UAAU,MAAM,QAAQ,CAAC,GAAG,GAAG,IAAI,OAAO;QAC1D;QAEA,IAAI,IAAI;YACN,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU;QACjC;IACF;IAEA,IAAI,QAAQ,GAAG,SAAS,QAAQ,IAAI,CAAC;IACrC,IAAI,OAAO,GAAG,SAAS,OAAO;IAC9B,IAAI,OAAO,GAAG,SAAS,OAAO;IAE9B,6BAA6B;IAC7B,OAAO;AACT"}},
    {"offset": {"line": 5695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5700, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-position@4.0.4/node_modules/unist-util-position/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;CAOC;;;;;AACM,MAAM,aAAa,MAAM;AAUzB,MAAM,WAAW,MAAM;AAUvB,SAAS,SAAS,IAAI;IAC3B,OAAO;QAAC,OAAO,WAAW;QAAO,KAAK,SAAS;IAAK;AACtD;AAEA;;;;;;;CAOC,GACD,SAAS,MAAM,IAAI;IACjB,OAAO;IAEP;;;;;GAKC,GACD,SAAS,MAAM,IAAI;QACjB,MAAM,QAAQ,AAAC,QAAQ,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,KAAK,IAAK,CAAC;QAEjE,uDAAuD;QACvD,OAAO;YACL,kDAAkD;YAClD,MAAM,MAAM,IAAI,IAAI;YACpB,kDAAkD;YAClD,QAAQ,MAAM,MAAM,IAAI;YACxB,kDAAkD;YAClD,QAAQ,MAAM,MAAM,GAAG,CAAC,IAAI,MAAM,MAAM,GAAG;QAC7C;IACF;AACF"}},
    {"offset": {"line": 5764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5782, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;;;CAaC,GAED;;;;;;;CAOC;;;;;AACM,MAAM,WAAW,MAAM;AAUvB,MAAM,aAAa,MAAM;AAEhC;;;;;;;CAOC,GACD,SAAS,MAAM,IAAI;IACjB,OAAO;IAEP;;;;;GAKC,GACD,SAAS,MAAM,IAAI;QACjB,MAAM,QAAQ,AAAC,QAAQ,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,KAAK,IAAK,CAAC;QAEjE,IACE,OAAO,MAAM,IAAI,KAAK,YACtB,MAAM,IAAI,GAAG,KACb,OAAO,MAAM,MAAM,KAAK,YACxB,MAAM,MAAM,GAAG,GACf;YACA,OAAO;gBACL,MAAM,MAAM,IAAI;gBAChB,QAAQ,MAAM,MAAM;gBACpB,QACE,OAAO,MAAM,MAAM,KAAK,YAAY,MAAM,MAAM,GAAG,CAAC,IAChD,MAAM,MAAM,GACZ;YACR;QACF;IACF;AACF;AAUO,SAAS,SAAS,IAAI;IAC3B,MAAM,QAAQ,WAAW;IACzB,MAAM,MAAM,SAAS;IAErB,IAAI,SAAS,KAAK;QAChB,OAAO;YAAC;YAAO;QAAG;IACpB;AACF"}},
    {"offset": {"line": 5848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 5861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5866, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/dequal@2.0.3/node_modules/dequal/dist/index.mjs"],"sourcesContent":["var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n"],"names":[],"mappings":";;;AAAA,IAAI,MAAM,OAAO,SAAS,CAAC,cAAc;AAEzC,SAAS,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG;IAC3B,KAAK,OAAO,KAAK,IAAI,GAAI;QACxB,IAAI,OAAO,KAAK,MAAM,OAAO;IAC9B;AACD;AAEO,SAAS,OAAO,GAAG,EAAE,GAAG;IAC9B,IAAI,MAAM,KAAK;IACf,IAAI,QAAQ,KAAK,OAAO;IAExB,IAAI,OAAO,OAAO,CAAC,OAAK,IAAI,WAAW,MAAM,IAAI,WAAW,EAAE;QAC7D,IAAI,SAAS,MAAM,OAAO,IAAI,OAAO,OAAO,IAAI,OAAO;QACvD,IAAI,SAAS,QAAQ,OAAO,IAAI,QAAQ,OAAO,IAAI,QAAQ;QAE3D,IAAI,SAAS,OAAO;YACnB,IAAI,CAAC,MAAI,IAAI,MAAM,MAAM,IAAI,MAAM,EAAE;gBACpC,MAAO,SAAS,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI;YAC1C;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,SAAS,KAAK;YACjB,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;gBAC1B,OAAO;YACR;YACA,KAAK,OAAO,IAAK;gBAChB,MAAM;gBACN,IAAI,OAAO,OAAO,QAAQ,UAAU;oBACnC,MAAM,KAAK,KAAK;oBAChB,IAAI,CAAC,KAAK,OAAO;gBAClB;gBACA,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,OAAO;YAC3B;YACA,OAAO;QACR;QAEA,IAAI,SAAS,KAAK;YACjB,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;gBAC1B,OAAO;YACR;YACA,KAAK,OAAO,IAAK;gBAChB,MAAM,GAAG,CAAC,EAAE;gBACZ,IAAI,OAAO,OAAO,QAAQ,UAAU;oBACnC,MAAM,KAAK,KAAK;oBAChB,IAAI,CAAC,KAAK,OAAO;gBAClB;gBACA,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO;oBAClC,OAAO;gBACR;YACD;YACA,OAAO;QACR;QAEA,IAAI,SAAS,aAAa;YACzB,MAAM,IAAI,WAAW;YACrB,MAAM,IAAI,WAAW;QACtB,OAAO,IAAI,SAAS,UAAU;YAC7B,IAAI,CAAC,MAAI,IAAI,UAAU,MAAM,IAAI,UAAU,EAAE;gBAC5C,MAAO,SAAS,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC;YAClD;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,YAAY,MAAM,CAAC,MAAM;YAC5B,IAAI,CAAC,MAAI,IAAI,UAAU,MAAM,IAAI,UAAU,EAAE;gBAC5C,MAAO,SAAS,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI;YACtC;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,CAAC,QAAQ,OAAO,QAAQ,UAAU;YACrC,MAAM;YACN,IAAK,QAAQ,IAAK;gBACjB,IAAI,IAAI,IAAI,CAAC,KAAK,SAAS,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,OAAO,OAAO;gBACjE,IAAI,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,OAAO;YAC7D;YACA,OAAO,OAAO,IAAI,CAAC,KAAK,MAAM,KAAK;QACpC;IACD;IAEA,OAAO,QAAQ,OAAO,QAAQ;AAC/B"}},
    {"offset": {"line": 5943, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5947, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/dequal@2.0.3/node_modules/dequal/dist/index.js"],"sourcesContent":["var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nfunction dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n\nexports.dequal = dequal;"],"names":[],"mappings":"AAAA,IAAI,MAAM,OAAO,SAAS,CAAC,cAAc;AAEzC,SAAS,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG;IAC3B,KAAK,OAAO,KAAK,IAAI,GAAI;QACxB,IAAI,OAAO,KAAK,MAAM,OAAO;IAC9B;AACD;AAEA,SAAS,OAAO,GAAG,EAAE,GAAG;IACvB,IAAI,MAAM,KAAK;IACf,IAAI,QAAQ,KAAK,OAAO;IAExB,IAAI,OAAO,OAAO,CAAC,OAAK,IAAI,WAAW,MAAM,IAAI,WAAW,EAAE;QAC7D,IAAI,SAAS,MAAM,OAAO,IAAI,OAAO,OAAO,IAAI,OAAO;QACvD,IAAI,SAAS,QAAQ,OAAO,IAAI,QAAQ,OAAO,IAAI,QAAQ;QAE3D,IAAI,SAAS,OAAO;YACnB,IAAI,CAAC,MAAI,IAAI,MAAM,MAAM,IAAI,MAAM,EAAE;gBACpC,MAAO,SAAS,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI;YAC1C;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,SAAS,KAAK;YACjB,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;gBAC1B,OAAO;YACR;YACA,KAAK,OAAO,IAAK;gBAChB,MAAM;gBACN,IAAI,OAAO,OAAO,QAAQ,UAAU;oBACnC,MAAM,KAAK,KAAK;oBAChB,IAAI,CAAC,KAAK,OAAO;gBAClB;gBACA,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,OAAO;YAC3B;YACA,OAAO;QACR;QAEA,IAAI,SAAS,KAAK;YACjB,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;gBAC1B,OAAO;YACR;YACA,KAAK,OAAO,IAAK;gBAChB,MAAM,GAAG,CAAC,EAAE;gBACZ,IAAI,OAAO,OAAO,QAAQ,UAAU;oBACnC,MAAM,KAAK,KAAK;oBAChB,IAAI,CAAC,KAAK,OAAO;gBAClB;gBACA,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO;oBAClC,OAAO;gBACR;YACD;YACA,OAAO;QACR;QAEA,IAAI,SAAS,aAAa;YACzB,MAAM,IAAI,WAAW;YACrB,MAAM,IAAI,WAAW;QACtB,OAAO,IAAI,SAAS,UAAU;YAC7B,IAAI,CAAC,MAAI,IAAI,UAAU,MAAM,IAAI,UAAU,EAAE;gBAC5C,MAAO,SAAS,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC;YAClD;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,YAAY,MAAM,CAAC,MAAM;YAC5B,IAAI,CAAC,MAAI,IAAI,UAAU,MAAM,IAAI,UAAU,EAAE;gBAC5C,MAAO,SAAS,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI;YACtC;YACA,OAAO,QAAQ,CAAC;QACjB;QAEA,IAAI,CAAC,QAAQ,OAAO,QAAQ,UAAU;YACrC,MAAM;YACN,IAAK,QAAQ,IAAK;gBACjB,IAAI,IAAI,IAAI,CAAC,KAAK,SAAS,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,OAAO,OAAO;gBACjE,IAAI,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,OAAO;YAC7D;YACA,OAAO,OAAO,IAAI,CAAC,KAAK,MAAM,KAAK;QACpC;IACD;IAEA,OAAO,QAAQ,OAAO,QAAQ;AAC/B;AAEA,QAAQ,MAAM,GAAG"}},
    {"offset": {"line": 6022, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6027, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/development.js"],"sourcesContent":["import {dequal} from 'dequal'\n\n/**\n * @type {Set<string>}\n */\nconst codesWarned = new Set()\n\nclass AssertionError extends Error {\n  name = /** @type {const} */ ('Assertion')\n  code = /** @type {const} */ ('ERR_ASSERTION')\n\n  /**\n   * Create an assertion error.\n   *\n   * @param {string} message\n   *   Message explaining error.\n   * @param {unknown} actual\n   *   Value.\n   * @param {unknown} expected\n   *   Baseline.\n   * @param {string} operator\n   *   Name of equality operation.\n   * @param {boolean} generated\n   *   Whether `message` is a custom message or not\n   * @returns\n   *   Instance.\n   */\n  // eslint-disable-next-line max-params\n  constructor(message, actual, expected, operator, generated) {\n    super(message)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n\n    /**\n     * @type {unknown}\n     */\n    this.actual = actual\n\n    /**\n     * @type {unknown}\n     */\n    this.expected = expected\n\n    /**\n     * @type {boolean}\n     */\n    this.generated = generated\n\n    /**\n     * @type {string}\n     */\n    this.operator = operator\n  }\n}\n\nclass DeprecationError extends Error {\n  name = /** @type {const} */ ('DeprecationWarning')\n\n  /**\n   * Create a deprecation message.\n   *\n   * @param {string} message\n   *   Message explaining deprecation.\n   * @param {string | undefined} code\n   *   Deprecation identifier; deprecation messages will be generated only once per code.\n   * @returns\n   *   Instance.\n   */\n  constructor(message, code) {\n    super(message)\n\n    /**\n     * @type {string | undefined}\n     */\n    this.code = code\n  }\n}\n\n/**\n * Wrap a function or class to show a deprecation message when first called.\n *\n * > 👉 **Important**: only shows a message when the `development` condition is\n * > used, does nothing in production.\n *\n * When the resulting wrapped `fn` is called, emits a warning once to\n * `console.error` (`stderr`).\n * If a code is given, one warning message will be emitted in total per code.\n *\n * @template {Function} T\n *   Function or class kind.\n * @param {T} fn\n *   Function or class.\n * @param {string} message\n *   Message explaining deprecation.\n * @param {string | null | undefined} [code]\n *   Deprecation identifier (optional); deprecation messages will be generated\n *   only once per code.\n * @returns {T}\n *   Wrapped `fn`.\n */\nexport function deprecate(fn, message, code) {\n  let warned = false\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  Object.setPrototypeOf(deprecated, fn)\n\n  // @ts-expect-error: it’s perfect, typescript…\n  return deprecated\n\n  /**\n   * @this {unknown}\n   * @param  {...Array<unknown>} args\n   * @returns {unknown}\n   */\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true\n\n      if (typeof code === 'string' && codesWarned.has(code)) {\n        // Empty.\n      } else {\n        console.error(new DeprecationError(message, code || undefined))\n\n        if (typeof code === 'string') codesWarned.add(code)\n      }\n    }\n\n    return new.target\n      ? Reflect.construct(fn, args, new.target)\n      : Reflect.apply(fn, this, args)\n  }\n}\n\n/**\n * Assert deep strict equivalence.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @template {unknown} T\n *   Expected kind.\n * @param {unknown} actual\n *   Value.\n * @param {T} expected\n *   Baseline.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected values to be deeply equal'`).\n * @returns {asserts actual is T}\n *   Nothing; throws when `actual` is not deep strict equal to `expected`.\n * @throws {AssertionError}\n *   Throws when `actual` is not deep strict equal to `expected`.\n */\nexport function equal(actual, expected, message) {\n  assert(\n    dequal(actual, expected),\n    actual,\n    expected,\n    'equal',\n    'Expected values to be deeply equal',\n    message\n  )\n}\n\n/**\n * Assert if `value` is truthy.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {unknown} value\n *   Value to assert.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected value to be truthy'`).\n * @returns {asserts value}\n *   Nothing; throws when `value` is falsey.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function ok(value, message) {\n  assert(\n    Boolean(value),\n    false,\n    true,\n    'ok',\n    'Expected value to be truthy',\n    message\n  )\n}\n\n/**\n * Assert that a code path never happens.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Unreachable'`).\n * @returns {never}\n *   Nothing; always throws.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function unreachable(message) {\n  assert(false, false, true, 'ok', 'Unreachable', message)\n}\n\n/**\n * @param {boolean} bool\n *   Whether to skip this operation.\n * @param {unknown} actual\n *   Actual value.\n * @param {unknown} expected\n *   Expected value.\n * @param {string} operator\n *   Operator.\n * @param {string} defaultMessage\n *   Default message for operation.\n * @param {Error | string | null | undefined} userMessage\n *   User-provided message.\n * @returns {asserts bool}\n *   Nothing; throws when falsey.\n */\n// eslint-disable-next-line max-params\nfunction assert(bool, actual, expected, operator, defaultMessage, userMessage) {\n  if (!bool) {\n    throw userMessage instanceof Error\n      ? userMessage\n      : new AssertionError(\n          userMessage || defaultMessage,\n          actual,\n          expected,\n          operator,\n          !userMessage\n        )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;;CAEC,GACD,MAAM,cAAc,IAAI;AAExB,MAAM,uBAAuB;IAC3B,OAA6B,YAAY;IACzC,OAA6B,gBAAgB;IAE7C;;;;;;;;;;;;;;;GAeC,GACD,sCAAsC;IACtC,YAAY,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAE;QAC1D,KAAK,CAAC;QAEN,IAAI,MAAM,iBAAiB,EAAE;YAC3B,MAAM,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW;QAChD;QAEA;;KAEC,GACD,IAAI,CAAC,MAAM,GAAG;QAEd;;KAEC,GACD,IAAI,CAAC,QAAQ,GAAG;QAEhB;;KAEC,GACD,IAAI,CAAC,SAAS,GAAG;QAEjB;;KAEC,GACD,IAAI,CAAC,QAAQ,GAAG;IAClB;AACF;AAEA,MAAM,yBAAyB;IAC7B,OAA6B,qBAAqB;IAElD;;;;;;;;;GASC,GACD,YAAY,OAAO,EAAE,IAAI,CAAE;QACzB,KAAK,CAAC;QAEN;;KAEC,GACD,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAwBO,SAAS,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI;IACzC,IAAI,SAAS;IAEb,6EAA6E;IAC7E,OAAO,cAAc,CAAC,YAAY;IAElC,8CAA8C;IAC9C,OAAO;IAEP;;;;GAIC,GACD,SAAS,WAAW,GAAG,IAAI;QACzB,IAAI,CAAC,QAAQ;YACX,SAAS;YAET,IAAI,OAAO,SAAS,YAAY,YAAY,GAAG,CAAC,OAAO;YACrD,SAAS;YACX,OAAO;gBACL,QAAQ,KAAK,CAAC,IAAI,iBAAiB,SAAS,QAAQ;gBAEpD,IAAI,OAAO,SAAS,UAAU,YAAY,GAAG,CAAC;YAChD;QACF;QAEA,OAAO,aACH,QAAQ,SAAS,CAAC,IAAI,MAAM,cAC5B,QAAQ,KAAK,CAAC,IAAI,IAAI,EAAE;IAC9B;AACF;AAqBO,SAAS,MAAM,MAAM,EAAE,QAAQ,EAAE,OAAO;IAC7C,OACE,+LAAO,QAAQ,WACf,QACA,UACA,SACA,sCACA;AAEJ;AAiBO,SAAS,GAAG,KAAK,EAAE,OAAO;IAC/B,OACE,QAAQ,QACR,OACA,MACA,MACA,+BACA;AAEJ;AAeO,SAAS,YAAY,OAAO;IACjC,OAAO,OAAO,OAAO,MAAM,MAAM,eAAe;AAClD;AAEA;;;;;;;;;;;;;;;CAeC,GACD,sCAAsC;AACtC,SAAS,OAAO,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,WAAW;IAC3E,IAAI,CAAC,MAAM;QACT,MAAM,uBAAuB,QACzB,cACA,IAAI,eACF,eAAe,gBACf,QACA,UACA,UACA,CAAC;IAET;AACF"}},
    {"offset": {"line": 6148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6153, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-to-js@1.2.0/node_modules/estree-util-to-js/lib/jsx.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').JSXAttribute} JSXAttribute\n * @typedef {import('estree-jsx').JSXClosingElement} JSXClosingElement\n * @typedef {import('estree-jsx').JSXClosingFragment} JSXClosingFragment\n * @typedef {import('estree-jsx').JSXElement} JSXElement\n * @typedef {import('estree-jsx').JSXExpressionContainer} JSXExpressionContainer\n * @typedef {import('estree-jsx').JSXFragment} JSXFragment\n * @typedef {import('estree-jsx').JSXIdentifier} JSXIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JSXMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JSXNamespacedName\n * @typedef {import('estree-jsx').JSXOpeningElement} JSXOpeningElement\n * @typedef {import('estree-jsx').JSXOpeningFragment} JSXOpeningFragment\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JSXSpreadAttribute\n * @typedef {import('estree-jsx').JSXText} JSXText\n * @typedef {import('./types.js').Generator} Generator\n * @typedef {import('./types.js').State} State\n */\n\nexport const jsx = {\n  JSXAttribute,\n  JSXClosingElement,\n  JSXClosingFragment,\n  JSXElement,\n  JSXEmptyExpression,\n  JSXExpressionContainer,\n  JSXFragment,\n  JSXIdentifier,\n  JSXMemberExpression,\n  JSXNamespacedName,\n  JSXOpeningElement,\n  JSXOpeningFragment,\n  JSXSpreadAttribute,\n  JSXText\n}\n\n/**\n * `attr`\n * `attr=\"something\"`\n * `attr={1}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXAttribute(node, state) {\n  this[node.name.type](node.name, state)\n\n  if (node.value !== undefined && node.value !== null) {\n    state.write('=')\n\n    // Encode double quotes in attribute values.\n    if (node.value.type === 'Literal') {\n      state.write(\n        '\"' + encodeJsx(String(node.value.value)).replace(/\"/g, '&quot;') + '\"',\n        node\n      )\n    } else {\n      this[node.value.type](node.value, state)\n    }\n  }\n}\n\n/**\n * `</div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXClosingElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXClosingElement(node, state) {\n  state.write('</')\n  this[node.name.type](node.name, state)\n  state.write('>')\n}\n\n/**\n * `</>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXClosingFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXClosingFragment(node, state) {\n  state.write('</>', node)\n}\n\n/**\n * `<div />`\n * `<div></div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXElement(node, state) {\n  let index = -1\n\n  this[node.openingElement.type](node.openingElement, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  if (node.closingElement) {\n    this[node.closingElement.type](node.closingElement, state)\n  }\n}\n\n/**\n * `{}` (always in a `JSXExpressionContainer`, which does the curlies)\n *\n * @this {Generator}\n *   `astring` generator.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXEmptyExpression() {}\n\n/**\n * `{expression}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXExpressionContainer} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXExpressionContainer(node, state) {\n  state.write('{')\n  this[node.expression.type](node.expression, state)\n  state.write('}')\n}\n\n/**\n * `<></>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXFragment(node, state) {\n  let index = -1\n\n  this[node.openingFragment.type](node.openingFragment, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  this[node.closingFragment.type](node.closingFragment, state)\n}\n\n/**\n * `div`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXIdentifier} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXIdentifier(node, state) {\n  state.write(node.name, node)\n}\n\n/**\n * `member.expression`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXMemberExpression} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXMemberExpression(node, state) {\n  this[node.object.type](node.object, state)\n  state.write('.')\n  this[node.property.type](node.property, state)\n}\n\n/**\n * `ns:name`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXNamespacedName} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXNamespacedName(node, state) {\n  this[node.namespace.type](node.namespace, state)\n  state.write(':')\n  this[node.name.type](node.name, state)\n}\n\n/**\n * `<div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXOpeningElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXOpeningElement(node, state) {\n  let index = -1\n\n  state.write('<')\n  this[node.name.type](node.name, state)\n\n  if (node.attributes) {\n    while (++index < node.attributes.length) {\n      state.write(' ')\n      this[node.attributes[index].type](node.attributes[index], state)\n    }\n  }\n\n  state.write(node.selfClosing ? ' />' : '>')\n}\n\n/**\n * `<>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXOpeningFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXOpeningFragment(node, state) {\n  state.write('<>', node)\n}\n\n/**\n * `{...argument}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXSpreadAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXSpreadAttribute(node, state) {\n  state.write('{')\n  // eslint-disable-next-line new-cap\n  this.SpreadElement(node, state)\n  state.write('}')\n}\n\n/**\n * `!`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JSXText} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {void}\n *   Nothing.\n */\nfunction JSXText(node, state) {\n  state.write(\n    encodeJsx(node.value).replace(/[<>{}]/g, ($0) =>\n      $0 === '<'\n        ? '&lt;'\n        : $0 === '>'\n        ? '&gt;'\n        : $0 === '{'\n        ? '&#123;'\n        : '&#125;'\n    ),\n    node\n  )\n}\n\n/**\n * Make sure that character references don’t pop up.\n *\n * For example, the text `&copy;` should stay that way, and not turn into `©`.\n * We could encode all `&` (easy but verbose) or look for actual valid\n * references (complex but cleanest output).\n * Looking for the 2nd character gives us a middle ground.\n * The `#` is for (decimal and hexadecimal) numeric references, the letters\n * are for the named references.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nfunction encodeJsx(value) {\n  return value.replace(/&(?=[#a-z])/gi, '&amp;')\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6458, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-to-js@1.2.0/node_modules/estree-util-to-js/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {typeof import('source-map').SourceMapGenerator} SourceMapGenerator\n * @typedef {import('source-map').RawSourceMap} Map\n * @typedef {import('./types.js').Handlers} Handlers\n */\n\n/**\n * @typedef BaseFields\n * @property {Handlers | null | undefined} [handlers]\n *   Object mapping node types to functions handling the corresponding nodes.\n *\n * @typedef SourceMapFieldsWithoutSourceMapGenerator\n * @property {null | undefined} [SourceMapGenerator]\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in.\n *   This works if there is positional info on nodes.\n * @property {null | undefined} [filePath]\n *   Path to input file.\n *   Only used in source map.\n *\n * @typedef SourceMapFieldsWithSourceMapGenerator\n * @property {SourceMapGenerator} SourceMapGenerator\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in.\n *   This works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file.\n *   Only used in source map.\n *\n * @typedef SourceMapFieldsMaybeSourceMapGenerator\n * @property {SourceMapGenerator | null | undefined} SourceMapGenerator\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in.\n *   This works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file.\n *   Only used in source map.\n *\n * @typedef {BaseFields & SourceMapFieldsWithoutSourceMapGenerator} OptionsWithoutSourceMapGenerator\n * @typedef {BaseFields & SourceMapFieldsWithSourceMapGenerator} OptionsWithSourceMapGenerator\n * @typedef {BaseFields & SourceMapFieldsMaybeSourceMapGenerator} OptionsWithMaybeMapGenerator\n *\n * @typedef {OptionsWithMaybeMapGenerator} Options\n *   Configuration (optional).\n *\n * @typedef BaseResultFields\n * @property {string} value\n *   Serialized JavaScript.\n *\n * @typedef ResultFieldsWithoutSourceMapGenerator\n * @property {undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is passed.\n *\n * @typedef ResultFieldsWithSourceMapGenerator\n * @property {Map} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is not passed.\n *\n * @typedef ResultFieldsMaybeSourceMapGenerator\n * @property {Map | undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` might be passed.\n *\n * @typedef {BaseResultFields & ResultFieldsWithoutSourceMapGenerator} ResultWithoutSourceMapGenerator\n * @typedef {BaseResultFields & ResultFieldsWithSourceMapGenerator} ResultWithSourceMapGenerator\n * @typedef {BaseResultFields & ResultFieldsMaybeSourceMapGenerator} ResultMaybeSourceMapGenerator\n *\n * @typedef {ResultMaybeSourceMapGenerator} Result\n */\n\n// @ts-expect-error: `astring` has broken types.\nimport * as astring from 'astring'\n\n/** @type {Handlers} */\nconst GENERATOR = astring.GENERATOR\n\n/** @type {(node: Program, options: unknown) => string} */\nconst generate = astring.generate\n\n/**\n * Serialize an estree as JavaScript.\n *\n * @param tree\n *   Estree (esast).\n * @param options\n *   Configuration (optional).\n * @returns\n *   Result, optionally with source map.\n */\nexport const toJs =\n  /**\n   * @type {(\n   *   ((value: Program, options: OptionsWithSourceMapGenerator) => ResultWithSourceMapGenerator) &\n   *   ((value: Program, options: OptionsWithMaybeMapGenerator) => ResultMaybeSourceMapGenerator) &\n   *   ((value: Program, options?: OptionsWithoutSourceMapGenerator | null | undefined) => ResultWithoutSourceMapGenerator)\n   * )}\n   */\n  (\n    /**\n     * @param {Program} tree\n     * @param {Options | null | undefined} [options]\n     * @returns {Result}\n     */\n    function (tree, options) {\n      const {SourceMapGenerator, filePath, handlers} = options || {}\n      const sourceMap = SourceMapGenerator\n        ? new SourceMapGenerator({file: filePath || '<unknown>.js'})\n        : undefined\n\n      const value = generate(tree, {\n        comments: true,\n        generator: {...GENERATOR, ...handlers},\n        sourceMap\n      })\n      const map = sourceMap ? sourceMap.toJSON() : undefined\n\n      return {value, map}\n    }\n  )\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4DC,GAED,gDAAgD;;;;;;;AAGhD,qBAAqB,GACrB,MAAM,YAAY,yLAAQ,SAAS;AAEnC,wDAAwD,GACxD,MAAM,WAAW,yLAAQ,QAAQ;AAY1B,MAAM,OAST;;;;KAIC,GACD,SAAU,IAAI,EAAE,OAAO;IACrB,MAAM,EAAC,kBAAkB,EAAE,QAAQ,EAAE,QAAQ,EAAC,GAAG,WAAW,CAAC;IAC7D,MAAM,YAAY,qBACd,IAAI,mBAAmB;QAAC,MAAM,YAAY;IAAc,KACxD;IAEJ,MAAM,QAAQ,SAAS,MAAM;QAC3B,UAAU;QACV,WAAW;YAAC,GAAG,SAAS;YAAE,GAAG,QAAQ;QAAA;QACrC;IACF;IACA,MAAM,MAAM,YAAY,UAAU,MAAM,KAAK;IAE7C,OAAO;QAAC;QAAO;IAAG;AACpB"}},
    {"offset": {"line": 6555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6560, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-to-js@1.2.0/node_modules/estree-util-to-js/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/types.js').Handler} Handler\n * @typedef {import('./lib/types.js').Handlers} Handlers\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Result} Result\n * @typedef {import('./lib/types.js').State} State\n */\n\nexport {toJs} from './lib/index.js'\nexport {jsx} from './lib/jsx.js'\n"],"names":[],"mappings":"AAAA;;;;;;CAMC"}},
    {"offset": {"line": 6575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6580, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-to-js@2.0.0/node_modules/estree-util-to-js/lib/jsx.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').JSXAttribute} JsxAttribute\n * @typedef {import('estree-jsx').JSXClosingElement} JsxClosingElement\n * @typedef {import('estree-jsx').JSXClosingFragment} JsxClosingFragment\n * @typedef {import('estree-jsx').JSXElement} JsxElement\n * @typedef {import('estree-jsx').JSXExpressionContainer} JsxExpressionContainer\n * @typedef {import('estree-jsx').JSXFragment} JsxFragment\n * @typedef {import('estree-jsx').JSXIdentifier} JsxIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JsxMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JsxNamespacedName\n * @typedef {import('estree-jsx').JSXOpeningElement} JsxOpeningElement\n * @typedef {import('estree-jsx').JSXOpeningFragment} JsxOpeningFragment\n * @typedef {import('estree-jsx').JSXSpreadAttribute} JsxSpreadAttribute\n * @typedef {import('estree-jsx').JSXText} JsxText\n *\n * @typedef {import('./index.js').Generator} Generator\n * @typedef {import('./index.js').State} State\n */\n\nexport const jsx = {\n  JSXAttribute: jsxAttribute,\n  JSXClosingElement: jsxClosingElement,\n  JSXClosingFragment: jsxClosingFragment,\n  JSXElement: jsxElement,\n  JSXEmptyExpression: jsxEmptyExpression,\n  JSXExpressionContainer: jsxExpressionContainer,\n  JSXFragment: jsxFragment,\n  JSXIdentifier: jsxIdentifier,\n  JSXMemberExpression: jsxMemberExpression,\n  JSXNamespacedName: jsxNamespacedName,\n  JSXOpeningElement: jsxOpeningElement,\n  JSXOpeningFragment: jsxOpeningFragment,\n  JSXSpreadAttribute: jsxSpreadAttribute,\n  JSXText: jsxText\n}\n\n/**\n * `attr`\n * `attr=\"something\"`\n * `attr={1}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxAttribute(node, state) {\n  this[node.name.type](node.name, state)\n\n  if (node.value !== null && node.value !== undefined) {\n    state.write('=')\n\n    // Encode double quotes in attribute values.\n    if (node.value.type === 'Literal') {\n      state.write(\n        '\"' + encodeJsx(String(node.value.value)).replace(/\"/g, '&quot;') + '\"',\n        node\n      )\n    } else {\n      this[node.value.type](node.value, state)\n    }\n  }\n}\n\n/**\n * `</div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxClosingElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxClosingElement(node, state) {\n  state.write('</')\n  this[node.name.type](node.name, state)\n  state.write('>')\n}\n\n/**\n * `</>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxClosingFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxClosingFragment(node, state) {\n  state.write('</>', node)\n}\n\n/**\n * `<div />`\n * `<div></div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxElement(node, state) {\n  let index = -1\n\n  this[node.openingElement.type](node.openingElement, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  if (node.closingElement) {\n    this[node.closingElement.type](node.closingElement, state)\n  }\n}\n\n/**\n * `{}` (always in a `JSXExpressionContainer`, which does the curlies)\n *\n * @this {Generator}\n *   `astring` generator.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxEmptyExpression() {}\n\n/**\n * `{expression}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxExpressionContainer} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxExpressionContainer(node, state) {\n  state.write('{')\n  this[node.expression.type](node.expression, state)\n  state.write('}')\n}\n\n/**\n * `<></>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxFragment(node, state) {\n  let index = -1\n\n  this[node.openingFragment.type](node.openingFragment, state)\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const child = node.children[index]\n\n      // Supported in types but not by Acorn.\n      /* c8 ignore next 3 */\n      if (child.type === 'JSXSpreadChild') {\n        throw new Error('JSX spread children are not supported')\n      }\n\n      this[child.type](child, state)\n    }\n  }\n\n  this[node.closingFragment.type](node.closingFragment, state)\n}\n\n/**\n * `div`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxIdentifier} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxIdentifier(node, state) {\n  state.write(node.name, node)\n}\n\n/**\n * `member.expression`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxMemberExpression} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxMemberExpression(node, state) {\n  this[node.object.type](node.object, state)\n  state.write('.')\n  this[node.property.type](node.property, state)\n}\n\n/**\n * `ns:name`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxNamespacedName} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxNamespacedName(node, state) {\n  this[node.namespace.type](node.namespace, state)\n  state.write(':')\n  this[node.name.type](node.name, state)\n}\n\n/**\n * `<div>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxOpeningElement} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxOpeningElement(node, state) {\n  let index = -1\n\n  state.write('<')\n  this[node.name.type](node.name, state)\n\n  if (node.attributes) {\n    while (++index < node.attributes.length) {\n      state.write(' ')\n      this[node.attributes[index].type](node.attributes[index], state)\n    }\n  }\n\n  state.write(node.selfClosing ? ' />' : '>')\n}\n\n/**\n * `<>`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxOpeningFragment} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxOpeningFragment(node, state) {\n  state.write('<>', node)\n}\n\n/**\n * `{...argument}`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxSpreadAttribute} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxSpreadAttribute(node, state) {\n  state.write('{')\n  // eslint-disable-next-line new-cap\n  this.SpreadElement(node, state)\n  state.write('}')\n}\n\n/**\n * `!`\n *\n * @this {Generator}\n *   `astring` generator.\n * @param {JsxText} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n */\nfunction jsxText(node, state) {\n  state.write(encodeJsx(node.value).replace(/[<>{}]/g, replaceJsxChar), node)\n}\n\n/**\n * Make sure that character references don’t pop up.\n *\n * For example, the text `&copy;` should stay that way, and not turn into `©`.\n * We could encode all `&` (easy but verbose) or look for actual valid\n * references (complex but cleanest output).\n * Looking for the 2nd character gives us a middle ground.\n * The `#` is for (decimal and hexadecimal) numeric references, the letters\n * are for the named references.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nfunction encodeJsx(value) {\n  return value.replace(/&(?=[#a-z])/gi, '&amp;')\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction replaceJsxChar($0) {\n  return $0 === '<'\n    ? '&lt;'\n    : $0 === '>'\n    ? '&gt;'\n    : $0 === '{'\n    ? '&#123;'\n    : '&#125;'\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6892, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-to-js@2.0.0/node_modules/estree-util-to-js/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('astring').State} State\n * @typedef {import('estree-jsx').Node} Nodes\n * @typedef {import('estree-jsx').Program} Program\n * @typedef {typeof import('source-map').SourceMapGenerator} SourceMapGenerator\n * @typedef {import('source-map').RawSourceMap} Map\n */\n\n/**\n * @typedef {Record<Nodes['type'], Handler>} Generator\n *\n * @callback Handler\n *  Handle a particular node.\n * @param {Generator} this\n *   `astring` generator.\n * @param {any} node\n *   Node to serialize.\n * @param {State} state\n *   Info passed around.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {Partial<import('astring').Generator>} Handlers\n */\n\n/**\n * @typedef {OptionsWithMaybeMapGenerator} Options\n *   Configuration.\n *\n * @typedef OptionsFieldsBase\n *   Base shared option fields.\n * @property {Handlers | null | undefined} [handlers]\n *   Object mapping node types to functions handling the corresponding nodes.\n *\n * @typedef OptionsFieldsWithoutSourceMapGenerator\n *   Extra option fields where there’s definitely no source map generator.\n * @property {null | undefined} [SourceMapGenerator]\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in; this works if there is positional info on nodes.\n * @property {null | undefined} [filePath]\n *   Path to input file; only used in source map.\n *\n * @typedef OptionsFieldsWithSourceMapGenerator\n *   Extra option fields where there’s definitely a source map generator.\n * @property {SourceMapGenerator} SourceMapGenerator\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in; this works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file; only used in source map.\n *\n * @typedef OptionsFieldsMaybeSourceMapGenerator\n *   Extra option fields where there may or may not be a source map generator.\n * @property {SourceMapGenerator | null | undefined} [SourceMapGenerator]\n *   Generate a source map by passing a `SourceMapGenerator` from `source-map`\n *   in; this works if there is positional info on nodes.\n * @property {string | null | undefined} [filePath]\n *   Path to input file; only used in source map.\n *\n * @typedef {OptionsFieldsBase & OptionsFieldsWithoutSourceMapGenerator} OptionsWithoutSourceMapGenerator\n *   Options where there’s definitely no source map generator.\n * @typedef {OptionsFieldsBase & OptionsFieldsWithSourceMapGenerator} OptionsWithSourceMapGenerator\n *   Options where there’s definitely a source map generator.\n * @typedef {OptionsFieldsBase & OptionsFieldsMaybeSourceMapGenerator} OptionsWithMaybeMapGenerator\n *   Options where there may or may not be a source map generator.\n *\n * @typedef {ResultWithMaybeSourceMapGenerator} Result\n *   Result.\n *\n * @typedef ResultFieldsBase\n *   Base shared result fields.\n * @property {string} value\n *   Serialized JavaScript.\n *\n * @typedef ResultFieldsWithoutSourceMapGenerator\n *   Extra result fields where there’s definitely no source map generator.\n * @property {undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is passed.\n *\n * @typedef ResultFieldsWithSourceMapGenerator\n *   Extra result fields where there’s definitely a source map generator.\n * @property {Map} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` is not passed.\n *\n * @typedef ResultFieldsMaybeSourceMapGenerator\n *   Extra result fields where there may or may not be a source map generator.\n * @property {Map | undefined} map\n *   Source map as (parsed) JSON, if `SourceMapGenerator` might be passed.\n *\n * @typedef {ResultFieldsBase & ResultFieldsWithoutSourceMapGenerator} ResultWithoutSourceMapGenerator\n *   Result where there’s definitely no source map generator.\n * @typedef {ResultFieldsBase & ResultFieldsWithSourceMapGenerator} ResultWithSourceMapGenerator\n *   Result where there’s definitely a source map generator.\n * @typedef {ResultFieldsBase & ResultFieldsMaybeSourceMapGenerator} ResultWithMaybeSourceMapGenerator\n *   Result where there may or may not be a source map generator.\n */\n\nimport {GENERATOR, generate} from 'astring'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Serialize an estree as JavaScript.\n *\n * @overload\n * @param {Program} tree\n * @param {OptionsWithSourceMapGenerator} options\n * @returns {ResultWithSourceMapGenerator}\n *\n * @overload\n * @param {Program} tree\n * @param {OptionsWithMaybeMapGenerator} options\n * @returns {ResultWithMaybeSourceMapGenerator}\n *\n * @overload\n * @param {Program} tree\n * @param {OptionsWithoutSourceMapGenerator | null | undefined} [options]\n * @returns {ResultWithoutSourceMapGenerator}\n *\n * @param {Program} tree\n *   Estree (esast).\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Result}\n *   Result, optionally with source map.\n */\nexport function toJs(tree, options) {\n  const {SourceMapGenerator, filePath, handlers} = options || emptyOptions\n  const sourceMap = SourceMapGenerator\n    ? new SourceMapGenerator({file: filePath || '<unknown>.js'})\n    : undefined\n\n  const value = generate(\n    tree,\n    // @ts-expect-error: `sourceMap` can be undefined, `astring` types are buggy.\n    {\n      comments: true,\n      generator: {...GENERATOR, ...handlers},\n      sourceMap: sourceMap || undefined\n    }\n  )\n  const map = sourceMap ? sourceMap.toJSON() : undefined\n\n  return {value, map}\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqEC;;;;;;AAID,oBAAoB,GACpB,MAAM,eAAe,CAAC;AA2Bf,SAAS,KAAK,IAAI,EAAE,OAAO;IAChC,MAAM,EAAC,kBAAkB,EAAE,QAAQ,EAAE,QAAQ,EAAC,GAAG,WAAW;IAC5D,MAAM,YAAY,qBACd,IAAI,mBAAmB;QAAC,MAAM,YAAY;IAAc,KACxD;IAEJ,MAAM,QAAQ,qMACZ,MACA,6EAA6E;IAC7E;QACE,UAAU;QACV,WAAW;oNAAC;YAAc,GAAG,QAAQ;QAAA;QACrC,WAAW,aAAa;IAC1B;IAEF,MAAM,MAAM,YAAY,UAAU,MAAM,KAAK;IAE7C,OAAO;QAAC;QAAO;IAAG;AACpB"}},
    {"offset": {"line": 7009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7014, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-to-js@2.0.0/node_modules/estree-util-to-js/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Handler} Handler\n * @typedef {import('./lib/index.js').Handlers} Handlers\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Result} Result\n * @typedef {import('./lib/index.js').State} State\n */\n\nexport {toJs} from './lib/index.js'\nexport {jsx} from './lib/jsx.js'\n"],"names":[],"mappings":"AAAA;;;;;;CAMC"}},
    {"offset": {"line": 7029, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7034, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/astring@1.8.6/node_modules/astring/dist/astring.mjs"],"sourcesContent":["// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 2,\n  '??': 3,\n  '&&': 4,\n  '|': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (\n    nodePrecedence === 13 &&\n    parentNodePrecedence === 13 &&\n    (node.operator === '??' || parentNode.operator === '??')\n  ) {\n    // Nullish coalescing and boolean operators cannot be combined\n    return true\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    if (node.computed) {\n      state.write('[')\n    }\n    this[node.key.type](node.key, state)\n    if (node.computed) {\n      state.write(']')\n    }\n    if (node.value == null) {\n      if (node.key.type[0] !== 'F') {\n        state.write(';')\n      }\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n    state.write(';')\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `␣␣`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8110, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-position-from-estree@1.1.2/node_modules/unist-util-position-from-estree/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Position} Position\n *\n * @typedef {[number, number]} RangeLike\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n *\n * @typedef LocLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {LocLike | null | undefined} [loc]\n * @property {RangeLike | null | undefined} [range]\n * @property {number | null | undefined} [start]\n * @property {number | null | undefined} [end]\n */\n\n/**\n * Turn an estree `node` into a unist `position`.\n *\n * @param {NodeLike | null | undefined} [node]\n *   estree node.\n * @returns {Position}\n *   unist position.\n */\nexport function positionFromEstree(node) {\n  const nodeLike = node || {}\n  const loc = nodeLike.loc || {}\n  const range = nodeLike.range || [0, 0]\n  const startColumn = loc.start\n    ? numberOrUndefined(loc.start.column)\n    : undefined\n  const endColumn = loc.end ? numberOrUndefined(loc.end.column) : undefined\n\n  return {\n    start: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.start ? numberOrUndefined(loc.start.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: startColumn === undefined ? undefined : startColumn + 1,\n      offset: numberOrUndefined(range[0] || nodeLike.start)\n    },\n    end: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.end ? numberOrUndefined(loc.end.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: endColumn === undefined ? undefined : endColumn + 1,\n      offset: numberOrUndefined(range[1] || nodeLike.end)\n    }\n  }\n}\n\n/**\n *\n * @param {number | null | undefined} value\n * @returns {number | undefined}\n */\nfunction numberOrUndefined(value) {\n  return typeof value === 'number' && value > -1 ? value : undefined\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;CAkBC,GAED;;;;;;;CAOC;;;AACM,SAAS,mBAAmB,IAAI;IACrC,MAAM,WAAW,QAAQ,CAAC;IAC1B,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC;IAC7B,MAAM,QAAQ,SAAS,KAAK,IAAI;QAAC;QAAG;KAAE;IACtC,MAAM,cAAc,IAAI,KAAK,GACzB,kBAAkB,IAAI,KAAK,CAAC,MAAM,IAClC;IACJ,MAAM,YAAY,IAAI,GAAG,GAAG,kBAAkB,IAAI,GAAG,CAAC,MAAM,IAAI;IAEhE,OAAO;QACL,OAAO;YACL,8DAA8D;YAC9D,MAAM,IAAI,KAAK,GAAG,kBAAkB,IAAI,KAAK,CAAC,IAAI,IAAI;YACtD,8DAA8D;YAC9D,QAAQ,gBAAgB,YAAY,YAAY,cAAc;YAC9D,QAAQ,kBAAkB,KAAK,CAAC,EAAE,IAAI,SAAS,KAAK;QACtD;QACA,KAAK;YACH,8DAA8D;YAC9D,MAAM,IAAI,GAAG,GAAG,kBAAkB,IAAI,GAAG,CAAC,IAAI,IAAI;YAClD,8DAA8D;YAC9D,QAAQ,cAAc,YAAY,YAAY,YAAY;YAC1D,QAAQ,kBAAkB,KAAK,CAAC,EAAE,IAAI,SAAS,GAAG;QACpD;IACF;AACF;AAEA;;;;CAIC,GACD,SAAS,kBAAkB,KAAK;IAC9B,OAAO,OAAO,UAAU,YAAY,QAAQ,CAAC,IAAI,QAAQ;AAC3D"}},
    {"offset": {"line": 8171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8187, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-position-from-estree@2.0.0/node_modules/unist-util-position-from-estree/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Point} UnistPoint\n * @typedef {import('unist').Position} UnistPosition\n */\n\n/**\n * @typedef {[start: number | null | undefined, end: number | null | undefined]} RangeLike\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n *\n * @typedef LocLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {LocLike | null | undefined} [loc]\n * @property {RangeLike | null | undefined} [range]\n * @property {number | null | undefined} [start]\n * @property {number | null | undefined} [end]\n */\n\n/**\n * Turn an estree `node` into a unist `position`.\n *\n * @param {NodeLike | null | undefined} [node]\n *   estree node.\n * @returns {UnistPosition | undefined}\n *   unist position.\n */\nexport function positionFromEstree(node) {\n  const nodeLike = node || {}\n  const loc = nodeLike.loc || {}\n  const range = nodeLike.range || [undefined, undefined]\n  const start = pointOrUndefined(loc.start, range[0] || nodeLike.start)\n  const end = pointOrUndefined(loc.end, range[1] || nodeLike.end)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n\n/**\n * @param {unknown} estreePoint\n *   estree point.\n * @param {unknown} estreeOffset\n *  estree offset.\n * @returns {UnistPoint | undefined}\n *   unist point.\n */\nfunction pointOrUndefined(estreePoint, estreeOffset) {\n  if (estreePoint && typeof estreePoint === 'object') {\n    const line =\n      'line' in estreePoint ? numberOrUndefined(estreePoint.line) : undefined\n    const column =\n      'column' in estreePoint\n        ? numberOrUndefined(estreePoint.column)\n        : undefined\n\n    if (line && column !== undefined) {\n      return {\n        line,\n        column: column + 1,\n        offset: numberOrUndefined(estreeOffset)\n      }\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {number | undefined}\n */\nfunction numberOrUndefined(value) {\n  return typeof value === 'number' && value > -1 ? value : undefined\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;;;;;CAgBC,GAED;;;;;;;CAOC;;;AACM,SAAS,mBAAmB,IAAI;IACrC,MAAM,WAAW,QAAQ,CAAC;IAC1B,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC;IAC7B,MAAM,QAAQ,SAAS,KAAK,IAAI;QAAC;QAAW;KAAU;IACtD,MAAM,QAAQ,iBAAiB,IAAI,KAAK,EAAE,KAAK,CAAC,EAAE,IAAI,SAAS,KAAK;IACpE,MAAM,MAAM,iBAAiB,IAAI,GAAG,EAAE,KAAK,CAAC,EAAE,IAAI,SAAS,GAAG;IAE9D,IAAI,SAAS,KAAK;QAChB,OAAO;YAAC;YAAO;QAAG;IACpB;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,iBAAiB,WAAW,EAAE,YAAY;IACjD,IAAI,eAAe,OAAO,gBAAgB,UAAU;QAClD,MAAM,OACJ,UAAU,cAAc,kBAAkB,YAAY,IAAI,IAAI;QAChE,MAAM,SACJ,YAAY,cACR,kBAAkB,YAAY,MAAM,IACpC;QAEN,IAAI,QAAQ,WAAW,WAAW;YAChC,OAAO;gBACL;gBACA,QAAQ,SAAS;gBACjB,QAAQ,kBAAkB;YAC5B;QACF;IACF;AACF;AAEA;;;CAGC,GACD,SAAS,kBAAkB,KAAK;IAC9B,OAAO,OAAO,UAAU,YAAY,QAAQ,CAAC,IAAI,QAAQ;AAC3D"}},
    {"offset": {"line": 8258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8274, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/is-reference@3.0.2/node_modules/is-reference/src/index.js"],"sourcesContent":["/** @typedef { import('estree').Node} Node */\n/** @typedef {Node | {\n *   type: 'PropertyDefinition';\n *   computed: boolean;\n *   value: Node\n * }} NodeWithPropertyDefinition */\n\n/**\n *\n * @param {NodeWithPropertyDefinition} node\n * @param {NodeWithPropertyDefinition} parent\n * @returns {boolean}\n */\nexport default function is_reference (node, parent) {\n\tif (node.type === 'MemberExpression') {\n\t\treturn !node.computed && is_reference(node.object, node);\n\t}\n\n\tif (node.type === 'Identifier') {\n\t\tif (!parent) return true;\n\n\t\tswitch (parent.type) {\n\t\t\t// disregard `bar` in `foo.bar`\n\t\t\tcase 'MemberExpression': return parent.computed || node === parent.object;\n\n\t\t\t// disregard the `foo` in `class {foo(){}}` but keep it in `class {[foo](){}}`\n\t\t\tcase 'MethodDefinition': return parent.computed;\n\n\t\t\t// disregard the `foo` in `class {foo=bar}` but keep it in `class {[foo]=bar}` and `class {bar=foo}`\n\t\t\tcase 'PropertyDefinition': return parent.computed || node === parent.value;\n\n\t\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\t\tcase 'Property': return parent.computed || node === parent.value;\n\n\t\t\t// disregard the `bar` in `export { foo as bar }` or\n\t\t\t// the foo in `import { foo as bar }`\n\t\t\tcase 'ExportSpecifier':\n\t\t\tcase 'ImportSpecifier': return node === parent.local;\n\n\t\t\t// disregard the `foo` in `foo: while (...) { ... break foo; ... continue foo;}`\n\t\t\tcase 'LabeledStatement':\n\t\t\tcase 'BreakStatement':\n\t\t\tcase 'ContinueStatement': return false;\n\t\t\tdefault: return true;\n\t\t}\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":"AAAA,2CAA2C,GAC3C;;;;iCAIiC,GAEjC;;;;;CAKC;;;AACc,SAAS,aAAc,IAAI,EAAE,MAAM;IACjD,IAAI,KAAK,IAAI,KAAK,oBAAoB;QACrC,OAAO,CAAC,KAAK,QAAQ,IAAI,aAAa,KAAK,MAAM,EAAE;IACpD;IAEA,IAAI,KAAK,IAAI,KAAK,cAAc;QAC/B,IAAI,CAAC,QAAQ,OAAO;QAEpB,OAAQ,OAAO,IAAI;YAClB,+BAA+B;YAC/B,KAAK;gBAAoB,OAAO,OAAO,QAAQ,IAAI,SAAS,OAAO,MAAM;YAEzE,8EAA8E;YAC9E,KAAK;gBAAoB,OAAO,OAAO,QAAQ;YAE/C,oGAAoG;YACpG,KAAK;gBAAsB,OAAO,OAAO,QAAQ,IAAI,SAAS,OAAO,KAAK;YAE1E,yEAAyE;YACzE,KAAK;gBAAY,OAAO,OAAO,QAAQ,IAAI,SAAS,OAAO,KAAK;YAEhE,oDAAoD;YACpD,qCAAqC;YACrC,KAAK;YACL,KAAK;gBAAmB,OAAO,SAAS,OAAO,KAAK;YAEpD,gFAAgF;YAChF,KAAK;YACL,KAAK;YACL,KAAK;gBAAqB,OAAO;YACjC;gBAAS,OAAO;QACjB;IACD;IAEA,OAAO;AACR"}},
    {"offset": {"line": 8321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8326, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-walker@3.0.3/node_modules/estree-walker/src/walker.js"],"sourcesContent":["/**\n * @typedef { import('estree').Node} Node\n * @typedef {{\n *   skip: () => void;\n *   remove: () => void;\n *   replace: (node: Node) => void;\n * }} WalkerContext\n */\n\nexport class WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t * @param {Node} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent && prop) {\n\t\t\tif (index != null) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop])[index] = node;\n\t\t\t} else {\n\t\t\t\t/** @type {Node} */ (parent[prop]) = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent && prop) {\n\t\t\tif (index !== null && index !== undefined) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop]).splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AAEM,MAAM;IACZ,aAAc;QACb,oBAAoB,GACpB,IAAI,CAAC,WAAW,GAAG;QAEnB,oBAAoB,GACpB,IAAI,CAAC,aAAa,GAAG;QAErB,wBAAwB,GACxB,IAAI,CAAC,WAAW,GAAG;QAEnB,0BAA0B,GAC1B,IAAI,CAAC,OAAO,GAAG;YACd,MAAM,IAAO,IAAI,CAAC,WAAW,GAAG;YAChC,QAAQ,IAAO,IAAI,CAAC,aAAa,GAAG;YACpC,SAAS,CAAC,OAAU,IAAI,CAAC,WAAW,GAAG;QACxC;IACD;IAEA;;;;;;EAMC,GACD,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;QAClC,IAAI,UAAU,MAAM;YACnB,IAAI,SAAS,MAAM;gBAClB,wBAAwB,GAAG,AAAC,MAAM,CAAC,KAAK,AAAC,CAAC,MAAM,GAAG;YACpD,OAAO;gBACN,iBAAiB,GAAI,MAAM,CAAC,KAAK,GAAI;YACtC;QACD;IACD;IAEA;;;;;EAKC,GACD,OAAO,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;QAC3B,IAAI,UAAU,MAAM;YACnB,IAAI,UAAU,QAAQ,UAAU,WAAW;gBAC1C,wBAAwB,GAAG,AAAC,MAAM,CAAC,KAAK,CAAE,MAAM,CAAC,OAAO;YACzD,OAAO;gBACN,OAAO,MAAM,CAAC,KAAK;YACpB;QACD;IACD;AACD"}},
    {"offset": {"line": 8377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8382, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-walker@3.0.3/node_modules/estree-walker/src/async.js"],"sourcesContent":["import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => Promise<void>} AsyncHandler\n */\n\nexport class AsyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {AsyncHandler} [enter]\n\t * @param {AsyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {AsyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {AsyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Promise<Node | null>}\n\t */\n\tasync visit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!(await this.visit(item, node, key, i))) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8493, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-walker@3.0.3/node_modules/estree-walker/src/sync.js"],"sourcesContent":["import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => void} SyncHandler\n */\n\nexport class SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} [enter]\n\t * @param {SyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Node | null}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!this.visit(item, node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8604, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-walker@3.0.3/node_modules/estree-walker/src/index.js"],"sourcesContent":["import { SyncWalker } from './sync.js';\nimport { AsyncWalker } from './async.js';\n\n/**\n * @typedef {import('estree').Node} Node\n * @typedef {import('./sync.js').SyncHandler} SyncHandler\n * @typedef {import('./async.js').AsyncHandler} AsyncHandler\n */\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {Node | null}\n */\nexport function walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<Node | null>}\n */\nexport async function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n"],"names":[],"mappings":";;;;;;;;;AAiBO,SAAS,KAAK,GAAG,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;IACzC,MAAM,WAAW,wNAAe,OAAO;IACvC,OAAO,SAAS,KAAK,CAAC,KAAK;AAC5B;AAUO,eAAe,UAAU,GAAG,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;IACpD,MAAM,WAAW,0NAAgB,OAAO;IACxC,OAAO,MAAM,SAAS,KAAK,CAAC,KAAK;AAClC"}},
    {"offset": {"line": 8621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8626, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/periscopic@3.1.0/node_modules/periscopic/src/index.js"],"sourcesContent":["import { walk } from 'estree-walker';\nimport is_reference from 'is-reference';\n\n/** @param {import('estree').Node} expression */\nexport function analyze(expression) {\n\t/** @typedef {import('estree').Node} Node */\n\n\t/** @type {WeakMap<Node, Scope>} */\n\tconst map = new WeakMap();\n\n\t/** @type {Map<string, Node>} */\n\tconst globals = new Map();\n\n\tconst scope = new Scope(null, false);\n\n\t/** @type {[Scope, import('estree').Identifier][]} */\n\tconst references = [];\n\t/** @type {Scope} */\n\tlet current_scope = scope;\n\n\twalk(expression, {\n\t\tenter(node, parent) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'Identifier':\n\t\t\t\t\tif (parent && is_reference(node, parent)) {\n\t\t\t\t\t\treferences.push([current_scope, node]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ImportDeclaration':\n\t\t\t\t\tnode.specifiers.forEach((specifier) => {\n\t\t\t\t\t\tcurrent_scope.declarations.set(specifier.local.name, specifier);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'FunctionExpression':\n\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\tcase 'ArrowFunctionExpression':\n\t\t\t\t\tif (node.type === 'FunctionDeclaration') {\n\t\t\t\t\t\tif (node.id) {\n\t\t\t\t\t\t\tcurrent_scope.declarations.set(node.id.name, node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, false));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, false));\n\n\t\t\t\t\t\tif (node.type === 'FunctionExpression' && node.id) {\n\t\t\t\t\t\t\tcurrent_scope.declarations.set(node.id.name, node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.params.forEach(param => {\n\t\t\t\t\t\textract_names(param).forEach(name => {\n\t\t\t\t\t\t\tcurrent_scope.declarations.set(name, node);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ForStatement':\n\t\t\t\tcase 'ForInStatement':\n\t\t\t\tcase 'ForOfStatement':\n\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, true));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, true));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ClassDeclaration':\n\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\tcurrent_scope.add_declaration(node);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'CatchClause':\n\t\t\t\t\tmap.set(node, current_scope = new Scope(current_scope, true));\n\n\t\t\t\t\tif (node.param) {\n\t\t\t\t\t\textract_names(node.param).forEach(name => {\n\t\t\t\t\t\t\tif (node.param) {\n\t\t\t\t\t\t\t\tcurrent_scope.declarations.set(name, node.param);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tleave(node) {\n\t\t\tif (map.has(node) && current_scope !== null && current_scope.parent) {\n\t\t\t\tcurrent_scope = current_scope.parent;\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (let i = references.length - 1; i >= 0; --i) {\n\t\tconst [scope, reference] = references[i];\n\n\t\tif (!scope.references.has(reference.name)) {\n\t\t\tadd_reference(scope, reference.name);\n\t\t}\n\t\tif (!scope.find_owner(reference.name)) {\n\t\t\tglobals.set(reference.name, reference);\n\t\t}\n\t}\n\n\treturn { map, scope, globals };\n}\n\n/**\n * @param {Scope} scope\n * @param {string} name\n */\nfunction add_reference(scope, name) {\n\tscope.references.add(name);\n\tif (scope.parent) add_reference(scope.parent, name);\n}\n\nexport class Scope {\n\t/**\n\t * @param {Scope | null} parent \n\t * @param {boolean} block \n\t */\n\tconstructor(parent, block) {\n\t\t/** @type {Scope | null} */\n\t\tthis.parent = parent;\n\n\t\t/** @type {boolean} */\n\t\tthis.block = block;\n\n\t\t/** @type {Map<string, import('estree').Node>} */\n\t\tthis.declarations = new Map();\n\n\t\t/** @type {Set<string>} */\n\t\tthis.initialised_declarations = new Set();\n\n\t\t/** @type {Set<string>} */\n\t\tthis.references = new Set();\n\t}\n\n\t/**\n\t * @param {import('estree').VariableDeclaration | import('estree').ClassDeclaration} node\n\t */\n\tadd_declaration(node) {\n\t\tif (node.type === 'VariableDeclaration') {\n\t\t\tif (node.kind === 'var' && this.block && this.parent) {\n\t\t\t\tthis.parent.add_declaration(node);\n\t\t\t} else {\n\t\t\t\t/** @param {import('estree').VariableDeclarator} declarator */\n\t\t\t\tconst handle_declarator = (declarator) => {\n\t\t\t\t\textract_names(declarator.id).forEach(name => {\n\t\t\t\t\t\tthis.declarations.set(name, node);\n\t\t\t\t\t\tif (declarator.init) this.initialised_declarations.add(name);\n\t\t\t\t\t});;\n\t\t\t\t}\n\n\t\t\t\tnode.declarations.forEach(handle_declarator);\n\t\t\t}\n\t\t} else if (node.id) {\n\t\t\tthis.declarations.set(node.id.name, node);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @returns {Scope | null}\n\t */\n\tfind_owner(name) {\n\t\tif (this.declarations.has(name)) return this;\n\t\treturn this.parent && this.parent.find_owner(name);\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\thas(name) {\n\t\treturn (\n\t\t\tthis.declarations.has(name) || (!!this.parent && this.parent.has(name))\n\t\t);\n\t}\n}\n\n/**\n * @param {import('estree').Node} param\n * @returns {string[]}\n */\nexport function extract_names(param) {\n\treturn extract_identifiers(param).map(node => node.name);\n}\n\n/**\n * @param {import('estree').Node} param\n * @param {import('estree').Identifier[]} nodes\n * @returns {import('estree').Identifier[]}\n */\nexport function extract_identifiers(param, nodes = []) {\n\tswitch (param.type) {\n\t\tcase 'Identifier':\n\t\t\tnodes.push(param);\n\t\t\tbreak;\n\n\t\tcase 'MemberExpression':\n\t\t\tlet object = param;\n\t\t\twhile (object.type === 'MemberExpression') {\n\t\t\t\tobject = /** @type {any} */ (object.object);\n\t\t\t}\n\t\t\tnodes.push(/** @type {any} */ (object));\n\t\t\tbreak;\n\n\t\tcase 'ObjectPattern':\n\t\t\t/** @param {import('estree').Property | import('estree').RestElement} prop */\n\t\t\tconst handle_prop = (prop) => {\n\t\t\t\tif (prop.type === 'RestElement') {\n\t\t\t\t\textract_identifiers(prop.argument, nodes);\n\t\t\t\t} else {\n\t\t\t\t\textract_identifiers(prop.value, nodes);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tparam.properties.forEach(handle_prop);\n\t\t\tbreak;\n\n\t\tcase 'ArrayPattern':\n\t\t\t/** @param {import('estree').Node} element */\n\t\t\tconst handle_element = (element) => {\n\t\t\t\tif (element) extract_identifiers(element, nodes);\n\t\t\t};\n\n\t\t\tparam.elements.forEach((element) => {\n\t\t\t\tif (element) {\n\t\t\t\t\thandle_element(element)\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase 'RestElement':\n\t\t\textract_identifiers(param.argument, nodes);\n\t\t\tbreak;\n\n\t\tcase 'AssignmentPattern':\n\t\t\textract_identifiers(param.left, nodes);\n\t\t\tbreak;\n\t}\n\n\treturn nodes;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8820, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8825, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-build-jsx@2.2.2/node_modules/estree-util-build-jsx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Node} Node\n * @typedef {import('estree-jsx').Expression} Expression\n * @typedef {import('estree-jsx').ObjectExpression} ObjectExpression\n * @typedef {import('estree-jsx').Property} Property\n * @typedef {import('estree-jsx').ImportSpecifier} ImportSpecifier\n * @typedef {import('estree-jsx').SpreadElement} SpreadElement\n * @typedef {import('estree-jsx').MemberExpression} MemberExpression\n * @typedef {import('estree-jsx').Literal} Literal\n * @typedef {import('estree-jsx').Identifier} Identifier\n * @typedef {import('estree-jsx').JSXAttribute} JSXAttribute\n * @typedef {import('estree-jsx').JSXMemberExpression} JSXMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JSXNamespacedName\n * @typedef {import('estree-jsx').JSXIdentifier} JSXIdentifier\n *\n * @typedef {'automatic' | 'classic'} Runtime\n *   How to transform JSX.\n *\n * @typedef Options\n *   Configuration.\n *\n *   > 👉 **Note**: you can also configure `runtime`, `importSource`, `pragma`,\n *   > and `pragmaFrag` from within files through comments.\n * @property {Runtime | null | undefined} [runtime='classic']\n *   Choose the runtime.\n *\n *   Comment form: `@jsxRuntime theRuntime`.\n * @property {string | null | undefined} [importSource='react']\n *   Place to import `jsx`, `jsxs`, `jsxDEV`, and `Fragment` from, when the\n *   effective runtime is automatic.\n *\n *   Comment form: `@jsxImportSource theSource`.\n *\n *   > 👉 **Note**: `/jsx-runtime` or `/jsx-dev-runtime` is appended to this\n *   > provided source.\n *   > In CJS, that can resolve to a file (as in `theSource/jsx-runtime.js`),\n *   > but for ESM an export map needs to be set up to point to files:\n *   >\n *   > ```js\n *   > // …\n *   > \"exports\": {\n *   >   // …\n *   >   \"./jsx-runtime\": \"./path/to/jsx-runtime.js\",\n *   >   \"./jsx-dev-runtime\": \"./path/to/jsx-runtime.js\"\n *   >   // …\n *   > ```\n * @property {string | null | undefined} [pragma='React.createElement']\n *   Identifier or member expression to call when the effective runtime is\n *   classic.\n *\n *   Comment form: `@jsx identifier`.\n * @property {string | null | undefined} [pragmaFrag='React.Fragment']\n *   Identifier or member expression to use as a symbol for fragments when the\n *   effective runtime is classic.\n *\n *   Comment form: `@jsxFrag identifier`.\n * @property {boolean | null | undefined} [development=false]\n *   When in the automatic runtime, whether to import\n *   `theSource/jsx-dev-runtime.js`, use `jsxDEV`, and pass location info when\n *   available.\n *\n *   This helps debugging but adds a lot of code that you don’t want in\n *   production.\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file.\n *\n *   Passed in location info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n *\n * @typedef Annotations\n *   State where info from comments is gathered.\n * @property {Runtime | undefined} [jsxRuntime]\n *   Runtime.\n * @property {string | undefined} [jsx]\n *   JSX identifier (`pragma`).\n * @property {string | undefined} [jsxFrag]\n *   JSX identifier of fragment (`pragmaFrag`).\n * @property {string | undefined} [jsxImportSource]\n *   Where to import an automatic JSX runtime from.\n *\n * @typedef Imports\n *   State of used identifiers from the automatic runtime.\n * @property {boolean | undefined} [fragment]\n *   Symbol of `Fragment`.\n * @property {boolean | undefined} [jsx]\n *   Symbol of `jsx`.\n * @property {boolean | undefined} [jsxs]\n *   Symbol of `jsxs`.\n * @property {boolean | undefined} [jsxDEV]\n *   Symbol of `jsxDEV`.\n */\n\nimport {walk} from 'estree-walker'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\n\nconst regex = /@(jsx|jsxFrag|jsxImportSource|jsxRuntime)\\s+(\\S+)/g\n\n/**\n * Turn JSX in `tree` into function calls: `<x />` -> `h('x')`!\n *\n * ###### Algorithm\n *\n * In almost all cases, this utility is the same as the Babel plugin, except that\n * they work on slightly different syntax trees.\n *\n * Some differences:\n *\n * *   no pure annotations things\n * *   `this` is not a component: `<this>` -> `h('this')`, not `h(this)`\n * *   namespaces are supported: `<a:b c:d>` -> `h('a:b', {'c:d': true})`,\n *     which throws by default in Babel or can be turned on with `throwIfNamespace`\n * *   no `useSpread`, `useBuiltIns`, or `filter` options\n *\n * @template {Node} Tree\n *   Node type.\n * @param {Tree} tree\n *   Tree to transform (typically `Program`).\n * @param {Options | null | undefined} [options={}]\n *   Configuration (optional).\n * @returns {Tree}\n *   Given, modified, `tree`.\n */\n// To do next major: do not return the given Node.\nexport function buildJsx(tree, options) {\n  const config = options || {}\n  let automatic = config.runtime === 'automatic'\n  /** @type {Annotations} */\n  const annotations = {}\n  /** @type {Imports} */\n  const imports = {}\n\n  walk(tree, {\n    // @ts-expect-error: hush, `estree-walker` is broken.\n    enter(/** @type {Node} */ node) {\n      if (node.type === 'Program') {\n        const comments = node.comments || []\n        let index = -1\n\n        while (++index < comments.length) {\n          regex.lastIndex = 0\n\n          let match = regex.exec(comments[index].value)\n\n          while (match) {\n            // @ts-expect-error: indexable.\n            annotations[match[1]] = match[2]\n            match = regex.exec(comments[index].value)\n          }\n        }\n\n        if (annotations.jsxRuntime) {\n          if (annotations.jsxRuntime === 'automatic') {\n            automatic = true\n\n            if (annotations.jsx) {\n              throw new Error('Unexpected `@jsx` pragma w/ automatic runtime')\n            }\n\n            if (annotations.jsxFrag) {\n              throw new Error(\n                'Unexpected `@jsxFrag` pragma w/ automatic runtime'\n              )\n            }\n          } else if (annotations.jsxRuntime === 'classic') {\n            automatic = false\n\n            if (annotations.jsxImportSource) {\n              throw new Error(\n                'Unexpected `@jsxImportSource` w/ classic runtime'\n              )\n            }\n          } else {\n            throw new Error(\n              'Unexpected `jsxRuntime` `' +\n                annotations.jsxRuntime +\n                '`, expected `automatic` or `classic`'\n            )\n          }\n        }\n      }\n    },\n    // @ts-expect-error: hush, `estree-walker` is broken.\n    // eslint-disable-next-line complexity\n    leave(/** @type {Node} */ node) {\n      if (node.type === 'Program') {\n        /** @type {Array<ImportSpecifier>} */\n        const specifiers = []\n\n        if (imports.fragment) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'Fragment'},\n            local: {type: 'Identifier', name: '_Fragment'}\n          })\n        }\n\n        if (imports.jsx) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsx'},\n            local: {type: 'Identifier', name: '_jsx'}\n          })\n        }\n\n        if (imports.jsxs) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxs'},\n            local: {type: 'Identifier', name: '_jsxs'}\n          })\n        }\n\n        if (imports.jsxDEV) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxDEV'},\n            local: {type: 'Identifier', name: '_jsxDEV'}\n          })\n        }\n\n        if (specifiers.length > 0) {\n          node.body.unshift({\n            type: 'ImportDeclaration',\n            specifiers,\n            source: {\n              type: 'Literal',\n              value:\n                (annotations.jsxImportSource ||\n                  config.importSource ||\n                  'react') +\n                (config.development ? '/jsx-dev-runtime' : '/jsx-runtime')\n            }\n          })\n        }\n      }\n\n      if (node.type !== 'JSXElement' && node.type !== 'JSXFragment') {\n        return\n      }\n\n      /** @type {Array<Expression>} */\n      const children = []\n      let index = -1\n\n      // Figure out `children`.\n      while (++index < node.children.length) {\n        const child = node.children[index]\n\n        if (child.type === 'JSXExpressionContainer') {\n          // Ignore empty expressions.\n          if (child.expression.type !== 'JSXEmptyExpression') {\n            children.push(child.expression)\n          }\n        } else if (child.type === 'JSXText') {\n          const value = child.value\n            // Replace tabs w/ spaces.\n            .replace(/\\t/g, ' ')\n            // Use line feeds, drop spaces around them.\n            .replace(/ *(\\r?\\n|\\r) */g, '\\n')\n            // Collapse multiple line feeds.\n            .replace(/\\n+/g, '\\n')\n            // Drop final line feeds.\n            .replace(/\\n+$/, '')\n            // Drop first line feeds.\n            .replace(/^\\n+/, '')\n            // Replace line feeds with spaces.\n            .replace(/\\n/g, ' ')\n\n          // Ignore collapsible text.\n          if (value) {\n            children.push(create(child, {type: 'Literal', value}))\n          }\n        } else {\n          // @ts-expect-error JSX{Element,Fragment} have already been compiled,\n          // and `JSXSpreadChild` is not supported in Babel either, so ignore\n          // it.\n          children.push(child)\n        }\n      }\n\n      /** @type {MemberExpression | Literal | Identifier} */\n      let name\n      /** @type {Array<Property>} */\n      let fields = []\n      /** @type {Array<Expression>} */\n      const objects = []\n      /** @type {Array<Expression | SpreadElement>} */\n      let parameters = []\n      /** @type {Expression | undefined} */\n      let key\n\n      // Do the stuff needed for elements.\n      if (node.type === 'JSXElement') {\n        name = toIdentifier(node.openingElement.name)\n\n        // If the name could be an identifier, but start with a lowercase letter,\n        // it’s not a component.\n        if (name.type === 'Identifier' && /^[a-z]/.test(name.name)) {\n          name = create(name, {type: 'Literal', value: name.name})\n        }\n\n        /** @type {boolean | undefined} */\n        let spread\n        const attributes = node.openingElement.attributes\n        let index = -1\n\n        // Place props in the right order, because we might have duplicates\n        // in them and what’s spread in.\n        while (++index < attributes.length) {\n          const attribute = attributes[index]\n\n          if (attribute.type === 'JSXSpreadAttribute') {\n            if (fields.length > 0) {\n              objects.push({type: 'ObjectExpression', properties: fields})\n              fields = []\n            }\n\n            objects.push(attribute.argument)\n            spread = true\n          } else {\n            const prop = toProperty(attribute)\n\n            if (\n              automatic &&\n              prop.key.type === 'Identifier' &&\n              prop.key.name === 'key'\n            ) {\n              if (spread) {\n                throw new Error(\n                  'Expected `key` to come before any spread expressions'\n                )\n              }\n\n              // @ts-expect-error I can’t see object patterns being used as\n              // attribute values? 🤷‍♂️\n              key = prop.value\n            } else {\n              fields.push(prop)\n            }\n          }\n        }\n      }\n      // …and fragments.\n      else if (automatic) {\n        imports.fragment = true\n        name = {type: 'Identifier', name: '_Fragment'}\n      } else {\n        name = toMemberExpression(\n          annotations.jsxFrag || config.pragmaFrag || 'React.Fragment'\n        )\n      }\n\n      if (automatic) {\n        if (children.length > 0) {\n          fields.push({\n            type: 'Property',\n            key: {type: 'Identifier', name: 'children'},\n            value:\n              children.length > 1\n                ? {type: 'ArrayExpression', elements: children}\n                : children[0],\n            kind: 'init',\n            method: false,\n            shorthand: false,\n            computed: false\n          })\n        }\n      } else {\n        parameters = children\n      }\n\n      if (fields.length > 0) {\n        objects.push({type: 'ObjectExpression', properties: fields})\n      }\n\n      /** @type {Expression | undefined} */\n      let props\n      /** @type {MemberExpression | Literal | Identifier} */\n      let callee\n\n      if (objects.length > 1) {\n        // Don’t mutate the first object, shallow clone instead.\n        if (objects[0].type !== 'ObjectExpression') {\n          objects.unshift({type: 'ObjectExpression', properties: []})\n        }\n\n        props = {\n          type: 'CallExpression',\n          callee: toMemberExpression('Object.assign'),\n          arguments: objects,\n          optional: false\n        }\n      } else if (objects.length > 0) {\n        props = objects[0]\n      }\n\n      if (automatic) {\n        parameters.push(props || {type: 'ObjectExpression', properties: []})\n\n        if (key) {\n          parameters.push(key)\n        } else if (config.development) {\n          parameters.push({type: 'Identifier', name: 'undefined'})\n        }\n\n        const isStaticChildren = children.length > 1\n\n        if (config.development) {\n          imports.jsxDEV = true\n          callee = {\n            type: 'Identifier',\n            name: '_jsxDEV'\n          }\n          parameters.push({type: 'Literal', value: isStaticChildren})\n\n          /** @type {ObjectExpression} */\n          const source = {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'fileName'},\n                value: {\n                  type: 'Literal',\n                  value: config.filePath || '<source.js>'\n                }\n              }\n            ]\n          }\n\n          if (node.loc) {\n            source.properties.push(\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'lineNumber'},\n                value: {type: 'Literal', value: node.loc.start.line}\n              },\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'columnNumber'},\n                value: {type: 'Literal', value: node.loc.start.column + 1}\n              }\n            )\n          }\n\n          parameters.push(source, {type: 'ThisExpression'})\n        } else if (isStaticChildren) {\n          imports.jsxs = true\n          callee = {type: 'Identifier', name: '_jsxs'}\n        } else {\n          imports.jsx = true\n          callee = {type: 'Identifier', name: '_jsx'}\n        }\n      }\n      // Classic.\n      else {\n        // There are props or children.\n        if (props || parameters.length > 0) {\n          parameters.unshift(props || {type: 'Literal', value: null})\n        }\n\n        callee = toMemberExpression(\n          annotations.jsx || config.pragma || 'React.createElement'\n        )\n      }\n\n      parameters.unshift(name)\n\n      // Types of `estree-walker` are wrong\n      this.replace(\n        create(node, {\n          type: 'CallExpression',\n          callee,\n          arguments: parameters,\n          optional: false\n        })\n      )\n    }\n  })\n\n  return tree\n}\n\n/**\n * @param {JSXAttribute} node\n * @returns {Property}\n */\nfunction toProperty(node) {\n  /** @type {Expression} */\n  let value\n\n  if (node.value) {\n    if (node.value.type === 'JSXExpressionContainer') {\n      // @ts-expect-error `JSXEmptyExpression` is not allowed in props.\n      value = node.value.expression\n    }\n    // Literal or call expression.\n    else {\n      // @ts-expect-error: JSX{Element,Fragment} are already compiled to\n      // `CallExpression`.\n      value = node.value\n      // @ts-expect-error Remove `raw` so we don’t get character references in\n      // strings.\n      delete value.raw\n    }\n  }\n  // Boolean prop.\n  else {\n    value = {type: 'Literal', value: true}\n  }\n\n  return create(node, {\n    type: 'Property',\n    key: toIdentifier(node.name),\n    value,\n    kind: 'init',\n    method: false,\n    shorthand: false,\n    computed: false\n  })\n}\n\n/**\n * @param {JSXMemberExpression | JSXNamespacedName | JSXIdentifier} node\n * @returns {MemberExpression | Identifier | Literal}\n */\nfunction toIdentifier(node) {\n  /** @type {MemberExpression | Identifier | Literal} */\n  let replace\n\n  if (node.type === 'JSXMemberExpression') {\n    // `property` is always a `JSXIdentifier`, but it could be something that\n    // isn’t an ES identifier name.\n    const id = toIdentifier(node.property)\n    replace = {\n      type: 'MemberExpression',\n      object: toIdentifier(node.object),\n      property: id,\n      computed: id.type === 'Literal',\n      optional: false\n    }\n  } else if (node.type === 'JSXNamespacedName') {\n    replace = {\n      type: 'Literal',\n      value: node.namespace.name + ':' + node.name.name\n    }\n  }\n  // Must be `JSXIdentifier`.\n  else {\n    replace = isIdentifierName(node.name)\n      ? {type: 'Identifier', name: node.name}\n      : {type: 'Literal', value: node.name}\n  }\n\n  return create(node, replace)\n}\n\n/**\n * @param {string} id\n * @returns {Identifier | Literal | MemberExpression}\n */\nfunction toMemberExpression(id) {\n  const identifiers = id.split('.')\n  let index = -1\n  /** @type {Identifier | Literal | MemberExpression | undefined} */\n  let result\n\n  while (++index < identifiers.length) {\n    /** @type {Identifier | Literal} */\n    const prop = isIdentifierName(identifiers[index])\n      ? {type: 'Identifier', name: identifiers[index]}\n      : {type: 'Literal', value: identifiers[index]}\n    result = result\n      ? {\n          type: 'MemberExpression',\n          object: result,\n          property: prop,\n          computed: Boolean(index && prop.type === 'Literal'),\n          optional: false\n        }\n      : prop\n  }\n\n  // @ts-expect-error: always a result.\n  return result\n}\n\n/**\n * @template {Node} T\n * @param {Node} from\n * @param {T} node\n * @returns {T}\n */\nfunction create(from, node) {\n  const fields = ['start', 'end', 'loc', 'range', 'comments']\n  let index = -1\n\n  while (++index < fields.length) {\n    const field = fields[index]\n    if (field in from) {\n      // @ts-expect-error: indexable.\n      node[field] = from[field]\n    }\n  }\n\n  return node\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA0FC;;;;;;;;AAKD,MAAM,QAAQ;AA4BP,SAAS,SAAS,IAAI,EAAE,OAAO;IACpC,MAAM,SAAS,WAAW,CAAC;IAC3B,IAAI,YAAY,OAAO,OAAO,KAAK;IACnC,wBAAwB,GACxB,MAAM,cAAc,CAAC;IACrB,oBAAoB,GACpB,MAAM,UAAU,CAAC;IAEjB,+MAAK,MAAM;QACT,qDAAqD;QACrD,OAAM,iBAAiB,GAAG,IAAI;YAC5B,IAAI,KAAK,IAAI,KAAK,WAAW;gBAC3B,MAAM,WAAW,KAAK,QAAQ,IAAI,EAAE;gBACpC,IAAI,QAAQ,CAAC;gBAEb,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;oBAChC,MAAM,SAAS,GAAG;oBAElB,IAAI,QAAQ,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;oBAE5C,MAAO,MAAO;wBACZ,+BAA+B;wBAC/B,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE;wBAChC,QAAQ,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;oBAC1C;gBACF;gBAEA,IAAI,YAAY,UAAU,EAAE;oBAC1B,IAAI,YAAY,UAAU,KAAK,aAAa;wBAC1C,YAAY;wBAEZ,IAAI,YAAY,GAAG,EAAE;4BACnB,MAAM,IAAI,MAAM;wBAClB;wBAEA,IAAI,YAAY,OAAO,EAAE;4BACvB,MAAM,IAAI,MACR;wBAEJ;oBACF,OAAO,IAAI,YAAY,UAAU,KAAK,WAAW;wBAC/C,YAAY;wBAEZ,IAAI,YAAY,eAAe,EAAE;4BAC/B,MAAM,IAAI,MACR;wBAEJ;oBACF,OAAO;wBACL,MAAM,IAAI,MACR,8BACE,YAAY,UAAU,GACtB;oBAEN;gBACF;YACF;QACF;QACA,qDAAqD;QACrD,sCAAsC;QACtC,OAAM,iBAAiB,GAAG,IAAI;YAC5B,IAAI,KAAK,IAAI,KAAK,WAAW;gBAC3B,mCAAmC,GACnC,MAAM,aAAa,EAAE;gBAErB,IAAI,QAAQ,QAAQ,EAAE;oBACpB,WAAW,IAAI,CAAC;wBACd,MAAM;wBACN,UAAU;4BAAC,MAAM;4BAAc,MAAM;wBAAU;wBAC/C,OAAO;4BAAC,MAAM;4BAAc,MAAM;wBAAW;oBAC/C;gBACF;gBAEA,IAAI,QAAQ,GAAG,EAAE;oBACf,WAAW,IAAI,CAAC;wBACd,MAAM;wBACN,UAAU;4BAAC,MAAM;4BAAc,MAAM;wBAAK;wBAC1C,OAAO;4BAAC,MAAM;4BAAc,MAAM;wBAAM;oBAC1C;gBACF;gBAEA,IAAI,QAAQ,IAAI,EAAE;oBAChB,WAAW,IAAI,CAAC;wBACd,MAAM;wBACN,UAAU;4BAAC,MAAM;4BAAc,MAAM;wBAAM;wBAC3C,OAAO;4BAAC,MAAM;4BAAc,MAAM;wBAAO;oBAC3C;gBACF;gBAEA,IAAI,QAAQ,MAAM,EAAE;oBAClB,WAAW,IAAI,CAAC;wBACd,MAAM;wBACN,UAAU;4BAAC,MAAM;4BAAc,MAAM;wBAAQ;wBAC7C,OAAO;4BAAC,MAAM;4BAAc,MAAM;wBAAS;oBAC7C;gBACF;gBAEA,IAAI,WAAW,MAAM,GAAG,GAAG;oBACzB,KAAK,IAAI,CAAC,OAAO,CAAC;wBAChB,MAAM;wBACN;wBACA,QAAQ;4BACN,MAAM;4BACN,OACE,CAAC,YAAY,eAAe,IAC1B,OAAO,YAAY,IACnB,OAAO,IACT,CAAC,OAAO,WAAW,GAAG,qBAAqB,cAAc;wBAC7D;oBACF;gBACF;YACF;YAEA,IAAI,KAAK,IAAI,KAAK,gBAAgB,KAAK,IAAI,KAAK,eAAe;gBAC7D;YACF;YAEA,8BAA8B,GAC9B,MAAM,WAAW,EAAE;YACnB,IAAI,QAAQ,CAAC;YAEb,yBAAyB;YACzB,MAAO,EAAE,QAAQ,KAAK,QAAQ,CAAC,MAAM,CAAE;gBACrC,MAAM,QAAQ,KAAK,QAAQ,CAAC,MAAM;gBAElC,IAAI,MAAM,IAAI,KAAK,0BAA0B;oBAC3C,4BAA4B;oBAC5B,IAAI,MAAM,UAAU,CAAC,IAAI,KAAK,sBAAsB;wBAClD,SAAS,IAAI,CAAC,MAAM,UAAU;oBAChC;gBACF,OAAO,IAAI,MAAM,IAAI,KAAK,WAAW;oBACnC,MAAM,QAAQ,MAAM,KAAK,AACvB,0BAA0B;qBACzB,OAAO,CAAC,OAAO,IAChB,2CAA2C;qBAC1C,OAAO,CAAC,mBAAmB,KAC5B,gCAAgC;qBAC/B,OAAO,CAAC,QAAQ,KACjB,yBAAyB;qBACxB,OAAO,CAAC,QAAQ,GACjB,yBAAyB;qBACxB,OAAO,CAAC,QAAQ,GACjB,kCAAkC;qBACjC,OAAO,CAAC,OAAO;oBAElB,2BAA2B;oBAC3B,IAAI,OAAO;wBACT,SAAS,IAAI,CAAC,OAAO,OAAO;4BAAC,MAAM;4BAAW;wBAAK;oBACrD;gBACF,OAAO;oBACL,qEAAqE;oBACrE,mEAAmE;oBACnE,MAAM;oBACN,SAAS,IAAI,CAAC;gBAChB;YACF;YAEA,oDAAoD,GACpD,IAAI;YACJ,4BAA4B,GAC5B,IAAI,SAAS,EAAE;YACf,8BAA8B,GAC9B,MAAM,UAAU,EAAE;YAClB,8CAA8C,GAC9C,IAAI,aAAa,EAAE;YACnB,mCAAmC,GACnC,IAAI;YAEJ,oCAAoC;YACpC,IAAI,KAAK,IAAI,KAAK,cAAc;gBAC9B,OAAO,aAAa,KAAK,cAAc,CAAC,IAAI;gBAE5C,yEAAyE;gBACzE,wBAAwB;gBACxB,IAAI,KAAK,IAAI,KAAK,gBAAgB,SAAS,IAAI,CAAC,KAAK,IAAI,GAAG;oBAC1D,OAAO,OAAO,MAAM;wBAAC,MAAM;wBAAW,OAAO,KAAK,IAAI;oBAAA;gBACxD;gBAEA,gCAAgC,GAChC,IAAI;gBACJ,MAAM,aAAa,KAAK,cAAc,CAAC,UAAU;gBACjD,IAAI,QAAQ,CAAC;gBAEb,mEAAmE;gBACnE,gCAAgC;gBAChC,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;oBAClC,MAAM,YAAY,UAAU,CAAC,MAAM;oBAEnC,IAAI,UAAU,IAAI,KAAK,sBAAsB;wBAC3C,IAAI,OAAO,MAAM,GAAG,GAAG;4BACrB,QAAQ,IAAI,CAAC;gCAAC,MAAM;gCAAoB,YAAY;4BAAM;4BAC1D,SAAS,EAAE;wBACb;wBAEA,QAAQ,IAAI,CAAC,UAAU,QAAQ;wBAC/B,SAAS;oBACX,OAAO;wBACL,MAAM,OAAO,WAAW;wBAExB,IACE,aACA,KAAK,GAAG,CAAC,IAAI,KAAK,gBAClB,KAAK,GAAG,CAAC,IAAI,KAAK,OAClB;4BACA,IAAI,QAAQ;gCACV,MAAM,IAAI,MACR;4BAEJ;4BAEA,6DAA6D;4BAC7D,0BAA0B;4BAC1B,MAAM,KAAK,KAAK;wBAClB,OAAO;4BACL,OAAO,IAAI,CAAC;wBACd;oBACF;gBACF;YACF,OAEK,IAAI,WAAW;gBAClB,QAAQ,QAAQ,GAAG;gBACnB,OAAO;oBAAC,MAAM;oBAAc,MAAM;gBAAW;YAC/C,OAAO;gBACL,OAAO,mBACL,YAAY,OAAO,IAAI,OAAO,UAAU,IAAI;YAEhD;YAEA,IAAI,WAAW;gBACb,IAAI,SAAS,MAAM,GAAG,GAAG;oBACvB,OAAO,IAAI,CAAC;wBACV,MAAM;wBACN,KAAK;4BAAC,MAAM;4BAAc,MAAM;wBAAU;wBAC1C,OACE,SAAS,MAAM,GAAG,IACd;4BAAC,MAAM;4BAAmB,UAAU;wBAAQ,IAC5C,QAAQ,CAAC,EAAE;wBACjB,MAAM;wBACN,QAAQ;wBACR,WAAW;wBACX,UAAU;oBACZ;gBACF;YACF,OAAO;gBACL,aAAa;YACf;YAEA,IAAI,OAAO,MAAM,GAAG,GAAG;gBACrB,QAAQ,IAAI,CAAC;oBAAC,MAAM;oBAAoB,YAAY;gBAAM;YAC5D;YAEA,mCAAmC,GACnC,IAAI;YACJ,oDAAoD,GACpD,IAAI;YAEJ,IAAI,QAAQ,MAAM,GAAG,GAAG;gBACtB,wDAAwD;gBACxD,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,KAAK,oBAAoB;oBAC1C,QAAQ,OAAO,CAAC;wBAAC,MAAM;wBAAoB,YAAY,EAAE;oBAAA;gBAC3D;gBAEA,QAAQ;oBACN,MAAM;oBACN,QAAQ,mBAAmB;oBAC3B,WAAW;oBACX,UAAU;gBACZ;YACF,OAAO,IAAI,QAAQ,MAAM,GAAG,GAAG;gBAC7B,QAAQ,OAAO,CAAC,EAAE;YACpB;YAEA,IAAI,WAAW;gBACb,WAAW,IAAI,CAAC,SAAS;oBAAC,MAAM;oBAAoB,YAAY,EAAE;gBAAA;gBAElE,IAAI,KAAK;oBACP,WAAW,IAAI,CAAC;gBAClB,OAAO,IAAI,OAAO,WAAW,EAAE;oBAC7B,WAAW,IAAI,CAAC;wBAAC,MAAM;wBAAc,MAAM;oBAAW;gBACxD;gBAEA,MAAM,mBAAmB,SAAS,MAAM,GAAG;gBAE3C,IAAI,OAAO,WAAW,EAAE;oBACtB,QAAQ,MAAM,GAAG;oBACjB,SAAS;wBACP,MAAM;wBACN,MAAM;oBACR;oBACA,WAAW,IAAI,CAAC;wBAAC,MAAM;wBAAW,OAAO;oBAAgB;oBAEzD,6BAA6B,GAC7B,MAAM,SAAS;wBACb,MAAM;wBACN,YAAY;4BACV;gCACE,MAAM;gCACN,QAAQ;gCACR,WAAW;gCACX,UAAU;gCACV,MAAM;gCACN,KAAK;oCAAC,MAAM;oCAAc,MAAM;gCAAU;gCAC1C,OAAO;oCACL,MAAM;oCACN,OAAO,OAAO,QAAQ,IAAI;gCAC5B;4BACF;yBACD;oBACH;oBAEA,IAAI,KAAK,GAAG,EAAE;wBACZ,OAAO,UAAU,CAAC,IAAI,CACpB;4BACE,MAAM;4BACN,QAAQ;4BACR,WAAW;4BACX,UAAU;4BACV,MAAM;4BACN,KAAK;gCAAC,MAAM;gCAAc,MAAM;4BAAY;4BAC5C,OAAO;gCAAC,MAAM;gCAAW,OAAO,KAAK,GAAG,CAAC,KAAK,CAAC,IAAI;4BAAA;wBACrD,GACA;4BACE,MAAM;4BACN,QAAQ;4BACR,WAAW;4BACX,UAAU;4BACV,MAAM;4BACN,KAAK;gCAAC,MAAM;gCAAc,MAAM;4BAAc;4BAC9C,OAAO;gCAAC,MAAM;gCAAW,OAAO,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG;4BAAC;wBAC3D;oBAEJ;oBAEA,WAAW,IAAI,CAAC,QAAQ;wBAAC,MAAM;oBAAgB;gBACjD,OAAO,IAAI,kBAAkB;oBAC3B,QAAQ,IAAI,GAAG;oBACf,SAAS;wBAAC,MAAM;wBAAc,MAAM;oBAAO;gBAC7C,OAAO;oBACL,QAAQ,GAAG,GAAG;oBACd,SAAS;wBAAC,MAAM;wBAAc,MAAM;oBAAM;gBAC5C;YACF,OAEK;gBACH,+BAA+B;gBAC/B,IAAI,SAAS,WAAW,MAAM,GAAG,GAAG;oBAClC,WAAW,OAAO,CAAC,SAAS;wBAAC,MAAM;wBAAW,OAAO;oBAAI;gBAC3D;gBAEA,SAAS,mBACP,YAAY,GAAG,IAAI,OAAO,MAAM,IAAI;YAExC;YAEA,WAAW,OAAO,CAAC;YAEnB,qCAAqC;YACrC,IAAI,CAAC,OAAO,CACV,OAAO,MAAM;gBACX,MAAM;gBACN;gBACA,WAAW;gBACX,UAAU;YACZ;QAEJ;IACF;IAEA,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,WAAW,IAAI;IACtB,uBAAuB,GACvB,IAAI;IAEJ,IAAI,KAAK,KAAK,EAAE;QACd,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,0BAA0B;YAChD,iEAAiE;YACjE,QAAQ,KAAK,KAAK,CAAC,UAAU;QAC/B,OAEK;YACH,kEAAkE;YAClE,oBAAoB;YACpB,QAAQ,KAAK,KAAK;YAClB,wEAAwE;YACxE,WAAW;YACX,OAAO,MAAM,GAAG;QAClB;IACF,OAEK;QACH,QAAQ;YAAC,MAAM;YAAW,OAAO;QAAI;IACvC;IAEA,OAAO,OAAO,MAAM;QAClB,MAAM;QACN,KAAK,aAAa,KAAK,IAAI;QAC3B;QACA,MAAM;QACN,QAAQ;QACR,WAAW;QACX,UAAU;IACZ;AACF;AAEA;;;CAGC,GACD,SAAS,aAAa,IAAI;IACxB,oDAAoD,GACpD,IAAI;IAEJ,IAAI,KAAK,IAAI,KAAK,uBAAuB;QACvC,yEAAyE;QACzE,+BAA+B;QAC/B,MAAM,KAAK,aAAa,KAAK,QAAQ;QACrC,UAAU;YACR,MAAM;YACN,QAAQ,aAAa,KAAK,MAAM;YAChC,UAAU;YACV,UAAU,GAAG,IAAI,KAAK;YACtB,UAAU;QACZ;IACF,OAAO,IAAI,KAAK,IAAI,KAAK,qBAAqB;QAC5C,UAAU;YACR,MAAM;YACN,OAAO,KAAK,SAAS,CAAC,IAAI,GAAG,MAAM,KAAK,IAAI,CAAC,IAAI;QACnD;IACF,OAEK;QACH,UAAU,4PAAiB,KAAK,IAAI,IAChC;YAAC,MAAM;YAAc,MAAM,KAAK,IAAI;QAAA,IACpC;YAAC,MAAM;YAAW,OAAO,KAAK,IAAI;QAAA;IACxC;IAEA,OAAO,OAAO,MAAM;AACtB;AAEA;;;CAGC,GACD,SAAS,mBAAmB,EAAE;IAC5B,MAAM,cAAc,GAAG,KAAK,CAAC;IAC7B,IAAI,QAAQ,CAAC;IACb,gEAAgE,GAChE,IAAI;IAEJ,MAAO,EAAE,QAAQ,YAAY,MAAM,CAAE;QACnC,iCAAiC,GACjC,MAAM,OAAO,4PAAiB,WAAW,CAAC,MAAM,IAC5C;YAAC,MAAM;YAAc,MAAM,WAAW,CAAC,MAAM;QAAA,IAC7C;YAAC,MAAM;YAAW,OAAO,WAAW,CAAC,MAAM;QAAA;QAC/C,SAAS,SACL;YACE,MAAM;YACN,QAAQ;YACR,UAAU;YACV,UAAU,QAAQ,SAAS,KAAK,IAAI,KAAK;YACzC,UAAU;QACZ,IACA;IACN;IAEA,qCAAqC;IACrC,OAAO;AACT;AAEA;;;;;CAKC,GACD,SAAS,OAAO,IAAI,EAAE,IAAI;IACxB,MAAM,SAAS;QAAC;QAAS;QAAO;QAAO;QAAS;KAAW;IAC3D,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,MAAM,QAAQ,MAAM,CAAC,MAAM;QAC3B,IAAI,SAAS,MAAM;YACjB,+BAA+B;YAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;QAC3B;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 9396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9401, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-build-jsx@2.2.2/node_modules/estree-util-build-jsx/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Runtime} Runtime\n *\n * @typedef {Options} BuildJsxOptions\n *   To do: remove next major (replaced by `Options` ).\n */\n\nexport {buildJsx} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;;;;CAMC"}},
    {"offset": {"line": 9413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9418, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-build-jsx@3.0.1/node_modules/estree-util-build-jsx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Expression} Expression\n * @typedef {import('estree-jsx').Identifier} Identifier\n * @typedef {import('estree-jsx').ImportSpecifier} ImportSpecifier\n * @typedef {import('estree-jsx').JSXAttribute} JSXAttribute\n * @typedef {import('estree-jsx').JSXIdentifier} JSXIdentifier\n * @typedef {import('estree-jsx').JSXMemberExpression} JSXMemberExpression\n * @typedef {import('estree-jsx').JSXNamespacedName} JSXNamespacedName\n * @typedef {import('estree-jsx').Literal} Literal\n * @typedef {import('estree-jsx').MemberExpression} MemberExpression\n * @typedef {import('estree-jsx').Node} Node\n * @typedef {import('estree-jsx').ObjectExpression} ObjectExpression\n * @typedef {import('estree-jsx').Property} Property\n * @typedef {import('estree-jsx').SpreadElement} SpreadElement\n *\n * @typedef {'automatic' | 'classic'} Runtime\n *   How to transform JSX.\n *\n * @typedef Options\n *   Configuration.\n *\n *   > 👉 **Note**: you can also configure `runtime`, `importSource`, `pragma`,\n *   > and `pragmaFrag` from within files through comments.\n * @property {Runtime | null | undefined} [runtime='classic']\n *   Choose the runtime (default: `'classic'`).\n *\n *   Comment form: `@jsxRuntime theRuntime`.\n * @property {string | null | undefined} [importSource='react']\n *   Place to import `jsx`, `jsxs`, `jsxDEV`, and `Fragment` from, when the\n *   effective runtime is automatic (default: `'react'`).\n *\n *   Comment form: `@jsxImportSource theSource`.\n *\n *   > 👉 **Note**: `/jsx-runtime` or `/jsx-dev-runtime` is appended to this\n *   > provided source.\n *   > In CJS, that can resolve to a file (as in `theSource/jsx-runtime.js`),\n *   > but for ESM an export map needs to be set up to point to files:\n *   >\n *   > ```js\n *   > // …\n *   > \"exports\": {\n *   >   // …\n *   >   \"./jsx-runtime\": \"./path/to/jsx-runtime.js\",\n *   >   \"./jsx-dev-runtime\": \"./path/to/jsx-runtime.js\"\n *   >   // …\n *   > ```\n * @property {string | null | undefined} [pragma='React.createElement']\n *   Identifier or member expression to call when the effective runtime is\n *   classic (default: `'React.createElement'`).\n *\n *   Comment form: `@jsx identifier`.\n * @property {string | null | undefined} [pragmaFrag='React.Fragment']\n *   Identifier or member expression to use as a symbol for fragments when the\n *   effective runtime is classic (default: `'React.Fragment'`).\n *\n *   Comment form: `@jsxFrag identifier`.\n * @property {boolean | null | undefined} [development=false]\n *   When in the automatic runtime, whether to import\n *   `theSource/jsx-dev-runtime.js`, use `jsxDEV`, and pass location info when\n *   available (default: `false`).\n *\n *   This helps debugging but adds a lot of code that you don’t want in\n *   production.\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in location info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n *\n * @typedef Annotations\n *   State where info from comments is gathered.\n * @property {string | undefined} [jsx]\n *   JSX identifier (`pragma`).\n * @property {string | undefined} [jsxFrag]\n *   JSX identifier of fragment (`pragmaFrag`).\n * @property {string | undefined} [jsxImportSource]\n *   Where to import an automatic JSX runtime from.\n * @property {Runtime | undefined} [jsxRuntime]\n *   Runtime.\n *\n * @typedef Imports\n *   State of used identifiers from the automatic runtime.\n * @property {boolean | undefined} [fragment]\n *   Symbol of `Fragment`.\n * @property {boolean | undefined} [jsx]\n *   Symbol of `jsx`.\n * @property {boolean | undefined} [jsxs]\n *   Symbol of `jsxs`.\n * @property {boolean | undefined} [jsxDEV]\n *   Symbol of `jsxDEV`.\n */\n\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {walk} from 'estree-walker'\n\nconst regex = /@(jsx|jsxFrag|jsxImportSource|jsxRuntime)\\s+(\\S+)/g\n\n/**\n * Turn JSX in `tree` into function calls: `<x />` -> `h('x')`!\n *\n * ###### Algorithm\n *\n * In almost all cases, this utility is the same as the Babel plugin, except that\n * they work on slightly different syntax trees.\n *\n * Some differences:\n *\n * *   no pure annotations things\n * *   `this` is not a component: `<this>` -> `h('this')`, not `h(this)`\n * *   namespaces are supported: `<a:b c:d>` -> `h('a:b', {'c:d': true})`,\n *     which throws by default in Babel or can be turned on with `throwIfNamespace`\n * *   no `useSpread`, `useBuiltIns`, or `filter` options\n *\n * @param {Node} tree\n *   Tree to transform (typically `Program`).\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport function buildJsx(tree, options) {\n  const config = options || {}\n  let automatic = config.runtime === 'automatic'\n  /** @type {Annotations} */\n  const annotations = {}\n  /** @type {Imports} */\n  const imports = {}\n\n  walk(tree, {\n    enter(node) {\n      if (node.type === 'Program') {\n        const comments = node.comments || []\n        let index = -1\n\n        while (++index < comments.length) {\n          regex.lastIndex = 0\n\n          let match = regex.exec(comments[index].value)\n\n          while (match) {\n            // @ts-expect-error: `match[1]` is always a key, `match[2]` when\n            // runtime is checked later.\n            annotations[match[1]] = match[2]\n            match = regex.exec(comments[index].value)\n          }\n        }\n\n        if (annotations.jsxRuntime) {\n          if (annotations.jsxRuntime === 'automatic') {\n            automatic = true\n\n            if (annotations.jsx) {\n              throw new Error('Unexpected `@jsx` pragma w/ automatic runtime')\n            }\n\n            if (annotations.jsxFrag) {\n              throw new Error(\n                'Unexpected `@jsxFrag` pragma w/ automatic runtime'\n              )\n            }\n          } else if (annotations.jsxRuntime === 'classic') {\n            automatic = false\n\n            if (annotations.jsxImportSource) {\n              throw new Error(\n                'Unexpected `@jsxImportSource` w/ classic runtime'\n              )\n            }\n          } else {\n            throw new Error(\n              'Unexpected `jsxRuntime` `' +\n                annotations.jsxRuntime +\n                '`, expected `automatic` or `classic`'\n            )\n          }\n        }\n      }\n    },\n    // eslint-disable-next-line complexity\n    leave(node) {\n      if (node.type === 'Program') {\n        /** @type {Array<ImportSpecifier>} */\n        const specifiers = []\n\n        if (imports.fragment) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'Fragment'},\n            local: {type: 'Identifier', name: '_Fragment'}\n          })\n        }\n\n        if (imports.jsx) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsx'},\n            local: {type: 'Identifier', name: '_jsx'}\n          })\n        }\n\n        if (imports.jsxs) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxs'},\n            local: {type: 'Identifier', name: '_jsxs'}\n          })\n        }\n\n        if (imports.jsxDEV) {\n          specifiers.push({\n            type: 'ImportSpecifier',\n            imported: {type: 'Identifier', name: 'jsxDEV'},\n            local: {type: 'Identifier', name: '_jsxDEV'}\n          })\n        }\n\n        if (specifiers.length > 0) {\n          let injectIndex = 0\n\n          while (injectIndex < node.body.length) {\n            const child = node.body[injectIndex]\n\n            if ('directive' in child && child.directive) {\n              injectIndex++\n            } else {\n              break\n            }\n          }\n\n          node.body.splice(injectIndex, 0, {\n            type: 'ImportDeclaration',\n            specifiers,\n            source: {\n              type: 'Literal',\n              value:\n                (annotations.jsxImportSource ||\n                  config.importSource ||\n                  'react') +\n                (config.development ? '/jsx-dev-runtime' : '/jsx-runtime')\n            }\n          })\n        }\n      }\n\n      if (node.type !== 'JSXElement' && node.type !== 'JSXFragment') {\n        return\n      }\n\n      /** @type {Array<Expression>} */\n      const children = []\n      let index = -1\n\n      // Figure out `children`.\n      while (++index < node.children.length) {\n        const child = node.children[index]\n\n        if (child.type === 'JSXExpressionContainer') {\n          // Ignore empty expressions.\n          if (child.expression.type !== 'JSXEmptyExpression') {\n            children.push(child.expression)\n          }\n        } else if (child.type === 'JSXText') {\n          const value = child.value\n            // Replace tabs w/ spaces.\n            .replace(/\\t/g, ' ')\n            // Use line feeds, drop spaces around them.\n            .replace(/ *(\\r?\\n|\\r) */g, '\\n')\n            // Collapse multiple line feeds.\n            .replace(/\\n+/g, '\\n')\n            // Drop final line feeds.\n            .replace(/\\n+$/, '')\n            // Drop first line feeds.\n            .replace(/^\\n+/, '')\n            // Replace line feeds with spaces.\n            .replace(/\\n/g, ' ')\n\n          // Ignore collapsible text.\n          if (value) {\n            /** @type {Node} */\n            const text = {type: 'Literal', value}\n            create(child, text)\n            children.push(text)\n          }\n        } else {\n          assert(\n            child.type !== 'JSXElement' &&\n              child.type !== 'JSXFragment' &&\n              child.type !== 'JSXSpreadChild'\n          )\n          children.push(child)\n        }\n      }\n\n      /** @type {Identifier | Literal | MemberExpression} */\n      let name\n      /** @type {Array<Property | SpreadElement>} */\n      const fields = []\n      /** @type {Array<Expression>} */\n      let parameters = []\n      /** @type {Expression | undefined} */\n      let key\n\n      // Do the stuff needed for elements.\n      if (node.type === 'JSXElement') {\n        name = toIdentifier(node.openingElement.name)\n\n        // If the name could be an identifier, but start with a lowercase letter,\n        // it’s not a component.\n        if (name.type === 'Identifier' && /^[a-z]/.test(name.name)) {\n          /** @type {Node} */\n          const next = {type: 'Literal', value: name.name}\n          create(name, next)\n          name = next\n        }\n\n        /** @type {boolean | undefined} */\n        let spread\n        const attributes = node.openingElement.attributes\n        let index = -1\n\n        // Place props in the right order, because we might have duplicates\n        // in them and what’s spread in.\n        while (++index < attributes.length) {\n          const attribute = attributes[index]\n\n          if (attribute.type === 'JSXSpreadAttribute') {\n            if (attribute.argument.type === 'ObjectExpression') {\n              fields.push(...attribute.argument.properties)\n            } else {\n              fields.push({type: 'SpreadElement', argument: attribute.argument})\n            }\n\n            spread = true\n          } else {\n            const prop = toProperty(attribute)\n\n            if (\n              automatic &&\n              prop.key.type === 'Identifier' &&\n              prop.key.name === 'key'\n            ) {\n              if (spread) {\n                throw new Error(\n                  'Expected `key` to come before any spread expressions'\n                )\n              }\n\n              const value = prop.value\n\n              assert(\n                value.type !== 'AssignmentPattern' &&\n                  value.type !== 'ArrayPattern' &&\n                  value.type !== 'ObjectPattern' &&\n                  value.type !== 'RestElement'\n              )\n\n              key = value\n            } else {\n              fields.push(prop)\n            }\n          }\n        }\n      }\n      // …and fragments.\n      else if (automatic) {\n        imports.fragment = true\n        name = {type: 'Identifier', name: '_Fragment'}\n      } else {\n        name = toMemberExpression(\n          annotations.jsxFrag || config.pragmaFrag || 'React.Fragment'\n        )\n      }\n\n      if (automatic) {\n        if (children.length > 0) {\n          fields.push({\n            type: 'Property',\n            key: {type: 'Identifier', name: 'children'},\n            value:\n              children.length > 1\n                ? {type: 'ArrayExpression', elements: children}\n                : children[0],\n            kind: 'init',\n            method: false,\n            shorthand: false,\n            computed: false\n          })\n        }\n      } else {\n        parameters = children\n      }\n\n      /** @type {Identifier | Literal | MemberExpression} */\n      let callee\n\n      if (automatic) {\n        parameters.push({type: 'ObjectExpression', properties: fields})\n\n        if (key) {\n          parameters.push(key)\n        } else if (config.development) {\n          parameters.push({type: 'Identifier', name: 'undefined'})\n        }\n\n        const isStaticChildren = children.length > 1\n\n        if (config.development) {\n          imports.jsxDEV = true\n          callee = {\n            type: 'Identifier',\n            name: '_jsxDEV'\n          }\n          parameters.push({type: 'Literal', value: isStaticChildren})\n\n          /** @type {ObjectExpression} */\n          const source = {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'fileName'},\n                value: {\n                  type: 'Literal',\n                  value: config.filePath || '<source.js>'\n                }\n              }\n            ]\n          }\n\n          if (node.loc) {\n            source.properties.push(\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'lineNumber'},\n                value: {type: 'Literal', value: node.loc.start.line}\n              },\n              {\n                type: 'Property',\n                method: false,\n                shorthand: false,\n                computed: false,\n                kind: 'init',\n                key: {type: 'Identifier', name: 'columnNumber'},\n                value: {type: 'Literal', value: node.loc.start.column + 1}\n              }\n            )\n          }\n\n          parameters.push(source, {type: 'ThisExpression'})\n        } else if (isStaticChildren) {\n          imports.jsxs = true\n          callee = {type: 'Identifier', name: '_jsxs'}\n        } else {\n          imports.jsx = true\n          callee = {type: 'Identifier', name: '_jsx'}\n        }\n      }\n      // Classic.\n      else {\n        if (fields.length > 0) {\n          parameters.unshift({type: 'ObjectExpression', properties: fields})\n        } else if (parameters.length > 0) {\n          parameters.unshift({type: 'Literal', value: null})\n        }\n\n        callee = toMemberExpression(\n          annotations.jsx || config.pragma || 'React.createElement'\n        )\n      }\n\n      parameters.unshift(name)\n      /** @type {Node} */\n      const call = {\n        type: 'CallExpression',\n        callee,\n        arguments: parameters,\n        optional: false\n      }\n      create(node, call)\n      this.replace(call)\n    }\n  })\n}\n\n/**\n * Turn a JSX attribute into a JavaScript property.\n *\n * @param {JSXAttribute} node\n *   JSX attribute.\n * @returns {Property}\n *   JS property.\n */\nfunction toProperty(node) {\n  /** @type {Expression} */\n  let value\n\n  if (node.value) {\n    if (node.value.type === 'JSXExpressionContainer') {\n      const valueExpression = node.value.expression\n      assert(\n        valueExpression.type !== 'JSXEmptyExpression',\n        '`JSXEmptyExpression` is not allowed in props.'\n      )\n      value = valueExpression\n    }\n    // Literal or call expression.\n    else {\n      const nodeValue = node.value\n      assert(\n        nodeValue.type !== 'JSXElement' && nodeValue.type !== 'JSXFragment',\n        'JSX{Element,Fragment} are already compiled to `CallExpression`'\n      )\n      value = nodeValue\n      delete value.raw\n    }\n  }\n  // Boolean prop.\n  else {\n    value = {type: 'Literal', value: true}\n  }\n\n  /** @type {Property} */\n  const replacement = {\n    type: 'Property',\n    key: toIdentifier(node.name),\n    value,\n    kind: 'init',\n    method: false,\n    shorthand: false,\n    computed: false\n  }\n  create(node, replacement)\n  return replacement\n}\n\n/**\n * Turn a JSX identifier into a normal JS identifier.\n *\n * @param {JSXIdentifier | JSXMemberExpression | JSXNamespacedName} node\n *   JSX identifier.\n * @returns {Identifier | Literal | MemberExpression}\n *   JS identifier.\n */\nfunction toIdentifier(node) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let replace\n\n  if (node.type === 'JSXMemberExpression') {\n    // `property` is always a `JSXIdentifier`, but it could be something that\n    // isn’t an ES identifier name.\n    const id = toIdentifier(node.property)\n    replace = {\n      type: 'MemberExpression',\n      object: toIdentifier(node.object),\n      property: id,\n      computed: id.type === 'Literal',\n      optional: false\n    }\n  } else if (node.type === 'JSXNamespacedName') {\n    replace = {\n      type: 'Literal',\n      value: node.namespace.name + ':' + node.name.name\n    }\n  }\n  // Must be `JSXIdentifier`.\n  else {\n    replace = isIdentifierName(node.name)\n      ? {type: 'Identifier', name: node.name}\n      : {type: 'Literal', value: node.name}\n  }\n\n  create(node, replace)\n  return replace\n}\n\n/**\n * Turn a dotted string into a member expression.\n *\n * @param {string} id\n *   Identifiers.\n * @returns {Identifier | Literal | MemberExpression}\n *   Expression.\n */\nfunction toMemberExpression(id) {\n  const identifiers = id.split('.')\n  let index = -1\n  /** @type {Identifier | Literal | MemberExpression | undefined} */\n  let result\n\n  while (++index < identifiers.length) {\n    /** @type {Identifier | Literal} */\n    const prop = isIdentifierName(identifiers[index])\n      ? {type: 'Identifier', name: identifiers[index]}\n      : {type: 'Literal', value: identifiers[index]}\n    result = result\n      ? {\n          type: 'MemberExpression',\n          object: result,\n          property: prop,\n          computed: Boolean(index && prop.type === 'Literal'),\n          optional: false\n        }\n      : prop\n  }\n\n  assert(result, 'always a result')\n  return result\n}\n\n/**\n * Inherit some fields from `from` into `to`.\n *\n * @param {Node} from\n *   Node to inherit from.\n * @param {Node} to\n *   Node to add to.\n * @returns {undefined}\n *   Nothing.\n */\nfunction create(from, to) {\n  const fields = ['start', 'end', 'loc', 'range', 'comments']\n  let index = -1\n\n  while (++index < fields.length) {\n    const field = fields[index]\n    if (field in from) {\n      // @ts-expect-error: indexable.\n      to[field] = from[field]\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10002, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-build-jsx@3.0.1/node_modules/estree-util-build-jsx/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Runtime} Runtime\n */\n\nexport {buildJsx} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;CAGC"}},
    {"offset": {"line": 10011, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10016, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/trough@2.1.0/node_modules/trough/index.js"],"sourcesContent":["/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC,GAED;;;;CAIC;;;;AACM,SAAS;IACd,8BAA8B,GAC9B,MAAM,MAAM,EAAE;IACd,qBAAqB,GACrB,MAAM,WAAW;QAAC;QAAK;IAAG;IAE1B,OAAO;IAEP,gBAAgB,GAChB,SAAS,IAAI,GAAG,MAAM;QACpB,IAAI,kBAAkB,CAAC;QACvB,qBAAqB,GACrB,MAAM,WAAW,OAAO,GAAG;QAE3B,IAAI,OAAO,aAAa,YAAY;YAClC,MAAM,IAAI,UAAU,6CAA6C;QACnE;QAEA,KAAK,SAAS;QAEd;;;;;KAKC,GACD,SAAS,KAAK,KAAK,EAAE,GAAG,MAAM;YAC5B,MAAM,KAAK,GAAG,CAAC,EAAE,gBAAgB;YACjC,IAAI,QAAQ,CAAC;YAEb,IAAI,OAAO;gBACT,SAAS;gBACT;YACF;YAEA,sCAAsC;YACtC,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;gBAC9B,IAAI,MAAM,CAAC,MAAM,KAAK,QAAQ,MAAM,CAAC,MAAM,KAAK,WAAW;oBACzD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;gBAC/B;YACF;YAEA,qDAAqD;YACrD,SAAS;YAET,gBAAgB;YAChB,IAAI,IAAI;gBACN,KAAK,IAAI,SAAS;YACpB,OAAO;gBACL,SAAS,SAAS;YACpB;QACF;IACF;IAEA,gBAAgB,GAChB,SAAS,IAAI,UAAU;QACrB,IAAI,OAAO,eAAe,YAAY;YACpC,MAAM,IAAI,UACR,iDAAiD;QAErD;QAEA,IAAI,IAAI,CAAC;QACT,OAAO;IACT;AACF;AAUO,SAAS,KAAK,UAAU,EAAE,QAAQ;IACvC,oBAAoB,GACpB,IAAI;IAEJ,OAAO;IAEP;;;;;GAKC,GACD,SAAS,QAAQ,GAAG,UAAU;QAC5B,MAAM,oBAAoB,WAAW,MAAM,GAAG,WAAW,MAAM;QAC/D,gBAAgB,GAChB,IAAI;QAEJ,IAAI,mBAAmB;YACrB,WAAW,IAAI,CAAC;QAClB;QAEA,IAAI;YACF,SAAS,WAAW,KAAK,CAAC,IAAI,EAAE;QAClC,EAAE,OAAO,OAAO;YACd,MAAM,YAAkC;YAExC,kCAAkC;YAClC,yEAAyE;YACzE,kBAAkB;YAClB,2DAA2D;YAC3D,IAAI,qBAAqB,QAAQ;gBAC/B,MAAM;YACR;YAEA,OAAO,KAAK;QACd;QAEA,IAAI,CAAC,mBAAmB;YACtB,IAAI,kBAAkB,SAAS;gBAC7B,OAAO,IAAI,CAAC,MAAM;YACpB,OAAO,IAAI,kBAAkB,OAAO;gBAClC,KAAK;YACP,OAAO;gBACL,KAAK;YACP;QACF;IACF;IAEA;;;GAGC,GACD,SAAS,KAAK,KAAK,EAAE,GAAG,MAAM;QAC5B,IAAI,CAAC,QAAQ;YACX,SAAS;YACT,SAAS,UAAU;QACrB;IACF;IAEA;;;;GAIC,GACD,SAAS,KAAK,KAAK;QACjB,KAAK,MAAM;IACb;AACF"}},
    {"offset": {"line": 10138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10143, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js"],"sourcesContent":["export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,cAAc,KAAK;IAC1C,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;QAChD,OAAO;IACR;IAEA,MAAM,YAAY,OAAO,cAAc,CAAC;IACxC,OAAO,CAAC,cAAc,QAAQ,cAAc,OAAO,SAAS,IAAI,OAAO,cAAc,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC,OAAO,WAAW,IAAI,KAAK,KAAK,CAAC,CAAC,OAAO,QAAQ,IAAI,KAAK;AAC3K"}},
    {"offset": {"line": 10153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10157, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 10263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10268, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js"],"sourcesContent":["/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,KAAK,KAAK;IACxB,IAAI,OAAO;QACT,MAAM;IACR;AACF"}},
    {"offset": {"line": 10282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10287, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unified@10.1.2/node_modules/unified/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 10758, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 10769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10774, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unified@11.0.4/node_modules/unified/lib/callable-instance.js"],"sourcesContent":["export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAOP;;;;OAIC,GACD,SAAU,QAAQ;IAChB,MAAM,OAAO,IAAI;IACjB,MAAM,SAAS,KAAK,WAAW;IAC/B,MAAM,QACJ,uBAAuB;IACvB,iCAAiC;IACjC,OAAO,SAAS;IAElB,MAAM,OAAO,KAAK,CAAC,SAAS;IAC5B,uDAAuD,GACvD,MAAM,QAAQ;QACZ,OAAO,KAAK,KAAK,CAAC,OAAO;IAC3B;IAEA,OAAO,cAAc,CAAC,OAAO;IAE7B,MAAM,QAAQ,OAAO,mBAAmB,CAAC;IAEzC,KAAK,MAAM,KAAK,MAAO;QACrB,MAAM,aAAa,OAAO,wBAAwB,CAAC,MAAM;QACzD,IAAI,YAAY,OAAO,cAAc,CAAC,OAAO,GAAG;IAClD;IAEA,OAAO;AACT"}},
    {"offset": {"line": 10799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10804, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unified@11.0.4/node_modules/unified/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 11912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11917, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unified@11.0.4/node_modules/unified/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {unified} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 11924, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11929, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js"],"sourcesContent":["const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,MAAM,EAAE,QAAQ;AACtB,MAAM,QAAQ,GAAG,OAAO;AAWjB,SAAS,UAAU,KAAK;IAC7B,MAAM,SAAS,OAAO;IACtB,MAAM,SAAS;IACf,IAAI,QAAQ,OAAO,IAAI,CAAC;IACxB,IAAI,OAAO;IACX,0BAA0B,GAC1B,MAAM,QAAQ,EAAE;IAEhB,MAAO,MAAO;QACZ,MAAM,IAAI,CACR,SAAS,OAAO,KAAK,CAAC,MAAM,MAAM,KAAK,GAAG,OAAO,GAAG,OACpD,KAAK,CAAC,EAAE;QAGV,OAAO,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM;QACpC,QAAQ,OAAO,IAAI,CAAC;IACtB;IAEA,MAAM,IAAI,CAAC,SAAS,OAAO,KAAK,CAAC,OAAO,OAAO,GAAG;IAElD,OAAO,MAAM,IAAI,CAAC;AACpB;AAEA;;;;;;;;;CASC,GACD,SAAS,SAAS,KAAK,EAAE,KAAK,EAAE,GAAG;IACjC,IAAI,aAAa;IACjB,IAAI,WAAW,MAAM,MAAM;IAE3B,IAAI,OAAO;QACT,IAAI,OAAO,MAAM,WAAW,CAAC;QAE7B,MAAO,SAAS,OAAO,SAAS,MAAO;YACrC;YACA,OAAO,MAAM,WAAW,CAAC;QAC3B;IACF;IAEA,IAAI,KAAK;QACP,IAAI,OAAO,MAAM,WAAW,CAAC,WAAW;QAExC,MAAO,SAAS,OAAO,SAAS,MAAO;YACrC;YACA,OAAO,MAAM,WAAW,CAAC,WAAW;QACtC;IACF;IAEA,OAAO,WAAW,aAAa,MAAM,KAAK,CAAC,YAAY,YAAY;AACrE"}},
    {"offset": {"line": 11976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11981, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/values.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * While micromark works based on character codes, this module includes the\n * string versions of ’em.\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n * are available here.\n */\nexport const values = /** @type {const} */ ({\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n})\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,MAAM,SAA+B;IAC1C,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,iBAAiB;IACjB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,OAAO;IACP,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,cAAc;IACd,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,OAAO;IACP,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,OAAO;IACP,sBAAsB;AACxB"}},
    {"offset": {"line": 12092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12097, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/codes.js"],"sourcesContent":["/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65279,\n  // Unicode Specials block.\n  replacementCharacter: 65533 // `�`\n})\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;CAiBC;;;AACM,MAAM,QAA8B;IACzC,gBAAgB,CAAC;IACjB,UAAU,CAAC;IACX,wBAAwB,CAAC;IACzB,eAAe,CAAC;IAChB,cAAc,CAAC;IACf,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,iBAAiB;IACjB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,OAAO;IACP,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,cAAc;IACd,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,OAAO;IACP,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,OAAO;IACP,KAAK;IACL,0BAA0B;IAC1B,iBAAiB;IACjB,0BAA0B;IAC1B,sBAAsB,MAAM,MAAM;AACpC"}},
    {"offset": {"line": 12257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12262, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/types.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * Here is the list of all types of tokens exposed by micromark, with a short\n * explanation of what they include and where they are found.\n * In picking names, generally, the rule is to be as explicit as possible\n * instead of reusing names.\n * For example, there is a `definitionDestination` and a `resourceDestination`,\n * instead of one shared name.\n */\n\n// Note: when changing the next record, you must also change `TokenTypeMap`\n// in `micromark-util-types/index.d.ts`.\nexport const types = /** @type {const} */ ({\n  // Generic type for data, such as in a title, a destination, etc.\n  data: 'data',\n\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\n  // Such as, between a fenced code fence and an info string.\n  whitespace: 'whitespace',\n\n  // Generic type for line endings (line feed, carriage return, carriage return +\n  // line feed).\n  lineEnding: 'lineEnding',\n\n  // A line ending, but ending a blank line.\n  lineEndingBlank: 'lineEndingBlank',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\n  // line.\n  linePrefix: 'linePrefix',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\n  // line.\n  lineSuffix: 'lineSuffix',\n\n  // Whole ATX heading:\n  //\n  // ```markdown\n  // #\n  // ## Alpha\n  // ### Bravo ###\n  // ```\n  //\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\n  atxHeading: 'atxHeading',\n\n  // Sequence of number signs in an ATX heading (`###`).\n  atxHeadingSequence: 'atxHeadingSequence',\n\n  // Content in an ATX heading (`alpha`).\n  // Includes text.\n  atxHeadingText: 'atxHeadingText',\n\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\n  autolink: 'autolink',\n\n  // Email autolink w/o markers (`admin@example.com`)\n  autolinkEmail: 'autolinkEmail',\n\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\n  autolinkMarker: 'autolinkMarker',\n\n  // Protocol autolink w/o markers (`https://example.com`)\n  autolinkProtocol: 'autolinkProtocol',\n\n  // A whole character escape (`\\-`).\n  // Includes `escapeMarker` and `characterEscapeValue`.\n  characterEscape: 'characterEscape',\n\n  // The escaped character (`-`).\n  characterEscapeValue: 'characterEscapeValue',\n\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\n  // Includes `characterReferenceMarker`, an optional\n  // `characterReferenceMarkerNumeric`, in which case an optional\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\n  characterReference: 'characterReference',\n\n  // The start or end marker (`&` or `;`).\n  characterReferenceMarker: 'characterReferenceMarker',\n\n  // Mark reference as numeric (`#`).\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\n\n  // Mark reference as numeric (`x` or `X`).\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\n\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\n  characterReferenceValue: 'characterReferenceValue',\n\n  // Whole fenced code:\n  //\n  // ````markdown\n  // ```js\n  // alert(1)\n  // ```\n  // ````\n  codeFenced: 'codeFenced',\n\n  // A fenced code fence, including whitespace, sequence, info, and meta\n  // (` ```js `).\n  codeFencedFence: 'codeFencedFence',\n\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\n\n  // Info word (`js`) in a fence.\n  // Includes string.\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\n\n  // Meta words (`highlight=\"1\"`) in a fence.\n  // Includes string.\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\n\n  // A line of code.\n  codeFlowValue: 'codeFlowValue',\n\n  // Whole indented code:\n  //\n  // ```markdown\n  //     alert(1)\n  // ```\n  //\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\n  codeIndented: 'codeIndented',\n\n  // A text code (``` `alpha` ```).\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\n  // `codeTextPadding`.\n  codeText: 'codeText',\n\n  codeTextData: 'codeTextData',\n\n  // A space or line ending right after or before a tick.\n  codeTextPadding: 'codeTextPadding',\n\n  // A text code fence (` `` `).\n  codeTextSequence: 'codeTextSequence',\n\n  // Whole content:\n  //\n  // ```markdown\n  // [a]: b\n  // c\n  // =\n  // d\n  // ```\n  //\n  // Includes `paragraph` and `definition`.\n  content: 'content',\n  // Whole definition:\n  //\n  // ```markdown\n  // [micromark]: https://github.com/micromark/micromark\n  // ```\n  //\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\n  definition: 'definition',\n\n  // Destination of a definition (`https://github.com/micromark/micromark` or\n  // `<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\n  definitionDestination: 'definitionDestination',\n\n  // Enclosed destination of a definition\n  // (`<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteralMarker` and optionally\n  // `definitionDestinationString`.\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\n\n  // Markers of an enclosed definition destination (`<` or `>`).\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\n\n  // Unenclosed destination of a definition\n  // (`https://github.com/micromark/micromark`).\n  // Includes `definitionDestinationString`.\n  definitionDestinationRaw: 'definitionDestinationRaw',\n\n  // Text in an destination (`https://github.com/micromark/micromark`).\n  // Includes string.\n  definitionDestinationString: 'definitionDestinationString',\n\n  // Label of a definition (`[micromark]`).\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\n  definitionLabel: 'definitionLabel',\n\n  // Markers of a definition label (`[` or `]`).\n  definitionLabelMarker: 'definitionLabelMarker',\n\n  // Value of a definition label (`micromark`).\n  // Includes string.\n  definitionLabelString: 'definitionLabelString',\n\n  // Marker between a label and a destination (`:`).\n  definitionMarker: 'definitionMarker',\n\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\n  definitionTitle: 'definitionTitle',\n\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\n  definitionTitleMarker: 'definitionTitleMarker',\n\n  // Data without markers in a title (`z`).\n  // Includes string.\n  definitionTitleString: 'definitionTitleString',\n\n  // Emphasis (`*alpha*`).\n  // Includes `emphasisSequence` and `emphasisText`.\n  emphasis: 'emphasis',\n\n  // Sequence of emphasis markers (`*` or `_`).\n  emphasisSequence: 'emphasisSequence',\n\n  // Emphasis text (`alpha`).\n  // Includes text.\n  emphasisText: 'emphasisText',\n\n  // The character escape marker (`\\`).\n  escapeMarker: 'escapeMarker',\n\n  // A hard break created with a backslash (`\\\\n`).\n  // Note: does not include the line ending.\n  hardBreakEscape: 'hardBreakEscape',\n\n  // A hard break created with trailing spaces (`  \\n`).\n  // Does not include the line ending.\n  hardBreakTrailing: 'hardBreakTrailing',\n\n  // Flow HTML:\n  //\n  // ```markdown\n  // <div\n  // ```\n  //\n  // Inlcudes `lineEnding`, `htmlFlowData`.\n  htmlFlow: 'htmlFlow',\n\n  htmlFlowData: 'htmlFlowData',\n\n  // HTML in text (the tag in `a <i> b`).\n  // Includes `lineEnding`, `htmlTextData`.\n  htmlText: 'htmlText',\n\n  htmlTextData: 'htmlTextData',\n\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\n  // `![alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  image: 'image',\n\n  // Whole link label (`[*alpha*]`).\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\n  label: 'label',\n\n  // Text in an label (`*alpha*`).\n  // Includes text.\n  labelText: 'labelText',\n\n  // Start a link label (`[`).\n  // Includes a `labelMarker`.\n  labelLink: 'labelLink',\n\n  // Start an image label (`![`).\n  // Includes `labelImageMarker` and `labelMarker`.\n  labelImage: 'labelImage',\n\n  // Marker of a label (`[` or `]`).\n  labelMarker: 'labelMarker',\n\n  // Marker to start an image (`!`).\n  labelImageMarker: 'labelImageMarker',\n\n  // End a label (`]`).\n  // Includes `labelMarker`.\n  labelEnd: 'labelEnd',\n\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  link: 'link',\n\n  // Whole paragraph:\n  //\n  // ```markdown\n  // alpha\n  // bravo.\n  // ```\n  //\n  // Includes text.\n  paragraph: 'paragraph',\n\n  // A reference (`[alpha]` or `[]`).\n  // Includes `referenceMarker` and an optional `referenceString`.\n  reference: 'reference',\n\n  // A reference marker (`[` or `]`).\n  referenceMarker: 'referenceMarker',\n\n  // Reference text (`alpha`).\n  // Includes string.\n  referenceString: 'referenceString',\n\n  // A resource (`(https://example.com \"alpha\")`).\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\n  // `whitespace` and `resourceTitle`.\n  resource: 'resource',\n\n  // A resource destination (`https://example.com`).\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\n  resourceDestination: 'resourceDestination',\n\n  // A literal resource destination (`<https://example.com>`).\n  // Includes `resourceDestinationLiteralMarker` and optionally\n  // `resourceDestinationString`.\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\n\n  // A resource destination marker (`<` or `>`).\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\n\n  // A raw resource destination (`https://example.com`).\n  // Includes `resourceDestinationString`.\n  resourceDestinationRaw: 'resourceDestinationRaw',\n\n  // Resource destination text (`https://example.com`).\n  // Includes string.\n  resourceDestinationString: 'resourceDestinationString',\n\n  // A resource marker (`(` or `)`).\n  resourceMarker: 'resourceMarker',\n\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\n  resourceTitle: 'resourceTitle',\n\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\n  resourceTitleMarker: 'resourceTitleMarker',\n\n  // Resource destination title (`alpha`).\n  // Includes string.\n  resourceTitleString: 'resourceTitleString',\n\n  // Whole setext heading:\n  //\n  // ```markdown\n  // alpha\n  // bravo\n  // =====\n  // ```\n  //\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\n  // `setextHeadingLine`.\n  setextHeading: 'setextHeading',\n\n  // Content in a setext heading (`alpha\\nbravo`).\n  // Includes text.\n  setextHeadingText: 'setextHeadingText',\n\n  // Underline in a setext heading, including whitespace suffix (`==`).\n  // Includes `setextHeadingLineSequence`.\n  setextHeadingLine: 'setextHeadingLine',\n\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\n\n  // Strong (`**alpha**`).\n  // Includes `strongSequence` and `strongText`.\n  strong: 'strong',\n\n  // Sequence of strong markers (`**` or `__`).\n  strongSequence: 'strongSequence',\n\n  // Strong text (`alpha`).\n  // Includes text.\n  strongText: 'strongText',\n\n  // Whole thematic break:\n  //\n  // ```markdown\n  // * * *\n  // ```\n  //\n  // Includes `thematicBreakSequence` and `whitespace`.\n  thematicBreak: 'thematicBreak',\n\n  // A sequence of one or more thematic break markers (`***`).\n  thematicBreakSequence: 'thematicBreakSequence',\n\n  // Whole block quote:\n  //\n  // ```markdown\n  // > a\n  // >\n  // > b\n  // ```\n  //\n  // Includes `blockQuotePrefix` and flow.\n  blockQuote: 'blockQuote',\n  // The `>` or `> ` of a block quote.\n  blockQuotePrefix: 'blockQuotePrefix',\n  // The `>` of a block quote prefix.\n  blockQuoteMarker: 'blockQuoteMarker',\n  // The optional ` ` of a block quote prefix.\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\n\n  // Whole unordered list:\n  //\n  // ```markdown\n  // - a\n  //   b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listOrdered: 'listOrdered',\n\n  // Whole ordered list:\n  //\n  // ```markdown\n  // 1. a\n  //    b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listUnordered: 'listUnordered',\n\n  // The indent of further list item lines.\n  listItemIndent: 'listItemIndent',\n\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\n  listItemMarker: 'listItemMarker',\n\n  // The thing that starts a list item, such as `1. `.\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\n  listItemPrefix: 'listItemPrefix',\n\n  // The whitespace after a marker.\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\n\n  // The numerical value of an ordered item.\n  listItemValue: 'listItemValue',\n\n  // Internal types used for subtokenizers, compiled away\n  chunkDocument: 'chunkDocument',\n  chunkContent: 'chunkContent',\n  chunkFlow: 'chunkFlow',\n  chunkText: 'chunkText',\n  chunkString: 'chunkString'\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 12622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12627, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@1.1.0/node_modules/micromark-util-symbol/constants.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\n * sizes of certain sequences.\n * Additionally, there are a couple symbols used inside micromark.\n * These are all defined here, but compiled away by scripts.\n */\nexport const constants = /** @type {const} */ ({\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\n  contentTypeDocument: 'document',\n  contentTypeFlow: 'flow',\n  contentTypeContent: 'content',\n  contentTypeString: 'string',\n  contentTypeText: 'text',\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\n  htmlRaw: 1, // Symbol for `<script>`\n  htmlComment: 2, // Symbol for `<!---->`\n  htmlInstruction: 3, // Symbol for `<?php?>`\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\n  htmlBasic: 6, // Symbol for `<div`\n  htmlComplete: 7, // Symbol for `<x>`\n  htmlRawSizeMax: 8, // Length of `textarea`.\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\n  numericBaseDecimal: 10,\n  numericBaseHexadecimal: 0x10,\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\n  v8MaxSafeChunkSize: 10000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\n})\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,MAAM,YAAkC;IAC7C,qBAAqB;IACrB,oBAAoB;IACpB,+BAA+B;IAC/B,uBAAuB;IACvB,uBAAuB;IACvB,oBAAoB;IACpB,0BAA0B;IAC1B,2BAA2B;IAC3B,kCAAkC;IAClC,sCAAsC;IACtC,gCAAgC;IAChC,2BAA2B;IAC3B,qBAAqB;IACrB,iBAAiB;IACjB,oBAAoB;IACpB,mBAAmB;IACnB,iBAAiB;IACjB,wBAAwB;IACxB,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,WAAW;IACX,WAAW;IACX,cAAc;IACd,gBAAgB;IAChB,mCAAmC;IACnC,sBAAsB;IACtB,sBAAsB;IACtB,oBAAoB;IACpB,wBAAwB;IACxB,SAAS;IACT,6BAA6B;IAC7B,oBAAoB,MAAM,kHAAkH;AAC9I"}},
    {"offset": {"line": 12673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12678, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@2.0.0/node_modules/micromark-util-symbol/lib/values.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * While micromark works based on character codes, this module includes the\n * string versions of ’em.\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n * are available here.\n */\nexport const values = /** @type {const} */ ({\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n})\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,MAAM,SAA+B;IAC1C,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,iBAAiB;IACjB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,OAAO;IACP,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,cAAc;IACd,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,OAAO;IACP,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,OAAO;IACP,sBAAsB;AACxB"}},
    {"offset": {"line": 12789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12794, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@2.0.0/node_modules/micromark-util-symbol/lib/types.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * Here is the list of all types of tokens exposed by micromark, with a short\n * explanation of what they include and where they are found.\n * In picking names, generally, the rule is to be as explicit as possible\n * instead of reusing names.\n * For example, there is a `definitionDestination` and a `resourceDestination`,\n * instead of one shared name.\n */\n\n// Note: when changing the next record, you must also change `TokenTypeMap`\n// in `micromark-util-types/index.d.ts`.\nexport const types = /** @type {const} */ ({\n  // Generic type for data, such as in a title, a destination, etc.\n  data: 'data',\n\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\n  // Such as, between a fenced code fence and an info string.\n  whitespace: 'whitespace',\n\n  // Generic type for line endings (line feed, carriage return, carriage return +\n  // line feed).\n  lineEnding: 'lineEnding',\n\n  // A line ending, but ending a blank line.\n  lineEndingBlank: 'lineEndingBlank',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\n  // line.\n  linePrefix: 'linePrefix',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\n  // line.\n  lineSuffix: 'lineSuffix',\n\n  // Whole ATX heading:\n  //\n  // ```markdown\n  // #\n  // ## Alpha\n  // ### Bravo ###\n  // ```\n  //\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\n  atxHeading: 'atxHeading',\n\n  // Sequence of number signs in an ATX heading (`###`).\n  atxHeadingSequence: 'atxHeadingSequence',\n\n  // Content in an ATX heading (`alpha`).\n  // Includes text.\n  atxHeadingText: 'atxHeadingText',\n\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\n  autolink: 'autolink',\n\n  // Email autolink w/o markers (`admin@example.com`)\n  autolinkEmail: 'autolinkEmail',\n\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\n  autolinkMarker: 'autolinkMarker',\n\n  // Protocol autolink w/o markers (`https://example.com`)\n  autolinkProtocol: 'autolinkProtocol',\n\n  // A whole character escape (`\\-`).\n  // Includes `escapeMarker` and `characterEscapeValue`.\n  characterEscape: 'characterEscape',\n\n  // The escaped character (`-`).\n  characterEscapeValue: 'characterEscapeValue',\n\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\n  // Includes `characterReferenceMarker`, an optional\n  // `characterReferenceMarkerNumeric`, in which case an optional\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\n  characterReference: 'characterReference',\n\n  // The start or end marker (`&` or `;`).\n  characterReferenceMarker: 'characterReferenceMarker',\n\n  // Mark reference as numeric (`#`).\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\n\n  // Mark reference as numeric (`x` or `X`).\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\n\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\n  characterReferenceValue: 'characterReferenceValue',\n\n  // Whole fenced code:\n  //\n  // ````markdown\n  // ```js\n  // alert(1)\n  // ```\n  // ````\n  codeFenced: 'codeFenced',\n\n  // A fenced code fence, including whitespace, sequence, info, and meta\n  // (` ```js `).\n  codeFencedFence: 'codeFencedFence',\n\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\n\n  // Info word (`js`) in a fence.\n  // Includes string.\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\n\n  // Meta words (`highlight=\"1\"`) in a fence.\n  // Includes string.\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\n\n  // A line of code.\n  codeFlowValue: 'codeFlowValue',\n\n  // Whole indented code:\n  //\n  // ```markdown\n  //     alert(1)\n  // ```\n  //\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\n  codeIndented: 'codeIndented',\n\n  // A text code (``` `alpha` ```).\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\n  // `codeTextPadding`.\n  codeText: 'codeText',\n\n  codeTextData: 'codeTextData',\n\n  // A space or line ending right after or before a tick.\n  codeTextPadding: 'codeTextPadding',\n\n  // A text code fence (` `` `).\n  codeTextSequence: 'codeTextSequence',\n\n  // Whole content:\n  //\n  // ```markdown\n  // [a]: b\n  // c\n  // =\n  // d\n  // ```\n  //\n  // Includes `paragraph` and `definition`.\n  content: 'content',\n  // Whole definition:\n  //\n  // ```markdown\n  // [micromark]: https://github.com/micromark/micromark\n  // ```\n  //\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\n  definition: 'definition',\n\n  // Destination of a definition (`https://github.com/micromark/micromark` or\n  // `<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\n  definitionDestination: 'definitionDestination',\n\n  // Enclosed destination of a definition\n  // (`<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteralMarker` and optionally\n  // `definitionDestinationString`.\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\n\n  // Markers of an enclosed definition destination (`<` or `>`).\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\n\n  // Unenclosed destination of a definition\n  // (`https://github.com/micromark/micromark`).\n  // Includes `definitionDestinationString`.\n  definitionDestinationRaw: 'definitionDestinationRaw',\n\n  // Text in an destination (`https://github.com/micromark/micromark`).\n  // Includes string.\n  definitionDestinationString: 'definitionDestinationString',\n\n  // Label of a definition (`[micromark]`).\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\n  definitionLabel: 'definitionLabel',\n\n  // Markers of a definition label (`[` or `]`).\n  definitionLabelMarker: 'definitionLabelMarker',\n\n  // Value of a definition label (`micromark`).\n  // Includes string.\n  definitionLabelString: 'definitionLabelString',\n\n  // Marker between a label and a destination (`:`).\n  definitionMarker: 'definitionMarker',\n\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\n  definitionTitle: 'definitionTitle',\n\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\n  definitionTitleMarker: 'definitionTitleMarker',\n\n  // Data without markers in a title (`z`).\n  // Includes string.\n  definitionTitleString: 'definitionTitleString',\n\n  // Emphasis (`*alpha*`).\n  // Includes `emphasisSequence` and `emphasisText`.\n  emphasis: 'emphasis',\n\n  // Sequence of emphasis markers (`*` or `_`).\n  emphasisSequence: 'emphasisSequence',\n\n  // Emphasis text (`alpha`).\n  // Includes text.\n  emphasisText: 'emphasisText',\n\n  // The character escape marker (`\\`).\n  escapeMarker: 'escapeMarker',\n\n  // A hard break created with a backslash (`\\\\n`).\n  // Note: does not include the line ending.\n  hardBreakEscape: 'hardBreakEscape',\n\n  // A hard break created with trailing spaces (`  \\n`).\n  // Does not include the line ending.\n  hardBreakTrailing: 'hardBreakTrailing',\n\n  // Flow HTML:\n  //\n  // ```markdown\n  // <div\n  // ```\n  //\n  // Inlcudes `lineEnding`, `htmlFlowData`.\n  htmlFlow: 'htmlFlow',\n\n  htmlFlowData: 'htmlFlowData',\n\n  // HTML in text (the tag in `a <i> b`).\n  // Includes `lineEnding`, `htmlTextData`.\n  htmlText: 'htmlText',\n\n  htmlTextData: 'htmlTextData',\n\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\n  // `![alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  image: 'image',\n\n  // Whole link label (`[*alpha*]`).\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\n  label: 'label',\n\n  // Text in an label (`*alpha*`).\n  // Includes text.\n  labelText: 'labelText',\n\n  // Start a link label (`[`).\n  // Includes a `labelMarker`.\n  labelLink: 'labelLink',\n\n  // Start an image label (`![`).\n  // Includes `labelImageMarker` and `labelMarker`.\n  labelImage: 'labelImage',\n\n  // Marker of a label (`[` or `]`).\n  labelMarker: 'labelMarker',\n\n  // Marker to start an image (`!`).\n  labelImageMarker: 'labelImageMarker',\n\n  // End a label (`]`).\n  // Includes `labelMarker`.\n  labelEnd: 'labelEnd',\n\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  link: 'link',\n\n  // Whole paragraph:\n  //\n  // ```markdown\n  // alpha\n  // bravo.\n  // ```\n  //\n  // Includes text.\n  paragraph: 'paragraph',\n\n  // A reference (`[alpha]` or `[]`).\n  // Includes `referenceMarker` and an optional `referenceString`.\n  reference: 'reference',\n\n  // A reference marker (`[` or `]`).\n  referenceMarker: 'referenceMarker',\n\n  // Reference text (`alpha`).\n  // Includes string.\n  referenceString: 'referenceString',\n\n  // A resource (`(https://example.com \"alpha\")`).\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\n  // `whitespace` and `resourceTitle`.\n  resource: 'resource',\n\n  // A resource destination (`https://example.com`).\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\n  resourceDestination: 'resourceDestination',\n\n  // A literal resource destination (`<https://example.com>`).\n  // Includes `resourceDestinationLiteralMarker` and optionally\n  // `resourceDestinationString`.\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\n\n  // A resource destination marker (`<` or `>`).\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\n\n  // A raw resource destination (`https://example.com`).\n  // Includes `resourceDestinationString`.\n  resourceDestinationRaw: 'resourceDestinationRaw',\n\n  // Resource destination text (`https://example.com`).\n  // Includes string.\n  resourceDestinationString: 'resourceDestinationString',\n\n  // A resource marker (`(` or `)`).\n  resourceMarker: 'resourceMarker',\n\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\n  resourceTitle: 'resourceTitle',\n\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\n  resourceTitleMarker: 'resourceTitleMarker',\n\n  // Resource destination title (`alpha`).\n  // Includes string.\n  resourceTitleString: 'resourceTitleString',\n\n  // Whole setext heading:\n  //\n  // ```markdown\n  // alpha\n  // bravo\n  // =====\n  // ```\n  //\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\n  // `setextHeadingLine`.\n  setextHeading: 'setextHeading',\n\n  // Content in a setext heading (`alpha\\nbravo`).\n  // Includes text.\n  setextHeadingText: 'setextHeadingText',\n\n  // Underline in a setext heading, including whitespace suffix (`==`).\n  // Includes `setextHeadingLineSequence`.\n  setextHeadingLine: 'setextHeadingLine',\n\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\n\n  // Strong (`**alpha**`).\n  // Includes `strongSequence` and `strongText`.\n  strong: 'strong',\n\n  // Sequence of strong markers (`**` or `__`).\n  strongSequence: 'strongSequence',\n\n  // Strong text (`alpha`).\n  // Includes text.\n  strongText: 'strongText',\n\n  // Whole thematic break:\n  //\n  // ```markdown\n  // * * *\n  // ```\n  //\n  // Includes `thematicBreakSequence` and `whitespace`.\n  thematicBreak: 'thematicBreak',\n\n  // A sequence of one or more thematic break markers (`***`).\n  thematicBreakSequence: 'thematicBreakSequence',\n\n  // Whole block quote:\n  //\n  // ```markdown\n  // > a\n  // >\n  // > b\n  // ```\n  //\n  // Includes `blockQuotePrefix` and flow.\n  blockQuote: 'blockQuote',\n  // The `>` or `> ` of a block quote.\n  blockQuotePrefix: 'blockQuotePrefix',\n  // The `>` of a block quote prefix.\n  blockQuoteMarker: 'blockQuoteMarker',\n  // The optional ` ` of a block quote prefix.\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\n\n  // Whole unordered list:\n  //\n  // ```markdown\n  // - a\n  //   b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listOrdered: 'listOrdered',\n\n  // Whole ordered list:\n  //\n  // ```markdown\n  // 1. a\n  //    b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listUnordered: 'listUnordered',\n\n  // The indent of further list item lines.\n  listItemIndent: 'listItemIndent',\n\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\n  listItemMarker: 'listItemMarker',\n\n  // The thing that starts a list item, such as `1. `.\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\n  listItemPrefix: 'listItemPrefix',\n\n  // The whitespace after a marker.\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\n\n  // The numerical value of an ordered item.\n  listItemValue: 'listItemValue',\n\n  // Internal types used for subtokenizers, compiled away\n  chunkDocument: 'chunkDocument',\n  chunkContent: 'chunkContent',\n  chunkFlow: 'chunkFlow',\n  chunkText: 'chunkText',\n  chunkString: 'chunkString'\n})\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 13154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13159, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@2.0.0/node_modules/micromark-util-symbol/lib/constants.js"],"sourcesContent":["/**\n * This module is compiled away!\n *\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\n * sizes of certain sequences.\n * Additionally, there are a couple symbols used inside micromark.\n * These are all defined here, but compiled away by scripts.\n */\nexport const constants = /** @type {const} */ ({\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\n  contentTypeDocument: 'document',\n  contentTypeFlow: 'flow',\n  contentTypeContent: 'content',\n  contentTypeString: 'string',\n  contentTypeText: 'text',\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\n  htmlRaw: 1, // Symbol for `<script>`\n  htmlComment: 2, // Symbol for `<!---->`\n  htmlInstruction: 3, // Symbol for `<?php?>`\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\n  htmlBasic: 6, // Symbol for `<div`\n  htmlComplete: 7, // Symbol for `<x>`\n  htmlRawSizeMax: 8, // Length of `textarea`.\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\n  numericBaseDecimal: 10,\n  numericBaseHexadecimal: 0x10,\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\n  v8MaxSafeChunkSize: 10000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\n})\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,MAAM,YAAkC;IAC7C,qBAAqB;IACrB,oBAAoB;IACpB,+BAA+B;IAC/B,uBAAuB;IACvB,uBAAuB;IACvB,oBAAoB;IACpB,0BAA0B;IAC1B,2BAA2B;IAC3B,kCAAkC;IAClC,sCAAsC;IACtC,gCAAgC;IAChC,2BAA2B;IAC3B,qBAAqB;IACrB,iBAAiB;IACjB,oBAAoB;IACpB,mBAAmB;IACnB,iBAAiB;IACjB,wBAAwB;IACxB,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,WAAW;IACX,WAAW;IACX,cAAc;IACd,gBAAgB;IAChB,mCAAmC;IACnC,sBAAsB;IACtB,sBAAsB;IACtB,oBAAoB;IACpB,wBAAwB;IACxB,SAAS;IACT,6BAA6B;IAC7B,oBAAoB,MAAM,kHAAkH;AAC9I"}},
    {"offset": {"line": 13205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13210, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-symbol@2.0.0/node_modules/micromark-util-symbol/lib/codes.js"],"sourcesContent":["/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65279,\n  // Unicode Specials block.\n  replacementCharacter: 65533 // `�`\n})\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;CAiBC;;;AACM,MAAM,QAA8B;IACzC,gBAAgB,CAAC;IACjB,UAAU,CAAC;IACX,wBAAwB,CAAC;IACzB,eAAe,CAAC;IAChB,cAAc,CAAC;IACf,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;IACP,iBAAiB;IACjB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,OAAO;IACP,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,cAAc;IACd,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,OAAO;IACP,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,OAAO;IACP,KAAK;IACL,0BAA0B;IAC1B,iBAAiB;IACjB,0BAA0B;IAC1B,sBAAsB,MAAM,MAAM;AACpC"}},
    {"offset": {"line": 13370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13375, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 13390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13395, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-encode@1.1.0/node_modules/micromark-util-encode/index.js"],"sourcesContent":["const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,sBAAsB;IAAC,KAAK;IAAQ,KAAK;IAAO,KAAK;IAAM,KAAK;AAAI;AAcnE,SAAS,OAAO,KAAK;IAC1B,OAAO,MAAM,OAAO,CAAC,WAAW;IAEhC;;;GAGC,GACD,SAAS,QAAQ,KAAK;QACpB,oCAAoC;QACpC,OAAO,MAAM,mBAAmB,CAAC,MAAM,GAAG;IAC5C;AACF"}},
    {"offset": {"line": 13414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13419, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-encode@2.0.0/node_modules/micromark-util-encode/index.js"],"sourcesContent":["const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,sBAAsB;IAAC,KAAK;IAAQ,KAAK;IAAO,KAAK;IAAM,KAAK;AAAI;AAcnE,SAAS,OAAO,KAAK;IAC1B,OAAO,MAAM,OAAO,CAAC,WAAW;IAEhC;;;GAGC,GACD,SAAS,QAAQ,KAAK;QACpB,oCAAoC;QACpC,OAAO,MAAM,mBAAmB,CAAC,MAAM,GAAG;IAC5C;AACF"}},
    {"offset": {"line": 13438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13443, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-character@1.2.0/node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js"],"sourcesContent":["// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n"],"names":[],"mappings":"AAAA,yCAAyC;AACzC,EAAE;AACF,8EAA8E;AAC9E,wBAAwB;AACxB,sEAAsE;AACtE,kDAAkD;AAElD;;CAEC;;;AACM,MAAM,0BACX"}},
    {"offset": {"line": 13455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13460, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-character@1.2.0/node_modules/micromark-util-character/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < codes.space || code === codes.del)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < codes.horizontalTab\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < codes.nul || code === codes.space)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return (\n    code === codes.horizontalTab ||\n    code === codes.virtualSpace ||\n    code === codes.space\n  )\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;;;;;;;;;;AAsBM,MAAM,aAAa,WAAW;AAc9B,MAAM,oBAAoB,WAAW;AAuBrC,MAAM,aAAa,WAAW;AAa9B,SAAS,aAAa,IAAI;IAC/B,OACE,wEAAwE;IACxE,gBAAgB;IAChB,SAAS,QAAQ,CAAC,OAAO,+NAAM,KAAK,IAAI,SAAS,+NAAM,GAAG;AAE9D;AAaO,MAAM,aAAa,WAAW;AAoB9B,MAAM,gBAAgB,WAAW;AAejC,MAAM,mBAAmB,WAAW;AAiBpC,SAAS,mBAAmB,IAAI;IACrC,OAAO,SAAS,QAAQ,OAAO,+NAAM,aAAa;AACpD;AAWO,SAAS,0BAA0B,IAAI;IAC5C,OAAO,SAAS,QAAQ,CAAC,OAAO,+NAAM,GAAG,IAAI,SAAS,+NAAM,KAAK;AACnE;AAiBO,SAAS,cAAc,IAAI;IAChC,OACE,SAAS,+NAAM,aAAa,IAC5B,SAAS,+NAAM,YAAY,IAC3B,SAAS,+NAAM,KAAK;AAExB;AAuBO,MAAM,qBAAqB;AAsB3B,MAAM,oBAAoB,WAAW;AAE5C;;;;;CAKC,GACD,SAAS,WAAW,KAAK;IACvB,OAAO;IAEP;;;;;;;GAOC,GACD,SAAS,MAAM,IAAI;QACjB,OAAO,SAAS,QAAQ,MAAM,IAAI,CAAC,OAAO,YAAY,CAAC;IACzD;AACF"}},
    {"offset": {"line": 13521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13526, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-character@2.0.1/node_modules/micromark-util-character/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {codes} from 'micromark-util-symbol'\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < codes.space || code === codes.del)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < codes.horizontalTab\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < codes.nul || code === codes.space)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return (\n    code === codes.horizontalTab ||\n    code === codes.virtualSpace ||\n    code === codes.space\n  )\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;;;;;;;;AAID,MAAM,6BAA6B,WAAW;AAmBvC,MAAM,aAAa,WAAW;AAc9B,MAAM,oBAAoB,WAAW;AAuBrC,MAAM,aAAa,WAAW;AAa9B,SAAS,aAAa,IAAI;IAC/B,OACE,wEAAwE;IACxE,gBAAgB;IAChB,SAAS,QAAQ,CAAC,OAAO,wOAAM,KAAK,IAAI,SAAS,wOAAM,GAAG;AAE9D;AAaO,MAAM,aAAa,WAAW;AAoB9B,MAAM,gBAAgB,WAAW;AAejC,MAAM,mBAAmB,WAAW;AAiBpC,SAAS,mBAAmB,IAAI;IACrC,OAAO,SAAS,QAAQ,OAAO,wOAAM,aAAa;AACpD;AAWO,SAAS,0BAA0B,IAAI;IAC5C,OAAO,SAAS,QAAQ,CAAC,OAAO,wOAAM,GAAG,IAAI,SAAS,wOAAM,KAAK;AACnE;AAiBO,SAAS,cAAc,IAAI;IAChC,OACE,SAAS,wOAAM,aAAa,IAC5B,SAAS,wOAAM,YAAY,IAC3B,SAAS,wOAAM,KAAK;AAExB;AAuBO,SAAS,mBAAmB,IAAI;IACrC,OAAO,iBAAiB,SAAS,2BAA2B;AAC9D;AAsBO,MAAM,oBAAoB,WAAW;AAE5C;;;;;CAKC,GACD,SAAS,WAAW,KAAK;IACvB,OAAO;IAEP;;;;;;;GAOC,GACD,SAAS,MAAM,IAAI;QACjB,OAAO,SAAS,QAAQ,OAAO,CAAC,KAAK,MAAM,IAAI,CAAC,OAAO,YAAY,CAAC;IACtE;AACF"}},
    {"offset": {"line": 13588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13593, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-sanitize-uri@1.2.0/node_modules/micromark-util-sanitize-uri/dev/index.js"],"sourcesContent":["import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === codes.percentSign &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = values.replacementCharacter\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AA2BO,SAAS,YAAY,GAAG,EAAE,QAAQ;IACvC,MAAM,QAAQ,gOAAO,aAAa,OAAO;IAEzC,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,MAAM,QAAQ,MAAM,OAAO,CAAC;IAC5B,MAAM,eAAe,MAAM,OAAO,CAAC;IACnC,MAAM,aAAa,MAAM,OAAO,CAAC;IACjC,MAAM,QAAQ,MAAM,OAAO,CAAC;IAE5B,IACE,0CAA0C;IAC1C,QAAQ,KAEP,QAAQ,CAAC,KAAK,QAAQ,SACtB,eAAe,CAAC,KAAK,QAAQ,gBAC7B,aAAa,CAAC,KAAK,QAAQ,cAC5B,0CAA0C;IAC1C,SAAS,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,SAC7B;QACA,OAAO;IACT;IAEA,OAAO;AACT;AAaO,SAAS,aAAa,KAAK;IAChC,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IACb,IAAI,QAAQ;IACZ,IAAI,OAAO;IAEX,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,OAAO,MAAM,UAAU,CAAC;QAC9B,mBAAmB,GACnB,IAAI,UAAU;QAEd,mCAAmC;QACnC,IACE,SAAS,+NAAM,WAAW,IAC1B,wPAAkB,MAAM,UAAU,CAAC,QAAQ,OAC3C,wPAAkB,MAAM,UAAU,CAAC,QAAQ,KAC3C;YACA,OAAO;QACT,OAEK,IAAI,OAAO,KAAK;YACnB,IAAI,CAAC,oBAAoB,IAAI,CAAC,OAAO,YAAY,CAAC,QAAQ;gBACxD,UAAU,OAAO,YAAY,CAAC;YAChC;QACF,OAEK,IAAI,OAAO,SAAS,OAAO,OAAO;YACrC,MAAM,OAAO,MAAM,UAAU,CAAC,QAAQ;YAEtC,4BAA4B;YAC5B,IAAI,OAAO,SAAS,OAAO,SAAS,OAAO,OAAO;gBAChD,UAAU,OAAO,YAAY,CAAC,MAAM;gBACpC,OAAO;YACT,OAEK;gBACH,UAAU,iOAAO,oBAAoB;YACvC;QACF,OAEK;YACH,UAAU,OAAO,YAAY,CAAC;QAChC;QAEA,IAAI,SAAS;YACX,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,OAAO,QAAQ,mBAAmB;YAC1D,QAAQ,QAAQ,OAAO;YACvB,UAAU;QACZ;QAEA,IAAI,MAAM;YACR,SAAS;YACT,OAAO;QACT;IACF;IAEA,OAAO,OAAO,IAAI,CAAC,MAAM,MAAM,KAAK,CAAC;AACvC"}},
    {"offset": {"line": 13661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13666, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-sanitize-uri@2.0.0/node_modules/micromark-util-sanitize-uri/dev/index.js"],"sourcesContent":["import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\nimport {codes, values} from 'micromark-util-symbol'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === codes.percentSign &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = values.replacementCharacter\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n"],"names":[],"mappings":";;;;;;;;;;;AA0BO,SAAS,YAAY,GAAG,EAAE,QAAQ;IACvC,MAAM,QAAQ,gOAAO,aAAa,OAAO;IAEzC,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,MAAM,QAAQ,MAAM,OAAO,CAAC;IAC5B,MAAM,eAAe,MAAM,OAAO,CAAC;IACnC,MAAM,aAAa,MAAM,OAAO,CAAC;IACjC,MAAM,QAAQ,MAAM,OAAO,CAAC;IAE5B,IACE,0CAA0C;IAC1C,QAAQ,KAEP,QAAQ,CAAC,KAAK,QAAQ,SACtB,eAAe,CAAC,KAAK,QAAQ,gBAC7B,aAAa,CAAC,KAAK,QAAQ,cAC5B,0CAA0C;IAC1C,SAAS,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,SAC7B;QACA,OAAO;IACT;IAEA,OAAO;AACT;AAaO,SAAS,aAAa,KAAK;IAChC,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IACb,IAAI,QAAQ;IACZ,IAAI,OAAO;IAEX,MAAO,EAAE,QAAQ,MAAM,MAAM,CAAE;QAC7B,MAAM,OAAO,MAAM,UAAU,CAAC;QAC9B,mBAAmB,GACnB,IAAI,UAAU;QAEd,mCAAmC;QACnC,IACE,SAAS,wOAAM,WAAW,IAC1B,wPAAkB,MAAM,UAAU,CAAC,QAAQ,OAC3C,wPAAkB,MAAM,UAAU,CAAC,QAAQ,KAC3C;YACA,OAAO;QACT,OAEK,IAAI,OAAO,KAAK;YACnB,IAAI,CAAC,oBAAoB,IAAI,CAAC,OAAO,YAAY,CAAC,QAAQ;gBACxD,UAAU,OAAO,YAAY,CAAC;YAChC;QACF,OAEK,IAAI,OAAO,UAAU,OAAO,QAAQ;YACvC,MAAM,OAAO,MAAM,UAAU,CAAC,QAAQ;YAEtC,4BAA4B;YAC5B,IAAI,OAAO,UAAU,OAAO,UAAU,OAAO,QAAQ;gBACnD,UAAU,OAAO,YAAY,CAAC,MAAM;gBACpC,OAAO;YACT,OAEK;gBACH,UAAU,yOAAO,oBAAoB;YACvC;QACF,OAEK;YACH,UAAU,OAAO,YAAY,CAAC;QAChC;QAEA,IAAI,SAAS;YACX,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,OAAO,QAAQ,mBAAmB;YAC1D,QAAQ,QAAQ,OAAO;YACvB,UAAU;QACZ;QAEA,IAAI,MAAM;YACR,SAAS;YACT,OAAO;QACT;IACF;IAEA,OAAO,OAAO,IAAI,CAAC,MAAM,MAAM,KAAK,CAAC;AACvC"}},
    {"offset": {"line": 13732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13737, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-definitions@5.1.2/node_modules/mdast-util-definitions/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;CASC;;;;;;AAID,MAAM,MAAM,CAAC,EAAE,cAAc;AAatB,SAAS,YAAY,IAAI;IAC9B,uCAAuC,GACvC,MAAM,QAAQ,OAAO,MAAM,CAAC;IAE5B,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,MAAM;IAClB;IAEA,qNAAM,MAAM,cAAc,CAAC;QACzB,MAAM,KAAK,MAAM,WAAW,UAAU;QACtC,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK;YAC9B,KAAK,CAAC,GAAG,GAAG;QACd;IACF;IAEA,OAAO;IAEP,0BAA0B,GAC1B,SAAS,WAAW,UAAU;QAC5B,MAAM,KAAK,MAAM;QACjB,wDAAwD;QACxD,OAAO,MAAM,IAAI,IAAI,CAAC,OAAO,MAAM,KAAK,CAAC,GAAG,GAAG;IACjD;AACF;AAEA;;;CAGC,GACD,SAAS,MAAM,KAAK;IAClB,OAAO,OAAO,SAAS,IAAI,WAAW;AACxC"}},
    {"offset": {"line": 13781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13786, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-definitions@5.1.2/node_modules/mdast-util-definitions/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').GetDefinition} GetDefinition\n */\n\nexport {definitions} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 13794, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13799, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/unist-util-generated@2.0.1/node_modules/unist-util-generated/lib/index.js"],"sourcesContent":["/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC,GAED;;;;;;;CAOC;;;AACM,SAAS,UAAU,IAAI;IAC5B,OACE,CAAC,QACD,CAAC,KAAK,QAAQ,IACd,CAAC,KAAK,QAAQ,CAAC,KAAK,IACpB,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,IACzB,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,MAAM,IAC3B,CAAC,KAAK,QAAQ,CAAC,GAAG,IAClB,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,IACvB,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,MAAM;AAE7B"}},
    {"offset": {"line": 13824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 13835, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13840, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-rehype@10.1.0/node_modules/remark-rehype/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;;;AAID,sEAAsE;AAEtE;;;;;;;;;;;;;;;;;;;;;CAqBC,GACD,MAAM,eAGF,SAAU,WAAW,EAAE,OAAO;IAC5B,OAAO,eAAe,SAAS,cAC3B,OAAO,aAAa,WACpB,OAAO,eAAe;AAC5B;uCAGW;AAEf;;;;;CAKC,GACD,SAAS,OAAO,WAAW,EAAE,OAAO;IAClC,OAAO,CAAC,MAAM,MAAM;QAClB,YAAY,GAAG,CAAC,iOAAO,MAAM,UAAU,MAAM,CAAC;YAC5C,KAAK;QACP;IACF;AACF;AAEA;;;;;CAKC,GACD,SAAS,OAAO,OAAO;IACrB,yEAAyE;IACzE,OAAO,CAAC,OAAS,iOAAO,MAAM;AAChC"}},
    {"offset": {"line": 13900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13905, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-rehype@10.1.0/node_modules/remark-rehype/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Processor} Processor\n */\n\nexport {defaultHandlers, all, one} from 'mdast-util-to-hast'\n\nexport {default} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;CAGC"}},
    {"offset": {"line": 13919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13924, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-rehype@11.0.0/node_modules/remark-rehype/lib/index.js"],"sourcesContent":["// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (toHast(tree, options))\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (toHast(tree, options || destination))\n  }\n}\n"],"names":[],"mappings":"AAAA,0DAA0D;AAC1D,4CAA4C;AAE5C;;;;;;CAMC,GAED;;;;;;;;;;;;;;;;;;;;;;;CAuBC;;;;;;AAmGc,SAAS,aAAa,WAAW,EAAE,OAAO;IACvD,IAAI,eAAe,SAAS,aAAa;QACvC;;KAEC,GACD,OAAO,eAAgB,IAAI,EAAE,IAAI;YAC/B,oCAAoC;YACpC,MAAM,WAAoC,iOAAO,MAAM;YACvD,MAAM,YAAY,GAAG,CAAC,UAAU;QAClC;IACF;IAEA;;GAEC,GACD,OAAO,SAAU,IAAI;QACnB,oCAAoC;QACpC,OAAgC,iOAAO,MAAM,WAAW;IAC1D;AACF"}},
    {"offset": {"line": 13978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13983, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-rehype@11.0.0/node_modules/remark-rehype/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {\n  defaultFootnoteBackContent,\n  defaultFootnoteBackLabel,\n  defaultHandlers\n} from 'mdast-util-to-hast'\nexport {default} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 13996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14001, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/types.js"],"sourcesContent":["export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,OAAa,CAAC;AACpB,MAAM,YAAa;AACnB,MAAM,QAAa;AACnB,MAAM,SAAa;AACnB,MAAM,OAAa;AACnB,MAAM,SAAa;AACnB,MAAM,MAAa;AACnB,MAAM,MAAa;AACnB,MAAM,QAAa;AACnB,MAAM,SAAa,GAC1B,2BAA2B"}},
    {"offset": {"line": 14023, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14028, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/serialize.js"],"sourcesContent":["import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n"],"names":[],"mappings":";;;;;;AAOA,MAAM,QAAQ;AAEd,MAAM,EAAC,QAAQ,EAAC,GAAG,CAAC;AACpB,MAAM,EAAC,IAAI,EAAC,GAAG;AAEf,MAAM,SAAS,CAAA;IACb,MAAM,OAAO,OAAO;IACpB,IAAI,SAAS,YAAY,CAAC,OACxB,OAAO;;QAAY;KAAK;IAE1B,MAAM,WAAW,SAAS,IAAI,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC;IAChD,OAAQ;QACN,KAAK;YACH,OAAO;;gBAAQ;aAAM;QACvB,KAAK;YACH,OAAO;;gBAAS;aAAM;QACxB,KAAK;YACH,OAAO;;gBAAO;aAAM;QACtB,KAAK;YACH,OAAO;;gBAAS;aAAM;QACxB,KAAK;YACH,OAAO;;gBAAM;aAAM;QACrB,KAAK;YACH,OAAO;;gBAAM;aAAM;IACvB;IAEA,IAAI,SAAS,QAAQ,CAAC,UACpB,OAAO;;QAAQ;KAAS;IAE1B,IAAI,SAAS,QAAQ,CAAC,UACpB,OAAO;;QAAQ;KAAS;IAE1B,OAAO;;QAAS;KAAS;AAC3B;AAEA,MAAM,aAAa,CAAC,CAAC,MAAM,KAAK,GAC9B,4PACA,CAAC,SAAS,cAAc,SAAS,QAAQ;AAG3C,MAAM,aAAa,CAAC,QAAQ,MAAM,GAAG;IAEnC,MAAM,KAAK,CAAC,KAAK;QACf,MAAM,QAAQ,EAAE,IAAI,CAAC,OAAO;QAC5B,EAAE,GAAG,CAAC,OAAO;QACb,OAAO;IACT;IAEA,MAAM,OAAO,CAAA;QACX,IAAI,EAAE,GAAG,CAAC,QACR,OAAO,EAAE,GAAG,CAAC;QAEf,IAAI,CAAC,MAAM,KAAK,GAAG,OAAO;QAC1B,OAAQ;YACN;gBAAgB;oBACd,IAAI,QAAQ;oBACZ,OAAQ;wBACN,KAAK;4BACH;4BACA,QAAQ,MAAM,QAAQ;4BACtB;wBACF,KAAK;wBACL,KAAK;4BACH,IAAI,QACF,MAAM,IAAI,UAAU,yBAAyB;4BAC/C,QAAQ;4BACR;wBACF,KAAK;4BACH,OAAO,GAAG;;6BAAM,EAAE;oBACtB;oBACA,OAAO,GAAG;wBAAC;wBAAM;qBAAM,EAAE;gBAC3B;YACA;gBAAY;oBACV,IAAI,MACF,OAAO,GAAG;wBAAC;wBAAM;+BAAI;yBAAM;qBAAC,EAAE;oBAEhC,MAAM,MAAM,EAAE;oBACd,MAAM,QAAQ,GAAG;wBAAC;wBAAM;qBAAI,EAAE;oBAC9B,KAAK,MAAM,SAAS,MAClB,IAAI,IAAI,CAAC,KAAK;oBAChB,OAAO;gBACT;YACA;gBAAa;oBACX,IAAI,MAAM;wBACR,OAAQ;4BACN,KAAK;gCACH,OAAO,GAAG;oCAAC;oCAAM,MAAM,QAAQ;iCAAG,EAAE;4BACtC,KAAK;4BACL,KAAK;4BACL,KAAK;gCACH,OAAO,GAAG;oCAAC;oCAAM,MAAM,OAAO;iCAAG,EAAE;wBACvC;oBACF;oBAEA,IAAI,QAAS,YAAY,OACvB,OAAO,KAAK,MAAM,MAAM;oBAE1B,MAAM,UAAU,EAAE;oBAClB,MAAM,QAAQ,GAAG;wBAAC;wBAAM;qBAAQ,EAAE;oBAClC,KAAK,MAAM,OAAO,KAAK,OAAQ;wBAC7B,IAAI,UAAU,CAAC,WAAW,OAAO,KAAK,CAAC,IAAI,IACzC,QAAQ,IAAI,CAAC;4BAAC,KAAK;4BAAM,KAAK,KAAK,CAAC,IAAI;yBAAE;oBAC9C;oBACA,OAAO;gBACT;YACA;gBACE,OAAO,GAAG;oBAAC;oBAAM,MAAM,WAAW;iBAAG,EAAE;YACzC;gBAAa;oBACX,MAAM,EAAC,MAAM,EAAE,KAAK,EAAC,GAAG;oBACxB,OAAO,GAAG;wBAAC;wBAAM;4BAAC;4BAAQ;wBAAK;qBAAE,EAAE;gBACrC;YACA;gBAAU;oBACR,MAAM,UAAU,EAAE;oBAClB,MAAM,QAAQ,GAAG;wBAAC;wBAAM;qBAAQ,EAAE;oBAClC,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,MAAO;wBAChC,IAAI,UAAU,CAAC,CAAC,WAAW,OAAO,SAAS,WAAW,OAAO,OAAO,GAClE,QAAQ,IAAI,CAAC;4BAAC,KAAK;4BAAM,KAAK;yBAAO;oBACzC;oBACA,OAAO;gBACT;YACA;gBAAU;oBACR,MAAM,UAAU,EAAE;oBAClB,MAAM,QAAQ,GAAG;wBAAC;wBAAM;qBAAQ,EAAE;oBAClC,KAAK,MAAM,SAAS,MAAO;wBACzB,IAAI,UAAU,CAAC,WAAW,OAAO,SAC/B,QAAQ,IAAI,CAAC,KAAK;oBACtB;oBACA,OAAO;gBACT;QACF;QAEA,MAAM,EAAC,OAAO,EAAC,GAAG;QAClB,OAAO,GAAG;YAAC;YAAM;gBAAC,MAAM;gBAAM;YAAO;SAAE,EAAE;IAC3C;IAEA,OAAO;AACT;AAcQ,MAAM,YAAY,CAAC,OAAO,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,CAAC,CAAC;IAClD,MAAM,IAAI,EAAE;IACZ,OAAO,WAAW,CAAC,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,GAAG,QAAQ;AAClE"}},
    {"offset": {"line": 14230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14235, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/deserialize.js"],"sourcesContent":["import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n"],"names":[],"mappings":";;;;;;AAOA,MAAM,MAAM,OAAO,SAAS,WAAW,OAAO;AAE9C,MAAM,eAAe,CAAC,GAAG;IACvB,MAAM,KAAK,CAAC,KAAK;QACf,EAAE,GAAG,CAAC,OAAO;QACb,OAAO;IACT;IAEA,MAAM,SAAS,CAAA;QACb,IAAI,EAAE,GAAG,CAAC,QACR,OAAO,EAAE,GAAG,CAAC;QAEf,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM;QAC9B,OAAQ;YACN;YACA;gBACE,OAAO,GAAG,OAAO;YACnB;gBAAY;oBACV,MAAM,MAAM,GAAG,EAAE,EAAE;oBACnB,KAAK,MAAM,SAAS,MAClB,IAAI,IAAI,CAAC,OAAO;oBAClB,OAAO;gBACT;YACA;gBAAa;oBACX,MAAM,SAAS,GAAG,CAAC,GAAG;oBACtB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,MACzB,MAAM,CAAC,OAAO,KAAK,GAAG,OAAO;oBAC/B,OAAO;gBACT;YACA;gBACE,OAAO,GAAG,IAAI,KAAK,QAAQ;YAC7B;gBAAa;oBACX,MAAM,EAAC,MAAM,EAAE,KAAK,EAAC,GAAG;oBACxB,OAAO,GAAG,IAAI,OAAO,QAAQ,QAAQ;gBACvC;YACA;gBAAU;oBACR,MAAM,MAAM,GAAG,IAAI,KAAK;oBACxB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,MACzB,IAAI,GAAG,CAAC,OAAO,MAAM,OAAO;oBAC9B,OAAO;gBACT;YACA;gBAAU;oBACR,MAAM,MAAM,GAAG,IAAI,KAAK;oBACxB,KAAK,MAAM,SAAS,MAClB,IAAI,GAAG,CAAC,OAAO;oBACjB,OAAO;gBACT;YACA;gBAAY;oBACV,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC,GAAG;oBACxB,OAAO,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU;gBACpC;YACA;gBACE,OAAO,GAAG,OAAO,QAAQ;YAC3B,KAAK;gBACH,OAAO,GAAG,OAAO,OAAO,SAAS;QACrC;QACA,OAAO,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ;IAClC;IAEA,OAAO;AACT;AAWO,MAAM,cAAc,CAAA,aAAc,aAAa,IAAI,KAAK,YAAY"}},
    {"offset": {"line": 14300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14305, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/index.js"],"sourcesContent":["import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n"],"names":[],"mappings":";;;;;;;;;;uCAee,OAAO,oBAAoB,aACxC,mBAAmB,GACnB,CAAC,KAAK,UACJ,WAAW,CAAC,UAAU,WAAW,WAAW,OAAO,IACjD,wPAAY,oPAAU,KAAK,YAAY,gBAAgB,OAE3D,CAAC,KAAK,UAAY,wPAAY,oPAAU,KAAK"}},
    {"offset": {"line": 14317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14322, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/character-entities@2.0.2/node_modules/character-entities/index.js"],"sourcesContent":["/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 16456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16461, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/decode-named-character-reference@1.0.2/node_modules/decode-named-character-reference/index.js"],"sourcesContent":["import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,MAAM,CAAC,EAAE,cAAc;AAatB,SAAS,8BAA8B,KAAK;IACjD,OAAO,IAAI,IAAI,iOAAoB,SAAS,8NAAiB,CAAC,MAAM,GAAG;AACzE"}},
    {"offset": {"line": 16471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16476, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-normalize-identifier@1.1.0/node_modules/micromark-util-normalize-identifier/dev/index.js"],"sourcesContent":["import {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n"],"names":[],"mappings":";;;;;;AAqBO,SAAS,oBAAoB,KAAK;IACvC,OACE,KACE,gCAAgC;KAC/B,OAAO,CAAC,eAAe,iOAAO,KAAK,CACpC,QAAQ;KACP,OAAO,CAAC,UAAU,GACnB,qEAAqE;IACrE,iEAAiE;IACjE,aAAa;IACb,iEAAiE;IACjE,uEAAuE;IACvE,mCAAmC;KAClC,WAAW,GACX,WAAW;AAElB"}},
    {"offset": {"line": 16493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16498, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-normalize-identifier@2.0.0/node_modules/micromark-util-normalize-identifier/dev/index.js"],"sourcesContent":["import {values} from 'micromark-util-symbol'\n\n/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n"],"names":[],"mappings":";;;;;;AAqBO,SAAS,oBAAoB,KAAK;IACvC,OACE,KACE,gCAAgC;KAC/B,OAAO,CAAC,eAAe,yOAAO,KAAK,CACpC,QAAQ;KACP,OAAO,CAAC,UAAU,GACnB,qEAAqE;IACrE,iEAAiE;IACjE,aAAa;IACb,iEAAiE;IACjE,uEAAuE;IACvE,mCAAmC;KAClC,WAAW,GACX,WAAW;AAElB"}},
    {"offset": {"line": 16515, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16520, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-decode-numeric-character-reference@1.1.0/node_modules/micromark-util-decode-numeric-character-reference/dev/index.js"],"sourcesContent":["import {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < codes.ht ||\n    code === codes.vt ||\n    (code > codes.cr && code < codes.space) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > codes.tilde && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    /* eslint-disable no-bitwise */\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 ||\n    /* eslint-enable no-bitwise */\n    // Out of range\n    code > 1114111\n  ) {\n    return values.replacementCharacter\n  }\n\n  return String.fromCharCode(code)\n}\n"],"names":[],"mappings":";;;;;;;;AAiBO,SAAS,gCAAgC,KAAK,EAAE,IAAI;IACzD,MAAM,OAAO,OAAO,QAAQ,CAAC,OAAO;IAEpC,IACE,uCAAuC;IACvC,OAAO,+NAAM,EAAE,IACf,SAAS,+NAAM,EAAE,IAChB,OAAO,+NAAM,EAAE,IAAI,OAAO,+NAAM,KAAK,IAErC,OAAO,+NAAM,KAAK,IAAI,OAAO,OAE7B,OAAO,SAAS,OAAO,SAEvB,OAAO,SAAS,OAAO,SACxB,6BAA6B,GAC7B,CAAC,OAAO,KAAK,MAAM,SACnB,CAAC,OAAO,KAAK,MAAM,SACnB,4BAA4B,GAC5B,eAAe;IACf,OAAO,SACP;QACA,OAAO,iOAAO,oBAAoB;IACpC;IAEA,OAAO,OAAO,YAAY,CAAC;AAC7B"}},
    {"offset": {"line": 16537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16542, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-decode-numeric-character-reference@2.0.1/node_modules/micromark-util-decode-numeric-character-reference/dev/index.js"],"sourcesContent":["import {codes, values} from 'micromark-util-symbol'\n\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < codes.ht ||\n    code === codes.vt ||\n    (code > codes.cr && code < codes.space) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > codes.tilde && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55_295 && code < 57_344) ||\n    // Noncharacters.\n    (code > 64_975 && code < 65_008) ||\n    /* eslint-disable no-bitwise */\n    (code & 65_535) === 65_535 ||\n    (code & 65_535) === 65_534 ||\n    /* eslint-enable no-bitwise */\n    // Out of range\n    code > 1_114_111\n  ) {\n    return values.replacementCharacter\n  }\n\n  return String.fromCodePoint(code)\n}\n"],"names":[],"mappings":";;;;;;AAgBO,SAAS,gCAAgC,KAAK,EAAE,IAAI;IACzD,MAAM,OAAO,OAAO,QAAQ,CAAC,OAAO;IAEpC,IACE,uCAAuC;IACvC,OAAO,wOAAM,EAAE,IACf,SAAS,wOAAM,EAAE,IAChB,OAAO,wOAAM,EAAE,IAAI,OAAO,wOAAM,KAAK,IAErC,OAAO,wOAAM,KAAK,IAAI,OAAO,OAE7B,OAAO,UAAU,OAAO,UAExB,OAAO,UAAU,OAAO,UACzB,6BAA6B,GAC7B,CAAC,OAAO,MAAM,MAAM,UACpB,CAAC,OAAO,MAAM,MAAM,UACpB,4BAA4B,GAC5B,eAAe;IACf,OAAO,WACP;QACA,OAAO,yOAAO,oBAAoB;IACpC;IAEA,OAAO,OAAO,aAAa,CAAC;AAC9B"}},
    {"offset": {"line": 16557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16562, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-decode-string@1.1.0/node_modules/micromark-util-decode-string/dev/index.js"],"sourcesContent":["import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n\n  if (head === codes.numberSign) {\n    const head = $2.charCodeAt(1)\n    const hex = head === codes.lowercaseX || head === codes.uppercaseX\n    return decodeNumericCharacterReference(\n      $2.slice(hex ? 2 : 1),\n      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal\n    )\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAKA,MAAM,6BACJ;AAcK,SAAS,aAAa,KAAK;IAChC,OAAO,MAAM,OAAO,CAAC,4BAA4B;AACnD;AAEA;;;;;CAKC,GACD,SAAS,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE;IACxB,IAAI,IAAI;QACN,UAAU;QACV,OAAO;IACT;IAEA,aAAa;IACb,MAAM,OAAO,GAAG,UAAU,CAAC;IAE3B,IAAI,SAAS,+NAAM,UAAU,EAAE;QAC7B,MAAM,OAAO,GAAG,UAAU,CAAC;QAC3B,MAAM,MAAM,SAAS,+NAAM,UAAU,IAAI,SAAS,+NAAM,UAAU;QAClE,OAAO,0UACL,GAAG,KAAK,CAAC,MAAM,IAAI,IACnB,MAAM,uOAAU,sBAAsB,GAAG,uOAAU,kBAAkB;IAEzE;IAEA,OAAO,mRAA8B,OAAO;AAC9C"}},
    {"offset": {"line": 16597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16602, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-decode-string@2.0.0/node_modules/micromark-util-decode-string/dev/index.js"],"sourcesContent":["import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {codes, constants} from 'micromark-util-symbol'\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n\n  if (head === codes.numberSign) {\n    const head = $2.charCodeAt(1)\n    const hex = head === codes.lowercaseX || head === codes.uppercaseX\n    return decodeNumericCharacterReference(\n      $2.slice(hex ? 2 : 1),\n      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal\n    )\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,6BACJ;AAcK,SAAS,aAAa,KAAK;IAChC,OAAO,MAAM,OAAO,CAAC,4BAA4B;AACnD;AAEA;;;;;CAKC,GACD,SAAS,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE;IACxB,IAAI,IAAI;QACN,UAAU;QACV,OAAO;IACT;IAEA,aAAa;IACb,MAAM,OAAO,GAAG,UAAU,CAAC;IAE3B,IAAI,SAAS,wOAAM,UAAU,EAAE;QAC7B,MAAM,OAAO,GAAG,UAAU,CAAC;QAC3B,MAAM,MAAM,SAAS,wOAAM,UAAU,IAAI,SAAS,wOAAM,UAAU;QAClE,OAAO,0UACL,GAAG,KAAK,CAAC,MAAM,IAAI,IACnB,MAAM,4OAAU,sBAAsB,GAAG,4OAAU,kBAAkB;IAEzE;IAEA,OAAO,mRAA8B,OAAO;AAC9C"}},
    {"offset": {"line": 16635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16639, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/index.js"],"sourcesContent":["'use strict';\n\nlet FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nconst $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t),\n\n\t// modifiers\n\treset: init(0, 0),\n\tbold: init(1, 22),\n\tdim: init(2, 22),\n\titalic: init(3, 23),\n\tunderline: init(4, 24),\n\tinverse: init(7, 27),\n\thidden: init(8, 28),\n\tstrikethrough: init(9, 29),\n\n\t// colors\n\tblack: init(30, 39),\n\tred: init(31, 39),\n\tgreen: init(32, 39),\n\tyellow: init(33, 39),\n\tblue: init(34, 39),\n\tmagenta: init(35, 39),\n\tcyan: init(36, 39),\n\twhite: init(37, 39),\n\tgray: init(90, 39),\n\tgrey: init(90, 39),\n\n\t// background colors\n\tbgBlack: init(40, 49),\n\tbgRed: init(41, 49),\n\tbgGreen: init(42, 49),\n\tbgYellow: init(43, 49),\n\tbgBlue: init(44, 49),\n\tbgMagenta: init(45, 49),\n\tbgCyan: init(46, 49),\n\tbgWhite: init(47, 49)\n};\n\nfunction run(arr, str) {\n\tlet i=0, tmp, beg='', end='';\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tbeg += tmp.open;\n\t\tend += tmp.close;\n\t\tif (!!~str.indexOf(tmp.close)) {\n\t\t\tstr = str.replace(tmp.rgx, tmp.close + tmp.open);\n\t\t}\n\t}\n\treturn beg + str + end;\n}\n\nfunction chain(has, keys) {\n\tlet ctx = { has, keys };\n\n\tctx.reset = $.reset.bind(ctx);\n\tctx.bold = $.bold.bind(ctx);\n\tctx.dim = $.dim.bind(ctx);\n\tctx.italic = $.italic.bind(ctx);\n\tctx.underline = $.underline.bind(ctx);\n\tctx.inverse = $.inverse.bind(ctx);\n\tctx.hidden = $.hidden.bind(ctx);\n\tctx.strikethrough = $.strikethrough.bind(ctx);\n\n\tctx.black = $.black.bind(ctx);\n\tctx.red = $.red.bind(ctx);\n\tctx.green = $.green.bind(ctx);\n\tctx.yellow = $.yellow.bind(ctx);\n\tctx.blue = $.blue.bind(ctx);\n\tctx.magenta = $.magenta.bind(ctx);\n\tctx.cyan = $.cyan.bind(ctx);\n\tctx.white = $.white.bind(ctx);\n\tctx.gray = $.gray.bind(ctx);\n\tctx.grey = $.grey.bind(ctx);\n\n\tctx.bgBlack = $.bgBlack.bind(ctx);\n\tctx.bgRed = $.bgRed.bind(ctx);\n\tctx.bgGreen = $.bgGreen.bind(ctx);\n\tctx.bgYellow = $.bgYellow.bind(ctx);\n\tctx.bgBlue = $.bgBlue.bind(ctx);\n\tctx.bgMagenta = $.bgMagenta.bind(ctx);\n\tctx.bgCyan = $.bgCyan.bind(ctx);\n\tctx.bgWhite = $.bgWhite.bind(ctx);\n\n\treturn ctx;\n}\n\nfunction init(open, close) {\n\tlet blk = {\n\t\topen: `\\x1b[${open}m`,\n\t\tclose: `\\x1b[${close}m`,\n\t\trgx: new RegExp(`\\\\x1b\\\\[${close}m`, 'g')\n\t};\n\treturn function (txt) {\n\t\tif (this !== void 0 && this.has !== void 0) {\n\t\t\t!!~this.has.indexOf(open) || (this.has.push(open),this.keys.push(blk));\n\t\t\treturn txt === void 0 ? this : $.enabled ? run(this.keys, txt+'') : txt+'';\n\t\t}\n\t\treturn txt === void 0 ? chain([open], [blk]) : $.enabled ? run([blk], txt+'') : txt+'';\n\t};\n}\n\nmodule.exports = $;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 16743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16748, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/index.mjs"],"sourcesContent":["'use strict';\n\nlet FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nconst $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t),\n\n\t// modifiers\n\treset: init(0, 0),\n\tbold: init(1, 22),\n\tdim: init(2, 22),\n\titalic: init(3, 23),\n\tunderline: init(4, 24),\n\tinverse: init(7, 27),\n\thidden: init(8, 28),\n\tstrikethrough: init(9, 29),\n\n\t// colors\n\tblack: init(30, 39),\n\tred: init(31, 39),\n\tgreen: init(32, 39),\n\tyellow: init(33, 39),\n\tblue: init(34, 39),\n\tmagenta: init(35, 39),\n\tcyan: init(36, 39),\n\twhite: init(37, 39),\n\tgray: init(90, 39),\n\tgrey: init(90, 39),\n\n\t// background colors\n\tbgBlack: init(40, 49),\n\tbgRed: init(41, 49),\n\tbgGreen: init(42, 49),\n\tbgYellow: init(43, 49),\n\tbgBlue: init(44, 49),\n\tbgMagenta: init(45, 49),\n\tbgCyan: init(46, 49),\n\tbgWhite: init(47, 49)\n};\n\nfunction run(arr, str) {\n\tlet i=0, tmp, beg='', end='';\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tbeg += tmp.open;\n\t\tend += tmp.close;\n\t\tif (!!~str.indexOf(tmp.close)) {\n\t\t\tstr = str.replace(tmp.rgx, tmp.close + tmp.open);\n\t\t}\n\t}\n\treturn beg + str + end;\n}\n\nfunction chain(has, keys) {\n\tlet ctx = { has, keys };\n\n\tctx.reset = $.reset.bind(ctx);\n\tctx.bold = $.bold.bind(ctx);\n\tctx.dim = $.dim.bind(ctx);\n\tctx.italic = $.italic.bind(ctx);\n\tctx.underline = $.underline.bind(ctx);\n\tctx.inverse = $.inverse.bind(ctx);\n\tctx.hidden = $.hidden.bind(ctx);\n\tctx.strikethrough = $.strikethrough.bind(ctx);\n\n\tctx.black = $.black.bind(ctx);\n\tctx.red = $.red.bind(ctx);\n\tctx.green = $.green.bind(ctx);\n\tctx.yellow = $.yellow.bind(ctx);\n\tctx.blue = $.blue.bind(ctx);\n\tctx.magenta = $.magenta.bind(ctx);\n\tctx.cyan = $.cyan.bind(ctx);\n\tctx.white = $.white.bind(ctx);\n\tctx.gray = $.gray.bind(ctx);\n\tctx.grey = $.grey.bind(ctx);\n\n\tctx.bgBlack = $.bgBlack.bind(ctx);\n\tctx.bgRed = $.bgRed.bind(ctx);\n\tctx.bgGreen = $.bgGreen.bind(ctx);\n\tctx.bgYellow = $.bgYellow.bind(ctx);\n\tctx.bgBlue = $.bgBlue.bind(ctx);\n\tctx.bgMagenta = $.bgMagenta.bind(ctx);\n\tctx.bgCyan = $.bgCyan.bind(ctx);\n\tctx.bgWhite = $.bgWhite.bind(ctx);\n\n\treturn ctx;\n}\n\nfunction init(open, close) {\n\tlet blk = {\n\t\topen: `\\x1b[${open}m`,\n\t\tclose: `\\x1b[${close}m`,\n\t\trgx: new RegExp(`\\\\x1b\\\\[${close}m`, 'g')\n\t};\n\treturn function (txt) {\n\t\tif (this !== void 0 && this.has !== void 0) {\n\t\t\t!!~this.has.indexOf(open) || (this.has.push(open),this.keys.push(blk));\n\t\t\treturn txt === void 0 ? this : $.enabled ? run(this.keys, txt+'') : txt+'';\n\t\t}\n\t\treturn txt === void 0 ? chain([open], [blk]) : $.enabled ? run([blk], txt+'') : txt+'';\n\t};\n}\n\nexport default $;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 16855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16859, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/diff/index.js"],"sourcesContent":["const kleur = require('kleur');\nconst diff = require('diff');\n\nconst colors = {\n\t'--': kleur.red,\n\t'··': kleur.grey,\n\t'++': kleur.green,\n};\n\nconst TITLE = kleur.dim().italic;\nconst TAB=kleur.dim('→'), SPACE=kleur.dim('·'), NL=kleur.dim('↵');\nconst LOG = (sym, str) => colors[sym](sym + PRETTY(str)) + '\\n';\nconst LINE = (num, x) => kleur.dim('L' + String(num).padStart(x, '0') + ' ');\nconst PRETTY = str => str.replace(/[ ]/g, SPACE).replace(/\\t/g, TAB).replace(/(\\r?\\n)/g, NL);\n\nfunction line(obj, prev, pad) {\n\tlet char = obj.removed ? '--' : obj.added ? '++' : '··';\n\tlet arr = obj.value.replace(/\\r?\\n$/, '').split('\\n');\n\tlet i=0, tmp, out='';\n\n\tif (obj.added) out += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\telse if (obj.removed) out += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tif (tmp != null) {\n\t\t\tif (prev) out += LINE(prev + i, pad);\n\t\t\tout += LOG(char, tmp || '\\n');\n\t\t}\n\t}\n\n\treturn out;\n}\n\n// TODO: want better diffing\n//~> complex items bail outright\nfunction arrays(input, expect) {\n\tlet arr = diff.diffArrays(input, expect);\n\tlet i=0, j=0, k=0, tmp, val, char, isObj, str;\n\tlet out = LOG('··', '[');\n\n\tfor (; i < arr.length; i++) {\n\t\tchar = (tmp = arr[i]).removed ? '--' : tmp.added ? '++' : '··';\n\n\t\tif (tmp.added) {\n\t\t\tout += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\t\t} else if (tmp.removed) {\n\t\t\tout += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\t\t}\n\n\t\tfor (j=0; j < tmp.value.length; j++) {\n\t\t\tisObj = (tmp.value[j] && typeof tmp.value[j] === 'object');\n\t\t\tval = stringify(tmp.value[j]).split(/\\r?\\n/g);\n\t\t\tfor (k=0; k < val.length;) {\n\t\t\t\tstr = '  ' + val[k++] + (isObj ? '' : ',');\n\t\t\t\tif (isObj && k === val.length && (j + 1) < tmp.value.length) str += ',';\n\t\t\t\tout += LOG(char, str);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out + LOG('··', ']');\n}\n\nfunction lines(input, expect, linenum = 0) {\n\tlet i=0, tmp, output='';\n\tlet arr = diff.diffLines(input, expect);\n\tlet pad = String(expect.split(/\\r?\\n/g).length - linenum).length;\n\n\tfor (; i < arr.length; i++) {\n\t\toutput += line(tmp = arr[i], linenum, pad);\n\t\tif (linenum && !tmp.removed) linenum += tmp.count;\n\t}\n\n\treturn output;\n}\n\nfunction chars(input, expect) {\n\tlet arr = diff.diffChars(input, expect);\n\tlet i=0, output='', tmp;\n\n\tlet l1 = input.length;\n\tlet l2 = expect.length;\n\n\tlet p1 = PRETTY(input);\n\tlet p2 = PRETTY(expect);\n\n\ttmp = arr[i];\n\n\tif (l1 === l2) {\n\t\t// no length offsets\n\t} else if (tmp.removed && arr[i + 1]) {\n\t\tlet del = tmp.count - arr[i + 1].count;\n\t\tif (del == 0) {\n\t\t\t// wash~\n\t\t} else if (del > 0) {\n\t\t\texpect = ' '.repeat(del) + expect;\n\t\t\tp2 = ' '.repeat(del) + p2;\n\t\t\tl2 += del;\n\t\t} else if (del < 0) {\n\t\t\tinput = ' '.repeat(-del) + input;\n\t\t\tp1 = ' '.repeat(-del) + p1;\n\t\t\tl1 += -del;\n\t\t}\n\t}\n\n\toutput += direct(p1, p2, l1, l2);\n\n\tif (l1 === l2) {\n\t\tfor (tmp='  '; i < l1; i++) {\n\t\t\ttmp += input[i] === expect[i] ? ' ' : '^';\n\t\t}\n\t} else {\n\t\tfor (tmp='  '; i < arr.length; i++) {\n\t\t\ttmp += ((arr[i].added || arr[i].removed) ? '^' : ' ').repeat(Math.max(arr[i].count, 0));\n\t\t\tif (i + 1 < arr.length && ((arr[i].added && arr[i+1].removed) || (arr[i].removed && arr[i+1].added))) {\n\t\t\t\tarr[i + 1].count -= arr[i].count;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output + kleur.red(tmp);\n}\n\nfunction direct(input, expect, lenA = String(input).length, lenB = String(expect).length) {\n\tlet gutter = 4;\n\tlet lenC = Math.max(lenA, lenB);\n\tlet typeA=typeof input, typeB=typeof expect;\n\n\tif (typeA !== typeB) {\n\t\tgutter = 2;\n\n\t\tlet delA = gutter + lenC - lenA;\n\t\tlet delB = gutter + lenC - lenB;\n\n\t\tinput += ' '.repeat(delA) + kleur.dim(`[${typeA}]`);\n\t\texpect += ' '.repeat(delB) + kleur.dim(`[${typeB}]`);\n\n\t\tlenA += delA + typeA.length + 2;\n\t\tlenB += delB + typeB.length + 2;\n\t\tlenC = Math.max(lenA, lenB);\n\t}\n\n\tlet output = colors['++']('++' + expect + ' '.repeat(gutter + lenC - lenB) + TITLE('(Expected)')) + '\\n';\n\treturn output + colors['--']('--' + input + ' '.repeat(gutter + lenC - lenA) + TITLE('(Actual)')) + '\\n';\n}\n\nfunction sort(input, expect) {\n\tvar k, i=0, tmp, isArr = Array.isArray(input);\n\tvar keys=[], out=isArr ? Array(input.length) : {};\n\n\tif (isArr) {\n\t\tfor (i=0; i < out.length; i++) {\n\t\t\ttmp = input[i];\n\t\t\tif (!tmp || typeof tmp !== 'object') out[i] = tmp;\n\t\t\telse out[i] = sort(tmp, expect[i]); // might not be right\n\t\t}\n\t} else {\n\t\tfor (k in expect)\n\t\t\tkeys.push(k);\n\n\t\tfor (; i < keys.length; i++) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(input, k = keys[i])) {\n\t\t\t\tif (!(tmp = input[k]) || typeof tmp !== 'object') out[k] = tmp;\n\t\t\t\telse out[k] = sort(tmp, expect[k]);\n\t\t\t}\n\t\t}\n\n\t\tfor (k in input) {\n\t\t\tif (!out.hasOwnProperty(k)) {\n\t\t\t\tout[k] = input[k]; // expect didnt have\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\nfunction circular() {\n\tvar cache = new Set;\n\treturn function print(key, val) {\n\t\tif (val === void 0) return '[__VOID__]';\n\t\tif (typeof val === 'number' && val !== val) return '[__NAN__]';\n\t\tif (typeof val === 'bigint') return val.toString();\n\t\tif (!val || typeof val !== 'object') return val;\n\t\tif (cache.has(val)) return '[Circular]';\n\t\tcache.add(val); return val;\n\t}\n}\n\nfunction stringify(input) {\n\treturn JSON.stringify(input, circular(), 2).replace(/\"\\[__NAN__\\]\"/g, 'NaN').replace(/\"\\[__VOID__\\]\"/g, 'undefined');\n}\n\nfunction compare(input, expect) {\n\tif (Array.isArray(expect) && Array.isArray(input)) return arrays(input, expect);\n\tif (expect instanceof RegExp) return chars(''+input, ''+expect);\n\n\tlet isA = input && typeof input == 'object';\n\tlet isB = expect && typeof expect == 'object';\n\n\tif (isA && isB) input = sort(input, expect);\n\tif (isB) expect = stringify(expect);\n\tif (isA) input = stringify(input);\n\n\tif (expect && typeof expect == 'object') {\n\t\tinput = stringify(sort(input, expect));\n\t\texpect = stringify(expect);\n\t}\n\n\tisA = typeof input == 'string';\n\tisB = typeof expect == 'string';\n\n\tif (isA && /\\r?\\n/.test(input)) return lines(input, ''+expect);\n\tif (isB && /\\r?\\n/.test(expect)) return lines(''+input, expect);\n\tif (isA && isB) return chars(input, expect);\n\n\treturn direct(input, expect);\n}\n\nexports.arrays = arrays;\nexports.chars = chars;\nexports.circular = circular;\nexports.compare = compare;\nexports.direct = direct;\nexports.lines = lines;\nexports.sort = sort;\nexports.stringify = stringify;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 17044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17048, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.js"],"sourcesContent":["const { dequal } = require('dequal');\nconst { compare, lines } = require('uvu/diff');\n\nfunction dedent(str) {\n\tstr = str.replace(/\\r?\\n/g, '\\n');\n  let arr = str.match(/^[ \\t]*(?=\\S)/gm);\n  let i = 0, min = 1/0, len = (arr||[]).length;\n  for (; i < len; i++) min = Math.min(min, arr[i].length);\n  return len && min ? str.replace(new RegExp(`^[ \\\\t]{${min}}`, 'gm'), '') : str;\n}\n\nclass Assertion extends Error {\n\tconstructor(opts={}) {\n\t\tsuper(opts.message);\n\t\tthis.name = 'Assertion';\n\t\tthis.code = 'ERR_ASSERTION';\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\t}\n\t\tthis.details = opts.details || false;\n\t\tthis.generated = !!opts.generated;\n\t\tthis.operator = opts.operator;\n\t\tthis.expects = opts.expects;\n\t\tthis.actual = opts.actual;\n\t}\n}\n\nfunction assert(bool, actual, expects, operator, detailer, backup, msg) {\n\tif (bool) return;\n\tlet message = msg || backup;\n\tif (msg instanceof Error) throw msg;\n\tlet details = detailer && detailer(actual, expects);\n\tthrow new Assertion({ actual, expects, operator, message, details, generated: !msg });\n}\n\nfunction ok(val, msg) {\n\tassert(!!val, false, true, 'ok', false, 'Expected value to be truthy', msg);\n}\n\nfunction is(val, exp, msg) {\n\tassert(val === exp, val, exp, 'is', compare, 'Expected values to be strictly equal:', msg);\n}\n\nfunction equal(val, exp, msg) {\n\tassert(dequal(val, exp), val, exp, 'equal', compare, 'Expected values to be deeply equal:', msg);\n}\n\nfunction unreachable(msg) {\n\tassert(false, true, false, 'unreachable', false, 'Expected not to be reached!', msg);\n}\n\nfunction type(val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp === exp, tmp, exp, 'type', false, `Expected \"${tmp}\" to be \"${exp}\"`, msg);\n}\n\nfunction instance(val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(val instanceof exp, val, exp, 'instance', false, `Expected value to be an instance of ${name}`, msg);\n}\n\nfunction match(val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(val.includes(exp), val, exp, 'match', false, `Expected value to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(exp.test(val), val, exp, 'match', false, `Expected value to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nfunction snapshot(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'snapshot', lines, 'Expected value to match snapshot:', msg);\n}\n\nconst lineNums = (x, y) => lines(x, y, 1);\nfunction fixture(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'fixture', lineNums, 'Expected value to match fixture:', msg);\n}\n\nfunction throws(blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t\tassert(false, false, true, 'throws', false, 'Expected function to throw', msg);\n\t} catch (err) {\n\t\tif (err instanceof Assertion) throw err;\n\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(exp(err), false, true, 'throws', false, 'Expected function to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(exp.test(err.message), false, true, 'throws', false, `Expected function to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t}\n\t}\n}\n\n// ---\n\nfunction not(val, msg) {\n\tassert(!val, true, false, 'not', false, 'Expected value to be falsey', msg);\n}\n\nnot.ok = not;\n\nis.not = function (val, exp, msg) {\n\tassert(val !== exp, val, exp, 'is.not', false, 'Expected values not to be strictly equal', msg);\n}\n\nnot.equal = function (val, exp, msg) {\n\tassert(!dequal(val, exp), val, exp, 'not.equal', false, 'Expected values not to be deeply equal', msg);\n}\n\nnot.type = function (val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp !== exp, tmp, exp, 'not.type', false, `Expected \"${tmp}\" not to be \"${exp}\"`, msg);\n}\n\nnot.instance = function (val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(!(val instanceof exp), val, exp, 'not.instance', false, `Expected value not to be an instance of ${name}`, msg);\n}\n\nnot.snapshot = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.snapshot', false, 'Expected value not to match snapshot', msg);\n}\n\nnot.fixture = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.fixture', false, 'Expected value not to match fixture', msg);\n}\n\nnot.match = function (val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(!val.includes(exp), val, exp, 'not.match', false, `Expected value not to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(!exp.test(val), val, exp, 'not.match', false, `Expected value not to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nnot.throws = function (blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t} catch (err) {\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(!exp(err), true, false, 'not.throws', false, 'Expected function not to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(!exp.test(err.message), true, false, 'not.throws', false, `Expected function not to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t} else if (!exp) {\n\t\t\tassert(false, true, false, 'not.throws', false, 'Expected function not to throw', msg);\n\t\t}\n\t}\n}\n\nexports.Assertion = Assertion;\nexports.equal = equal;\nexports.fixture = fixture;\nexports.instance = instance;\nexports.is = is;\nexports.match = match;\nexports.not = not;\nexports.ok = ok;\nexports.snapshot = snapshot;\nexports.throws = throws;\nexports.type = type;\nexports.unreachable = unreachable;"],"names":[],"mappings":"AAAA,MAAM,EAAE,MAAM,EAAE,GAAG;AACnB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG;AAE3B,SAAS,OAAO,GAAG;IAClB,MAAM,IAAI,OAAO,CAAC,UAAU;IAC3B,IAAI,MAAM,IAAI,KAAK,CAAC;IACpB,IAAI,IAAI,GAAG,MAAM,IAAE,GAAG,MAAM,CAAC,OAAK,EAAE,EAAE,MAAM;IAC5C,MAAO,IAAI,KAAK,IAAK,MAAM,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM;IACtD,OAAO,OAAO,MAAM,IAAI,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,MAAM;AAC7E;AAEA,MAAM,kBAAkB;IACvB,YAAY,OAAK,CAAC,CAAC,CAAE;QACpB,KAAK,CAAC,KAAK,OAAO;QAClB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,MAAM,iBAAiB,EAAE;YAC5B,MAAM,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW;QAC/C;QACA,IAAI,CAAC,OAAO,GAAG,KAAK,OAAO,IAAI;QAC/B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,SAAS;QACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,OAAO;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM;IAC1B;AACD;AAEA,SAAS,OAAO,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG;IACrE,IAAI,MAAM;IACV,IAAI,UAAU,OAAO;IACrB,IAAI,eAAe,OAAO,MAAM;IAChC,IAAI,UAAU,YAAY,SAAS,QAAQ;IAC3C,MAAM,IAAI,UAAU;QAAE;QAAQ;QAAS;QAAU;QAAS;QAAS,WAAW,CAAC;IAAI;AACpF;AAEA,SAAS,GAAG,GAAG,EAAE,GAAG;IACnB,OAAO,CAAC,CAAC,KAAK,OAAO,MAAM,MAAM,OAAO,+BAA+B;AACxE;AAEA,SAAS,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG;IACxB,OAAO,QAAQ,KAAK,KAAK,KAAK,MAAM,SAAS,yCAAyC;AACvF;AAEA,SAAS,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG;IAC3B,OAAO,OAAO,KAAK,MAAM,KAAK,KAAK,SAAS,SAAS,uCAAuC;AAC7F;AAEA,SAAS,YAAY,GAAG;IACvB,OAAO,OAAO,MAAM,OAAO,eAAe,OAAO,+BAA+B;AACjF;AAEA,SAAS,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG;IAC1B,IAAI,MAAM,OAAO;IACjB,OAAO,QAAQ,KAAK,KAAK,KAAK,QAAQ,OAAO,CAAC,UAAU,EAAE,IAAI,SAAS,EAAE,IAAI,CAAC,CAAC,EAAE;AAClF;AAEA,SAAS,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG;IAC9B,IAAI,OAAO,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI;IACtD,OAAO,eAAe,KAAK,KAAK,KAAK,YAAY,OAAO,CAAC,oCAAoC,EAAE,KAAK,CAAC,EAAE;AACxG;AAEA,SAAS,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG;IAC3B,IAAI,OAAO,QAAQ,UAAU;QAC5B,OAAO,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAK,SAAS,OAAO,CAAC,2BAA2B,EAAE,IAAI,WAAW,CAAC,EAAE;IACrG,OAAO;QACN,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,SAAS,OAAO,CAAC,0BAA0B,EAAE,OAAO,KAAK,UAAU,CAAC,EAAE;IACvG;AACD;AAEA,SAAS,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG;IAC9B,MAAI,OAAO;IAAM,MAAI,OAAO;IAC5B,OAAO,QAAQ,KAAK,KAAK,KAAK,YAAY,OAAO,qCAAqC;AACvF;AAEA,MAAM,WAAW,CAAC,GAAG,IAAM,MAAM,GAAG,GAAG;AACvC,SAAS,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG;IAC7B,MAAI,OAAO;IAAM,MAAI,OAAO;IAC5B,OAAO,QAAQ,KAAK,KAAK,KAAK,WAAW,UAAU,oCAAoC;AACxF;AAEA,SAAS,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG;IAC5B,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACpC,MAAM;QAAK,MAAM;IAClB;IAEA,IAAI;QACH;QACA,OAAO,OAAO,OAAO,MAAM,UAAU,OAAO,8BAA8B;IAC3E,EAAE,OAAO,KAAK;QACb,IAAI,eAAe,WAAW,MAAM;QAEpC,IAAI,OAAO,QAAQ,YAAY;YAC9B,OAAO,IAAI,MAAM,OAAO,MAAM,UAAU,OAAO,iDAAiD;QACjG,OAAO,IAAI,eAAe,QAAQ;YACjC,OAAO,IAAI,IAAI,CAAC,IAAI,OAAO,GAAG,OAAO,MAAM,UAAU,OAAO,CAAC,gDAAgD,EAAE,OAAO,KAAK,UAAU,CAAC,EAAE;QACzI;IACD;AACD;AAEA,MAAM;AAEN,SAAS,IAAI,GAAG,EAAE,GAAG;IACpB,OAAO,CAAC,KAAK,MAAM,OAAO,OAAO,OAAO,+BAA+B;AACxE;AAEA,IAAI,EAAE,GAAG;AAET,GAAG,GAAG,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IAC/B,OAAO,QAAQ,KAAK,KAAK,KAAK,UAAU,OAAO,4CAA4C;AAC5F;AAEA,IAAI,KAAK,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IAClC,OAAO,CAAC,OAAO,KAAK,MAAM,KAAK,KAAK,aAAa,OAAO,0CAA0C;AACnG;AAEA,IAAI,IAAI,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IACjC,IAAI,MAAM,OAAO;IACjB,OAAO,QAAQ,KAAK,KAAK,KAAK,YAAY,OAAO,CAAC,UAAU,EAAE,IAAI,aAAa,EAAE,IAAI,CAAC,CAAC,EAAE;AAC1F;AAEA,IAAI,QAAQ,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IACrC,IAAI,OAAO,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI;IACtD,OAAO,CAAC,CAAC,eAAe,GAAG,GAAG,KAAK,KAAK,gBAAgB,OAAO,CAAC,wCAAwC,EAAE,KAAK,CAAC,EAAE;AACnH;AAEA,IAAI,QAAQ,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IACrC,MAAI,OAAO;IAAM,MAAI,OAAO;IAC5B,OAAO,QAAQ,KAAK,KAAK,KAAK,gBAAgB,OAAO,wCAAwC;AAC9F;AAEA,IAAI,OAAO,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IACpC,MAAI,OAAO;IAAM,MAAI,OAAO;IAC5B,OAAO,QAAQ,KAAK,KAAK,KAAK,eAAe,OAAO,uCAAuC;AAC5F;AAEA,IAAI,KAAK,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IAClC,IAAI,OAAO,QAAQ,UAAU;QAC5B,OAAO,CAAC,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAK,aAAa,OAAO,CAAC,+BAA+B,EAAE,IAAI,WAAW,CAAC,EAAE;IAC9G,OAAO;QACN,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,aAAa,OAAO,CAAC,8BAA8B,EAAE,OAAO,KAAK,UAAU,CAAC,EAAE;IAChH;AACD;AAEA,IAAI,MAAM,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IACnC,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACpC,MAAM;QAAK,MAAM;IAClB;IAEA,IAAI;QACH;IACD,EAAE,OAAO,KAAK;QACb,IAAI,OAAO,QAAQ,YAAY;YAC9B,OAAO,CAAC,IAAI,MAAM,MAAM,OAAO,cAAc,OAAO,qDAAqD;QAC1G,OAAO,IAAI,eAAe,QAAQ;YACjC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,GAAG,MAAM,OAAO,cAAc,OAAO,CAAC,oDAAoD,EAAE,OAAO,KAAK,UAAU,CAAC,EAAE;QAClJ,OAAO,IAAI,CAAC,KAAK;YAChB,OAAO,OAAO,MAAM,OAAO,cAAc,OAAO,kCAAkC;QACnF;IACD;AACD;AAEA,QAAQ,SAAS,GAAG;AACpB,QAAQ,KAAK,GAAG;AAChB,QAAQ,OAAO,GAAG;AAClB,QAAQ,QAAQ,GAAG;AACnB,QAAQ,EAAE,GAAG;AACb,QAAQ,KAAK,GAAG;AAChB,QAAQ,GAAG,GAAG;AACd,QAAQ,EAAE,GAAG;AACb,QAAQ,QAAQ,GAAG;AACnB,QAAQ,MAAM,GAAG;AACjB,QAAQ,IAAI,GAAG;AACf,QAAQ,WAAW,GAAG"}},
    {"offset": {"line": 17206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17211, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/diff/index.mjs"],"sourcesContent":["import kleur from 'kleur';\nimport * as diff from 'diff';\n\nconst colors = {\n\t'--': kleur.red,\n\t'··': kleur.grey,\n\t'++': kleur.green,\n};\n\nconst TITLE = kleur.dim().italic;\nconst TAB=kleur.dim('→'), SPACE=kleur.dim('·'), NL=kleur.dim('↵');\nconst LOG = (sym, str) => colors[sym](sym + PRETTY(str)) + '\\n';\nconst LINE = (num, x) => kleur.dim('L' + String(num).padStart(x, '0') + ' ');\nconst PRETTY = str => str.replace(/[ ]/g, SPACE).replace(/\\t/g, TAB).replace(/(\\r?\\n)/g, NL);\n\nfunction line(obj, prev, pad) {\n\tlet char = obj.removed ? '--' : obj.added ? '++' : '··';\n\tlet arr = obj.value.replace(/\\r?\\n$/, '').split('\\n');\n\tlet i=0, tmp, out='';\n\n\tif (obj.added) out += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\telse if (obj.removed) out += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tif (tmp != null) {\n\t\t\tif (prev) out += LINE(prev + i, pad);\n\t\t\tout += LOG(char, tmp || '\\n');\n\t\t}\n\t}\n\n\treturn out;\n}\n\n// TODO: want better diffing\n//~> complex items bail outright\nexport function arrays(input, expect) {\n\tlet arr = diff.diffArrays(input, expect);\n\tlet i=0, j=0, k=0, tmp, val, char, isObj, str;\n\tlet out = LOG('··', '[');\n\n\tfor (; i < arr.length; i++) {\n\t\tchar = (tmp = arr[i]).removed ? '--' : tmp.added ? '++' : '··';\n\n\t\tif (tmp.added) {\n\t\t\tout += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\t\t} else if (tmp.removed) {\n\t\t\tout += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\t\t}\n\n\t\tfor (j=0; j < tmp.value.length; j++) {\n\t\t\tisObj = (tmp.value[j] && typeof tmp.value[j] === 'object');\n\t\t\tval = stringify(tmp.value[j]).split(/\\r?\\n/g);\n\t\t\tfor (k=0; k < val.length;) {\n\t\t\t\tstr = '  ' + val[k++] + (isObj ? '' : ',');\n\t\t\t\tif (isObj && k === val.length && (j + 1) < tmp.value.length) str += ',';\n\t\t\t\tout += LOG(char, str);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out + LOG('··', ']');\n}\n\nexport function lines(input, expect, linenum = 0) {\n\tlet i=0, tmp, output='';\n\tlet arr = diff.diffLines(input, expect);\n\tlet pad = String(expect.split(/\\r?\\n/g).length - linenum).length;\n\n\tfor (; i < arr.length; i++) {\n\t\toutput += line(tmp = arr[i], linenum, pad);\n\t\tif (linenum && !tmp.removed) linenum += tmp.count;\n\t}\n\n\treturn output;\n}\n\nexport function chars(input, expect) {\n\tlet arr = diff.diffChars(input, expect);\n\tlet i=0, output='', tmp;\n\n\tlet l1 = input.length;\n\tlet l2 = expect.length;\n\n\tlet p1 = PRETTY(input);\n\tlet p2 = PRETTY(expect);\n\n\ttmp = arr[i];\n\n\tif (l1 === l2) {\n\t\t// no length offsets\n\t} else if (tmp.removed && arr[i + 1]) {\n\t\tlet del = tmp.count - arr[i + 1].count;\n\t\tif (del == 0) {\n\t\t\t// wash~\n\t\t} else if (del > 0) {\n\t\t\texpect = ' '.repeat(del) + expect;\n\t\t\tp2 = ' '.repeat(del) + p2;\n\t\t\tl2 += del;\n\t\t} else if (del < 0) {\n\t\t\tinput = ' '.repeat(-del) + input;\n\t\t\tp1 = ' '.repeat(-del) + p1;\n\t\t\tl1 += -del;\n\t\t}\n\t}\n\n\toutput += direct(p1, p2, l1, l2);\n\n\tif (l1 === l2) {\n\t\tfor (tmp='  '; i < l1; i++) {\n\t\t\ttmp += input[i] === expect[i] ? ' ' : '^';\n\t\t}\n\t} else {\n\t\tfor (tmp='  '; i < arr.length; i++) {\n\t\t\ttmp += ((arr[i].added || arr[i].removed) ? '^' : ' ').repeat(Math.max(arr[i].count, 0));\n\t\t\tif (i + 1 < arr.length && ((arr[i].added && arr[i+1].removed) || (arr[i].removed && arr[i+1].added))) {\n\t\t\t\tarr[i + 1].count -= arr[i].count;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output + kleur.red(tmp);\n}\n\nexport function direct(input, expect, lenA = String(input).length, lenB = String(expect).length) {\n\tlet gutter = 4;\n\tlet lenC = Math.max(lenA, lenB);\n\tlet typeA=typeof input, typeB=typeof expect;\n\n\tif (typeA !== typeB) {\n\t\tgutter = 2;\n\n\t\tlet delA = gutter + lenC - lenA;\n\t\tlet delB = gutter + lenC - lenB;\n\n\t\tinput += ' '.repeat(delA) + kleur.dim(`[${typeA}]`);\n\t\texpect += ' '.repeat(delB) + kleur.dim(`[${typeB}]`);\n\n\t\tlenA += delA + typeA.length + 2;\n\t\tlenB += delB + typeB.length + 2;\n\t\tlenC = Math.max(lenA, lenB);\n\t}\n\n\tlet output = colors['++']('++' + expect + ' '.repeat(gutter + lenC - lenB) + TITLE('(Expected)')) + '\\n';\n\treturn output + colors['--']('--' + input + ' '.repeat(gutter + lenC - lenA) + TITLE('(Actual)')) + '\\n';\n}\n\nexport function sort(input, expect) {\n\tvar k, i=0, tmp, isArr = Array.isArray(input);\n\tvar keys=[], out=isArr ? Array(input.length) : {};\n\n\tif (isArr) {\n\t\tfor (i=0; i < out.length; i++) {\n\t\t\ttmp = input[i];\n\t\t\tif (!tmp || typeof tmp !== 'object') out[i] = tmp;\n\t\t\telse out[i] = sort(tmp, expect[i]); // might not be right\n\t\t}\n\t} else {\n\t\tfor (k in expect)\n\t\t\tkeys.push(k);\n\n\t\tfor (; i < keys.length; i++) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(input, k = keys[i])) {\n\t\t\t\tif (!(tmp = input[k]) || typeof tmp !== 'object') out[k] = tmp;\n\t\t\t\telse out[k] = sort(tmp, expect[k]);\n\t\t\t}\n\t\t}\n\n\t\tfor (k in input) {\n\t\t\tif (!out.hasOwnProperty(k)) {\n\t\t\t\tout[k] = input[k]; // expect didnt have\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\nexport function circular() {\n\tvar cache = new Set;\n\treturn function print(key, val) {\n\t\tif (val === void 0) return '[__VOID__]';\n\t\tif (typeof val === 'number' && val !== val) return '[__NAN__]';\n\t\tif (typeof val === 'bigint') return val.toString();\n\t\tif (!val || typeof val !== 'object') return val;\n\t\tif (cache.has(val)) return '[Circular]';\n\t\tcache.add(val); return val;\n\t}\n}\n\nexport function stringify(input) {\n\treturn JSON.stringify(input, circular(), 2).replace(/\"\\[__NAN__\\]\"/g, 'NaN').replace(/\"\\[__VOID__\\]\"/g, 'undefined');\n}\n\nexport function compare(input, expect) {\n\tif (Array.isArray(expect) && Array.isArray(input)) return arrays(input, expect);\n\tif (expect instanceof RegExp) return chars(''+input, ''+expect);\n\n\tlet isA = input && typeof input == 'object';\n\tlet isB = expect && typeof expect == 'object';\n\n\tif (isA && isB) input = sort(input, expect);\n\tif (isB) expect = stringify(expect);\n\tif (isA) input = stringify(input);\n\n\tif (expect && typeof expect == 'object') {\n\t\tinput = stringify(sort(input, expect));\n\t\texpect = stringify(expect);\n\t}\n\n\tisA = typeof input == 'string';\n\tisB = typeof expect == 'string';\n\n\tif (isA && /\\r?\\n/.test(input)) return lines(input, ''+expect);\n\tif (isB && /\\r?\\n/.test(expect)) return lines(''+input, expect);\n\tif (isA && isB) return chars(input, expect);\n\n\treturn direct(input, expect);\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 17399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17404, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs"],"sourcesContent":["import { dequal } from 'dequal';\nimport { compare, lines } from 'uvu/diff';\n\nfunction dedent(str) {\n\tstr = str.replace(/\\r?\\n/g, '\\n');\n  let arr = str.match(/^[ \\t]*(?=\\S)/gm);\n  let i = 0, min = 1/0, len = (arr||[]).length;\n  for (; i < len; i++) min = Math.min(min, arr[i].length);\n  return len && min ? str.replace(new RegExp(`^[ \\\\t]{${min}}`, 'gm'), '') : str;\n}\n\nexport class Assertion extends Error {\n\tconstructor(opts={}) {\n\t\tsuper(opts.message);\n\t\tthis.name = 'Assertion';\n\t\tthis.code = 'ERR_ASSERTION';\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\t}\n\t\tthis.details = opts.details || false;\n\t\tthis.generated = !!opts.generated;\n\t\tthis.operator = opts.operator;\n\t\tthis.expects = opts.expects;\n\t\tthis.actual = opts.actual;\n\t}\n}\n\nfunction assert(bool, actual, expects, operator, detailer, backup, msg) {\n\tif (bool) return;\n\tlet message = msg || backup;\n\tif (msg instanceof Error) throw msg;\n\tlet details = detailer && detailer(actual, expects);\n\tthrow new Assertion({ actual, expects, operator, message, details, generated: !msg });\n}\n\nexport function ok(val, msg) {\n\tassert(!!val, false, true, 'ok', false, 'Expected value to be truthy', msg);\n}\n\nexport function is(val, exp, msg) {\n\tassert(val === exp, val, exp, 'is', compare, 'Expected values to be strictly equal:', msg);\n}\n\nexport function equal(val, exp, msg) {\n\tassert(dequal(val, exp), val, exp, 'equal', compare, 'Expected values to be deeply equal:', msg);\n}\n\nexport function unreachable(msg) {\n\tassert(false, true, false, 'unreachable', false, 'Expected not to be reached!', msg);\n}\n\nexport function type(val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp === exp, tmp, exp, 'type', false, `Expected \"${tmp}\" to be \"${exp}\"`, msg);\n}\n\nexport function instance(val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(val instanceof exp, val, exp, 'instance', false, `Expected value to be an instance of ${name}`, msg);\n}\n\nexport function match(val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(val.includes(exp), val, exp, 'match', false, `Expected value to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(exp.test(val), val, exp, 'match', false, `Expected value to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nexport function snapshot(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'snapshot', lines, 'Expected value to match snapshot:', msg);\n}\n\nconst lineNums = (x, y) => lines(x, y, 1);\nexport function fixture(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'fixture', lineNums, 'Expected value to match fixture:', msg);\n}\n\nexport function throws(blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t\tassert(false, false, true, 'throws', false, 'Expected function to throw', msg);\n\t} catch (err) {\n\t\tif (err instanceof Assertion) throw err;\n\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(exp(err), false, true, 'throws', false, 'Expected function to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(exp.test(err.message), false, true, 'throws', false, `Expected function to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t}\n\t}\n}\n\n// ---\n\nexport function not(val, msg) {\n\tassert(!val, true, false, 'not', false, 'Expected value to be falsey', msg);\n}\n\nnot.ok = not;\n\nis.not = function (val, exp, msg) {\n\tassert(val !== exp, val, exp, 'is.not', false, 'Expected values not to be strictly equal', msg);\n}\n\nnot.equal = function (val, exp, msg) {\n\tassert(!dequal(val, exp), val, exp, 'not.equal', false, 'Expected values not to be deeply equal', msg);\n}\n\nnot.type = function (val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp !== exp, tmp, exp, 'not.type', false, `Expected \"${tmp}\" not to be \"${exp}\"`, msg);\n}\n\nnot.instance = function (val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(!(val instanceof exp), val, exp, 'not.instance', false, `Expected value not to be an instance of ${name}`, msg);\n}\n\nnot.snapshot = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.snapshot', false, 'Expected value not to match snapshot', msg);\n}\n\nnot.fixture = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.fixture', false, 'Expected value not to match fixture', msg);\n}\n\nnot.match = function (val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(!val.includes(exp), val, exp, 'not.match', false, `Expected value not to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(!exp.test(val), val, exp, 'not.match', false, `Expected value not to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nnot.throws = function (blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t} catch (err) {\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(!exp(err), true, false, 'not.throws', false, 'Expected function not to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(!exp.test(err.message), true, false, 'not.throws', false, `Expected function not to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t} else if (!exp) {\n\t\t\tassert(false, true, false, 'not.throws', false, 'Expected function not to throw', msg);\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 17566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17571, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-chunked@1.1.0/node_modules/micromark-util-chunked/dev/index.js"],"sourcesContent":["import {constants} from 'micromark-util-symbol/constants.js'\n\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < constants.v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(\n        chunkStart,\n        chunkStart + constants.v8MaxSafeChunkSize\n      )\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n\n      chunkStart += constants.v8MaxSafeChunkSize\n      start += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n"],"names":[],"mappings":";;;;;;;AAwBO,SAAS,OAAO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK;IAC/C,MAAM,MAAM,KAAK,MAAM;IACvB,IAAI,aAAa;IACjB,2BAA2B,GAC3B,IAAI;IAEJ,gDAAgD;IAChD,IAAI,QAAQ,GAAG;QACb,QAAQ,CAAC,QAAQ,MAAM,IAAI,MAAM;IACnC,OAAO;QACL,QAAQ,QAAQ,MAAM,MAAM;IAC9B;IAEA,SAAS,SAAS,IAAI,SAAS;IAE/B,mEAAmE;IACnE,IAAI,MAAM,MAAM,GAAG,uOAAU,kBAAkB,EAAE;QAC/C,aAAa,MAAM,IAAI,CAAC;QACxB,WAAW,OAAO,CAAC,OAAO;QAC1B,oCAAoC;QACpC,KAAK,MAAM,IAAI;IACjB,OAAO;QACL,8CAA8C;QAC9C,IAAI,QAAQ,KAAK,MAAM,CAAC,OAAO;QAE/B,2DAA2D;QAC3D,MAAO,aAAa,MAAM,MAAM,CAAE;YAChC,aAAa,MAAM,KAAK,CACtB,YACA,aAAa,uOAAU,kBAAkB;YAE3C,WAAW,OAAO,CAAC,OAAO;YAC1B,oCAAoC;YACpC,KAAK,MAAM,IAAI;YAEf,cAAc,uOAAU,kBAAkB;YAC1C,SAAS,uOAAU,kBAAkB;QACvC;IACF;AACF;AAkBO,SAAS,KAAK,IAAI,EAAE,KAAK;IAC9B,IAAI,KAAK,MAAM,GAAG,GAAG;QACnB,OAAO,MAAM,KAAK,MAAM,EAAE,GAAG;QAC7B,OAAO;IACT;IAEA,OAAO;AACT"}},
    {"offset": {"line": 17616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17621, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-chunked@2.0.0/node_modules/micromark-util-chunked/dev/index.js"],"sourcesContent":["import {constants} from 'micromark-util-symbol'\n\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < constants.v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(\n        chunkStart,\n        chunkStart + constants.v8MaxSafeChunkSize\n      )\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n\n      chunkStart += constants.v8MaxSafeChunkSize\n      start += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n"],"names":[],"mappings":";;;;;;;AAwBO,SAAS,OAAO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK;IAC/C,MAAM,MAAM,KAAK,MAAM;IACvB,IAAI,aAAa;IACjB,2BAA2B,GAC3B,IAAI;IAEJ,gDAAgD;IAChD,IAAI,QAAQ,GAAG;QACb,QAAQ,CAAC,QAAQ,MAAM,IAAI,MAAM;IACnC,OAAO;QACL,QAAQ,QAAQ,MAAM,MAAM;IAC9B;IAEA,SAAS,SAAS,IAAI,SAAS;IAE/B,mEAAmE;IACnE,IAAI,MAAM,MAAM,GAAG,4OAAU,kBAAkB,EAAE;QAC/C,aAAa,MAAM,IAAI,CAAC;QACxB,WAAW,OAAO,CAAC,OAAO;QAC1B,oCAAoC;QACpC,KAAK,MAAM,IAAI;IACjB,OAAO;QACL,8CAA8C;QAC9C,IAAI,QAAQ,KAAK,MAAM,CAAC,OAAO;QAE/B,2DAA2D;QAC3D,MAAO,aAAa,MAAM,MAAM,CAAE;YAChC,aAAa,MAAM,KAAK,CACtB,YACA,aAAa,4OAAU,kBAAkB;YAE3C,WAAW,OAAO,CAAC,OAAO;YAC1B,oCAAoC;YACpC,KAAK,MAAM,IAAI;YAEf,cAAc,4OAAU,kBAAkB;YAC1C,SAAS,4OAAU,kBAAkB;QACvC;IACF;AACF;AAkBO,SAAS,KAAK,IAAI,EAAE,KAAK;IAC9B,IAAI,KAAK,MAAM,GAAG,GAAG;QACnB,OAAO,MAAM,KAAK,MAAM,EAAE,GAAG;QAC7B,OAAO;IACT;IAEA,OAAO;AACT"}},
    {"offset": {"line": 17666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17671, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-subtokenize@1.1.0/node_modules/micromark-util-subtokenize/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === types.chunkFlow &&\n      events[index - 1][1].type === types.listItemPrefix\n    ) {\n      assert(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.lineEndingBlank\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.content\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === types.content) {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === types.chunkText) {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === types.lineEnding ||\n          otherEvent[1].type === types.lineEndingBlank\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = types.lineEndingBlank\n            }\n\n            otherEvent[1].type = types.lineEnding\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  assert(token.contentType, 'expected `contentType` on subtokens')\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    assert(\n      !previous || current.previous === previous,\n      'expected previous to match'\n    )\n    assert(!previous || previous.next === current, 'expected next to match')\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(codes.eof)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      assert(current, 'expected a current token')\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n    assert(!current.next, 'expected no next token')\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    assert(start !== undefined, 'expected a start position when splicing')\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 17862, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17867, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-subtokenize@2.0.0/node_modules/micromark-util-subtokenize/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {codes, types} from 'micromark-util-symbol'\nimport {ok as assert} from 'devlop'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === types.chunkFlow &&\n      events[index - 1][1].type === types.listItemPrefix\n    ) {\n      assert(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.lineEndingBlank\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.content\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === types.content) {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === types.chunkText) {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === types.lineEnding ||\n          otherEvent[1].type === types.lineEndingBlank\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = types.lineEndingBlank\n            }\n\n            otherEvent[1].type = types.lineEnding\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  assert(token.contentType, 'expected `contentType` on subtokens')\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    assert(\n      !previous || current.previous === previous,\n      'expected previous to match'\n    )\n    assert(!previous || previous.next === current, 'expected next to match')\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(codes.eof)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      assert(current, 'expected a current token')\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n    assert(!current.next, 'expected no next token')\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    assert(start !== undefined, 'expected a start position when splicing')\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 18056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18061, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-space@1.1.0/node_modules/micromark-factory-space/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;AAsCM,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG;IACjD,MAAM,QAAQ,MAAM,MAAM,IAAI,OAAO,iBAAiB;IACtD,IAAI,OAAO;IAEX,OAAO;IAEP,kBAAkB,GAClB,SAAS,MAAM,IAAI;QACjB,IAAI,oPAAc,OAAO;YACvB,QAAQ,KAAK,CAAC;YACd,OAAO,OAAO;QAChB;QAEA,OAAO,GAAG;IACZ;IAEA,kBAAkB,GAClB,SAAS,OAAO,IAAI;QAClB,IAAI,oPAAc,SAAS,SAAS,OAAO;YACzC,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,QAAQ,IAAI,CAAC;QACb,OAAO,GAAG;IACZ;AACF"}},
    {"offset": {"line": 18091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18096, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-space@2.0.0/node_modules/micromark-factory-space/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;AAsCM,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG;IACjD,MAAM,QAAQ,MAAM,MAAM,IAAI,OAAO,iBAAiB;IACtD,IAAI,OAAO;IAEX,OAAO;IAEP,kBAAkB,GAClB,SAAS,MAAM,IAAI;QACjB,IAAI,oPAAc,OAAO;YACvB,QAAQ,KAAK,CAAC;YACd,OAAO,OAAO;QAChB;QAEA,OAAO,GAAG;IACZ;IAEA,kBAAkB,GAClB,SAAS,OAAO,IAAI;QAClB,IAAI,oPAAc,SAAS,SAAS,OAAO;YACzC,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,QAAQ,IAAI,CAAC;QACb,OAAO,GAAG;IACZ;AACF"}},
    {"offset": {"line": 18126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18131, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-resolve-all@1.1.0/node_modules/micromark-util-resolve-all/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;CAWC;;;AACM,SAAS,WAAW,UAAU,EAAE,MAAM,EAAE,OAAO;IACpD,4BAA4B,GAC5B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,MAAM,UAAU,UAAU,CAAC,MAAM,CAAC,UAAU;QAE5C,IAAI,WAAW,CAAC,OAAO,QAAQ,CAAC,UAAU;YACxC,SAAS,QAAQ,QAAQ;YACzB,OAAO,IAAI,CAAC;QACd;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 18161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18166, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-resolve-all@2.0.0/node_modules/micromark-util-resolve-all/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;;;;;;;;;CAWC;;;AACM,SAAS,WAAW,UAAU,EAAE,MAAM,EAAE,OAAO;IACpD,4BAA4B,GAC5B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,MAAM,UAAU,UAAU,CAAC,MAAM,CAAC,UAAU;QAE5C,IAAI,WAAW,CAAC,OAAO,QAAQ,CAAC,UAAU;YACxC,SAAS,QAAQ,QAAQ;YACzB,OAAO,IAAI,CAAC;QACd;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 18196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18201, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-whitespace@1.1.0/node_modules/micromark-factory-whitespace/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? types.linePrefix : types.lineSuffix\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;AAwBM,SAAS,kBAAkB,OAAO,EAAE,EAAE;IAC3C,oBAAoB,GACpB,IAAI;IAEJ,OAAO;IAEP,kBAAkB,GAClB,SAAS,MAAM,IAAI;QACjB,IAAI,yPAAmB,OAAO;YAC5B,QAAQ,KAAK,CAAC,+NAAM,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,+NAAM,UAAU;YAC7B,OAAO;YACP,OAAO;QACT;QAEA,IAAI,oPAAc,OAAO;YACvB,OAAO,iPACL,SACA,OACA,OAAO,+NAAM,UAAU,GAAG,+NAAM,UAAU,EAC1C;QACJ;QAEA,OAAO,GAAG;IACZ;AACF"}},
    {"offset": {"line": 18231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18236, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-whitespace@2.0.0/node_modules/micromark-factory-whitespace/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol'\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? types.linePrefix : types.lineSuffix\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;AAwBM,SAAS,kBAAkB,OAAO,EAAE,EAAE;IAC3C,oBAAoB,GACpB,IAAI;IAEJ,OAAO;IAEP,kBAAkB,GAClB,SAAS,MAAM,IAAI;QACjB,IAAI,yPAAmB,OAAO;YAC5B,QAAQ,KAAK,CAAC,wOAAM,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,wOAAM,UAAU;YAC7B,OAAO;YACP,OAAO;QACT;QAEA,IAAI,oPAAc,OAAO;YACvB,OAAO,iPACL,SACA,OACA,OAAO,wOAAM,UAAU,GAAG,wOAAM,UAAU,EAC1C;QACJ;QAEA,OAAO,GAAG;IACZ;AACF"}},
    {"offset": {"line": 18266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18271, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-title@1.1.0/node_modules/micromark-factory-title/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === codes.leftParenthesis ? codes.rightParenthesis : code\n      return begin\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return factorySpace(effects, atBreak, types.linePrefix)\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === codes.backslash) {\n      effects.consume(code)\n      return inside\n    }\n\n    return inside(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;;;;;AAwCM,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU;IACzE,8BAA8B,GAC9B,IAAI;IAEJ,OAAO;IAEP;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,IACE,SAAS,+NAAM,aAAa,IAC5B,SAAS,+NAAM,UAAU,IACzB,SAAS,+NAAM,eAAe,EAC9B;YACA,QAAQ,KAAK,CAAC;YACd,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,SAAS,SAAS,+NAAM,eAAe,GAAG,+NAAM,gBAAgB,GAAG;YACnE,OAAO;QACT;QAEA,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;GAWC,GACD,SAAS,MAAM,IAAI;QACjB,IAAI,SAAS,QAAQ;YACnB,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,QAAQ,KAAK,CAAC;QACd,OAAO,QAAQ;IACjB;IAEA;;;;;;;;;GASC,GACD,SAAS,QAAQ,IAAI;QACnB,IAAI,SAAS,QAAQ;YACnB,QAAQ,IAAI,CAAC;YACb,OAAO,MAAM;QACf;QAEA,IAAI,SAAS,+NAAM,GAAG,EAAE;YACtB,OAAO,IAAI;QACb;QAEA,4CAA4C;QAC5C,IAAI,yPAAmB,OAAO;YAC5B,uDAAuD;YACvD,QAAQ,KAAK,CAAC,+NAAM,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,+NAAM,UAAU;YAC7B,OAAO,iPAAa,SAAS,SAAS,+NAAM,UAAU;QACxD;QAEA,QAAQ,KAAK,CAAC,+NAAM,WAAW,EAAE;YAAC,aAAa,uOAAU,iBAAiB;QAAA;QAC1E,OAAO,OAAO;IAChB;IAEA;;;;GAIC,GACD,SAAS,OAAO,IAAI;QAClB,IAAI,SAAS,UAAU,SAAS,+NAAM,GAAG,IAAI,yPAAmB,OAAO;YACrE,QAAQ,IAAI,CAAC,+NAAM,WAAW;YAC9B,OAAO,QAAQ;QACjB;QAEA,QAAQ,OAAO,CAAC;QAChB,OAAO,SAAS,+NAAM,SAAS,GAAG,SAAS;IAC7C;IAEA;;;;;;;;;GASC,GACD,SAAS,OAAO,IAAI;QAClB,IAAI,SAAS,UAAU,SAAS,+NAAM,SAAS,EAAE;YAC/C,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,OAAO,OAAO;IAChB;AACF"}},
    {"offset": {"line": 18394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18399, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-title@2.0.0/node_modules/micromark-factory-title/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === codes.leftParenthesis ? codes.rightParenthesis : code\n      return begin\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return factorySpace(effects, atBreak, types.linePrefix)\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === codes.backslash) {\n      effects.consume(code)\n      return inside\n    }\n\n    return inside(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;AAsCM,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU;IACzE,8BAA8B,GAC9B,IAAI;IAEJ,OAAO;IAEP;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,IACE,SAAS,wOAAM,aAAa,IAC5B,SAAS,wOAAM,UAAU,IACzB,SAAS,wOAAM,eAAe,EAC9B;YACA,QAAQ,KAAK,CAAC;YACd,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,SAAS,SAAS,wOAAM,eAAe,GAAG,wOAAM,gBAAgB,GAAG;YACnE,OAAO;QACT;QAEA,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;GAWC,GACD,SAAS,MAAM,IAAI;QACjB,IAAI,SAAS,QAAQ;YACnB,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,QAAQ,KAAK,CAAC;QACd,OAAO,QAAQ;IACjB;IAEA;;;;;;;;;GASC,GACD,SAAS,QAAQ,IAAI;QACnB,IAAI,SAAS,QAAQ;YACnB,QAAQ,IAAI,CAAC;YACb,OAAO,MAAM;QACf;QAEA,IAAI,SAAS,wOAAM,GAAG,EAAE;YACtB,OAAO,IAAI;QACb;QAEA,4CAA4C;QAC5C,IAAI,yPAAmB,OAAO;YAC5B,uDAAuD;YACvD,QAAQ,KAAK,CAAC,wOAAM,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,wOAAM,UAAU;YAC7B,OAAO,iPAAa,SAAS,SAAS,wOAAM,UAAU;QACxD;QAEA,QAAQ,KAAK,CAAC,wOAAM,WAAW,EAAE;YAAC,aAAa,4OAAU,iBAAiB;QAAA;QAC1E,OAAO,OAAO;IAChB;IAEA;;;;GAIC,GACD,SAAS,OAAO,IAAI;QAClB,IAAI,SAAS,UAAU,SAAS,wOAAM,GAAG,IAAI,yPAAmB,OAAO;YACrE,QAAQ,IAAI,CAAC,wOAAM,WAAW;YAC9B,OAAO,QAAQ;QACjB;QAEA,QAAQ,OAAO,CAAC;QAChB,OAAO,SAAS,wOAAM,SAAS,GAAG,SAAS;IAC7C;IAEA;;;;;;;;;GASC,GACD,SAAS,OAAO,IAAI;QAClB,IAAI,SAAS,UAAU,SAAS,wOAAM,SAAS,EAAE;YAC/C,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,OAAO,OAAO;IAChB;AACF"}},
    {"offset": {"line": 18518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18523, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-label@1.1.0/node_modules/micromark-factory-label/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > constants.linkReferenceSizeMax ||\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      (code === codes.rightSquareBracket && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === codes.caret &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return atBreak\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      code === codes.rightSquareBracket ||\n      markdownLineEnding(code) ||\n      size++ > constants.linkReferenceSizeMax\n    ) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;;;;;AAwCM,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU;IACzE,MAAM,OAAO,IAAI;IACjB,IAAI,OAAO;IACX,oBAAoB,GACpB,IAAI;IAEJ,OAAO;IAEP;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,uLAAO,SAAS,+NAAM,iBAAiB,EAAE;QACzC,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,OAAO,CAAC;QAChB,QAAQ,IAAI,CAAC;QACb,QAAQ,KAAK,CAAC;QACd,OAAO;IACT;IAEA;;;;;;;;;GASC,GACD,SAAS,QAAQ,IAAI;QACnB,IACE,OAAO,uOAAU,oBAAoB,IACrC,SAAS,+NAAM,GAAG,IAClB,SAAS,+NAAM,iBAAiB,IAC/B,SAAS,+NAAM,kBAAkB,IAAI,CAAC,QAMtC,SAAS,+NAAM,KAAK,IACnB,CAAC,QACD,4BAA4B,KAAK,MAAM,CAAC,UAAU,EACpD;YACA,OAAO,IAAI;QACb;QAEA,IAAI,SAAS,+NAAM,kBAAkB,EAAE;YACrC,QAAQ,IAAI,CAAC;YACb,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,gDAAgD;QAChD,IAAI,yPAAmB,OAAO;YAC5B,QAAQ,KAAK,CAAC,+NAAM,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,+NAAM,UAAU;YAC7B,OAAO;QACT;QAEA,QAAQ,KAAK,CAAC,+NAAM,WAAW,EAAE;YAAC,aAAa,uOAAU,iBAAiB;QAAA;QAC1E,OAAO,YAAY;IACrB;IAEA;;;;;;;;;GASC,GACD,SAAS,YAAY,IAAI;QACvB,IACE,SAAS,+NAAM,GAAG,IAClB,SAAS,+NAAM,iBAAiB,IAChC,SAAS,+NAAM,kBAAkB,IACjC,yPAAmB,SACnB,SAAS,uOAAU,oBAAoB,EACvC;YACA,QAAQ,IAAI,CAAC,+NAAM,WAAW;YAC9B,OAAO,QAAQ;QACjB;QAEA,QAAQ,OAAO,CAAC;QAChB,IAAI,CAAC,MAAM,OAAO,CAAC,oPAAc;QACjC,OAAO,SAAS,+NAAM,SAAS,GAAG,cAAc;IAClD;IAEA;;;;;;;;;GASC,GACD,SAAS,YAAY,IAAI;QACvB,IACE,SAAS,+NAAM,iBAAiB,IAChC,SAAS,+NAAM,SAAS,IACxB,SAAS,+NAAM,kBAAkB,EACjC;YACA,QAAQ,OAAO,CAAC;YAChB;YACA,OAAO;QACT;QAEA,OAAO,YAAY;IACrB;AACF"}},
    {"offset": {"line": 18634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18639, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-label@2.0.0/node_modules/micromark-factory-label/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {ok as assert} from 'devlop'\n\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > constants.linkReferenceSizeMax ||\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      (code === codes.rightSquareBracket && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === codes.caret &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return atBreak\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      code === codes.rightSquareBracket ||\n      markdownLineEnding(code) ||\n      size++ > constants.linkReferenceSizeMax\n    ) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;AAsCM,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU;IACzE,MAAM,OAAO,IAAI;IACjB,IAAI,OAAO;IACX,oBAAoB,GACpB,IAAI;IAEJ,OAAO;IAEP;;;;;;;;;GASC,GACD,SAAS,MAAM,IAAI;QACjB,+LAAO,SAAS,wOAAM,iBAAiB,EAAE;QACzC,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,OAAO,CAAC;QAChB,QAAQ,IAAI,CAAC;QACb,QAAQ,KAAK,CAAC;QACd,OAAO;IACT;IAEA;;;;;;;;;GASC,GACD,SAAS,QAAQ,IAAI;QACnB,IACE,OAAO,4OAAU,oBAAoB,IACrC,SAAS,wOAAM,GAAG,IAClB,SAAS,wOAAM,iBAAiB,IAC/B,SAAS,wOAAM,kBAAkB,IAAI,CAAC,QAMtC,SAAS,wOAAM,KAAK,IACnB,CAAC,QACD,4BAA4B,KAAK,MAAM,CAAC,UAAU,EACpD;YACA,OAAO,IAAI;QACb;QAEA,IAAI,SAAS,wOAAM,kBAAkB,EAAE;YACrC,QAAQ,IAAI,CAAC;YACb,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,gDAAgD;QAChD,IAAI,yPAAmB,OAAO;YAC5B,QAAQ,KAAK,CAAC,wOAAM,UAAU;YAC9B,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC,wOAAM,UAAU;YAC7B,OAAO;QACT;QAEA,QAAQ,KAAK,CAAC,wOAAM,WAAW,EAAE;YAAC,aAAa,4OAAU,iBAAiB;QAAA;QAC1E,OAAO,YAAY;IACrB;IAEA;;;;;;;;;GASC,GACD,SAAS,YAAY,IAAI;QACvB,IACE,SAAS,wOAAM,GAAG,IAClB,SAAS,wOAAM,iBAAiB,IAChC,SAAS,wOAAM,kBAAkB,IACjC,yPAAmB,SACnB,SAAS,4OAAU,oBAAoB,EACvC;YACA,QAAQ,IAAI,CAAC,wOAAM,WAAW;YAC9B,OAAO,QAAQ;QACjB;QAEA,QAAQ,OAAO,CAAC;QAChB,IAAI,CAAC,MAAM,OAAO,CAAC,oPAAc;QACjC,OAAO,SAAS,wOAAM,SAAS,GAAG,cAAc;IAClD;IAEA;;;;;;;;;GASC,GACD,SAAS,YAAY,IAAI;QACvB,IACE,SAAS,wOAAM,iBAAiB,IAChC,SAAS,wOAAM,SAAS,IACxB,SAAS,wOAAM,kBAAkB,EACjC;YACA,QAAQ,OAAO,CAAC;YAChB;YACA,OAAO;QACT;QAEA,OAAO,YAAY;IACrB;AACF"}},
    {"offset": {"line": 18746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18751, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-destination@1.1.0/node_modules/micromark-factory-destination/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return enclosed\n    }\n\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === codes.eof ||\n        code === codes.rightParenthesis ||\n        markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (balance < limit && code === codes.leftParenthesis) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n\n    if (code === codes.rightParenthesis) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.leftParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return raw\n    }\n\n    return raw(code)\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 18917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18922, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-destination@2.0.0/node_modules/micromark-factory-destination/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return enclosed\n    }\n\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === codes.eof ||\n        code === codes.rightParenthesis ||\n        markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (balance < limit && code === codes.leftParenthesis) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n\n    if (code === codes.rightParenthesis) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.leftParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return raw\n    }\n\n    return raw(code)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;AA+CM,SAAS,mBACd,OAAO,EACP,EAAE,EACF,GAAG,EACH,IAAI,EACJ,WAAW,EACX,iBAAiB,EACjB,OAAO,EACP,UAAU,EACV,GAAG;IAEH,MAAM,QAAQ,OAAO,OAAO,iBAAiB;IAC7C,IAAI,UAAU;IAEd,OAAO;IAEP;;;;;;;;;;;GAWC,GACD,SAAS,MAAM,IAAI;QACjB,IAAI,SAAS,wOAAM,QAAQ,EAAE;YAC3B,QAAQ,KAAK,CAAC;YACd,QAAQ,KAAK,CAAC;YACd,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,uCAAuC;QACvC,IACE,SAAS,wOAAM,GAAG,IAClB,SAAS,wOAAM,KAAK,IACpB,SAAS,wOAAM,gBAAgB,IAC/B,mPAAa,OACb;YACA,OAAO,IAAI;QACb;QAEA,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC,wOAAM,WAAW,EAAE;YAAC,aAAa,4OAAU,iBAAiB;QAAA;QAC1E,OAAO,IAAI;IACb;IAEA;;;;;;;;;GASC,GACD,SAAS,eAAe,IAAI;QAC1B,IAAI,SAAS,wOAAM,WAAW,EAAE;YAC9B,QAAQ,KAAK,CAAC;YACd,QAAQ,OAAO,CAAC;YAChB,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO;QACT;QAEA,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC,wOAAM,WAAW,EAAE;YAAC,aAAa,4OAAU,iBAAiB;QAAA;QAC1E,OAAO,SAAS;IAClB;IAEA;;;;;;;;;GASC,GACD,SAAS,SAAS,IAAI;QACpB,IAAI,SAAS,wOAAM,WAAW,EAAE;YAC9B,QAAQ,IAAI,CAAC,wOAAM,WAAW;YAC9B,QAAQ,IAAI,CAAC;YACb,OAAO,eAAe;QACxB;QAEA,IACE,SAAS,wOAAM,GAAG,IAClB,SAAS,wOAAM,QAAQ,IACvB,yPAAmB,OACnB;YACA,OAAO,IAAI;QACb;QAEA,QAAQ,OAAO,CAAC;QAChB,OAAO,SAAS,wOAAM,SAAS,GAAG,iBAAiB;IACrD;IAEA;;;;;;;;;GASC,GACD,SAAS,eAAe,IAAI;QAC1B,IACE,SAAS,wOAAM,QAAQ,IACvB,SAAS,wOAAM,WAAW,IAC1B,SAAS,wOAAM,SAAS,EACxB;YACA,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,OAAO,SAAS;IAClB;IAEA;;;;;;;;;GASC,GACD,SAAS,IAAI,IAAI;QACf,IACE,CAAC,WACD,CAAC,SAAS,wOAAM,GAAG,IACjB,SAAS,wOAAM,gBAAgB,IAC/B,gQAA0B,KAAK,GACjC;YACA,QAAQ,IAAI,CAAC,wOAAM,WAAW;YAC9B,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,QAAQ,IAAI,CAAC;YACb,OAAO,GAAG;QACZ;QAEA,IAAI,UAAU,SAAS,SAAS,wOAAM,eAAe,EAAE;YACrD,QAAQ,OAAO,CAAC;YAChB;YACA,OAAO;QACT;QAEA,IAAI,SAAS,wOAAM,gBAAgB,EAAE;YACnC,QAAQ,OAAO,CAAC;YAChB;YACA,OAAO;QACT;QAEA,oDAAoD;QACpD,qEAAqE;QACrE,WAAW;QACX,IACE,SAAS,wOAAM,GAAG,IAClB,SAAS,wOAAM,KAAK,IACpB,SAAS,wOAAM,eAAe,IAC9B,mPAAa,OACb;YACA,OAAO,IAAI;QACb;QAEA,QAAQ,OAAO,CAAC;QAChB,OAAO,SAAS,wOAAM,SAAS,GAAG,YAAY;IAChD;IAEA;;;;;;;;;GASC,GACD,SAAS,UAAU,IAAI;QACrB,IACE,SAAS,wOAAM,eAAe,IAC9B,SAAS,wOAAM,gBAAgB,IAC/B,SAAS,wOAAM,SAAS,EACxB;YACA,QAAQ,OAAO,CAAC;YAChB,OAAO;QACT;QAEA,OAAO,IAAI;IACb;AACF"}},
    {"offset": {"line": 19084, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19089, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-html-tag-name@1.2.0/node_modules/micromark-util-html-tag-name/index.js"],"sourcesContent":["/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;;AACM,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAcM,MAAM,eAAe;IAAC;IAAO;IAAU;IAAS;CAAW"}},
    {"offset": {"line": 19177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19182, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-html-tag-name@2.0.0/node_modules/micromark-util-html-tag-name/index.js"],"sourcesContent":["/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;;AACM,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAcM,MAAM,eAAe;IAAC;IAAO;IAAU;IAAS;CAAW"}},
    {"offset": {"line": 19270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19275, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-classify-character@1.1.0/node_modules/micromark-util-classify-character/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === codes.eof ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return constants.characterGroupWhitespace\n  }\n\n  if (unicodePunctuation(code)) {\n    return constants.characterGroupPunctuation\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;AAwBM,SAAS,kBAAkB,IAAI;IACpC,IACE,SAAS,+NAAM,GAAG,IAClB,gQAA0B,SAC1B,wPAAkB,OAClB;QACA,OAAO,uOAAU,wBAAwB;IAC3C;IAEA,IAAI,yPAAmB,OAAO;QAC5B,OAAO,uOAAU,yBAAyB;IAC5C;AACF"}},
    {"offset": {"line": 19295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19300, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-classify-character@2.0.0/node_modules/micromark-util-classify-character/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes, constants} from 'micromark-util-symbol'\n\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === codes.eof ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return constants.characterGroupWhitespace\n  }\n\n  if (unicodePunctuation(code)) {\n    return constants.characterGroupPunctuation\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;AAuBM,SAAS,kBAAkB,IAAI;IACpC,IACE,SAAS,wOAAM,GAAG,IAClB,gQAA0B,SAC1B,wPAAkB,OAClB;QACA,OAAO,4OAAU,wBAAwB;IAC3C;IAEA,IAAI,yPAAmB,OAAO;QAC5B,OAAO,4OAAU,yBAAyB;IAC5C;AACF"}},
    {"offset": {"line": 19318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19323, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-combine-extensions@1.1.0/node_modules/micromark-util-combine-extensions/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;AAID,MAAM,iBAAiB,CAAC,EAAE,cAAc;AAUjC,SAAS,kBAAkB,UAAU;IAC1C,gCAAgC,GAChC,MAAM,MAAM,CAAC;IACb,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,gBAAgB,KAAK,UAAU,CAAC,MAAM;IACxC;IAEA,OAAO;AACT;AAEA;;;;;;;;CAQC,GACD,SAAS,gBAAgB,GAAG,EAAE,SAAS;IACrC,4BAA4B,GAC5B,IAAI;IAEJ,IAAK,QAAQ,UAAW;QACtB,MAAM,QAAQ,eAAe,IAAI,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,GAAG;QAC3D,oCAAoC,GACpC,MAAM,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,gDAAgD,GAChD,MAAM,QAAQ,SAAS,CAAC,KAAK;QAC7B,mBAAmB,GACnB,IAAI;QAEJ,IAAI,OAAO;YACT,IAAK,QAAQ,MAAO;gBAClB,IAAI,CAAC,eAAe,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,KAAK,GAAG,EAAE;gBACrD,MAAM,QAAQ,KAAK,CAAC,KAAK;gBACzB,WACE,sCAAsC;gBACtC,IAAI,CAAC,KAAK,EACV,MAAM,OAAO,CAAC,SAAS,QAAQ,QAAQ;oBAAC;iBAAM,GAAG,EAAE;YAEvD;QACF;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,WAAW,QAAQ,EAAE,IAAI;IAChC,IAAI,QAAQ,CAAC;IACb,2BAA2B,GAC3B,MAAM,SAAS,EAAE;IAEjB,MAAO,EAAE,QAAQ,KAAK,MAAM,CAAE;QAC5B,yCAAyC;;QACxC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,UAAU,WAAW,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;IACrE;IAEA,yOAAO,UAAU,GAAG,GAAG;AACzB;AAUO,SAAS,sBAAsB,cAAc;IAClD,0BAA0B,GAC1B,MAAM,WAAW,CAAC;IAClB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,eAAe,MAAM,CAAE;QACtC,cAAc,UAAU,cAAc,CAAC,MAAM;IAC/C;IAEA,OAAO;AACT;AAEA;;;;;;;;CAQC,GACD,SAAS,cAAc,GAAG,EAAE,SAAS;IACnC,gCAAgC,GAChC,IAAI;IAEJ,IAAK,QAAQ,UAAW;QACtB,MAAM,QAAQ,eAAe,IAAI,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,GAAG;QAC3D,MAAM,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,MAAM,QAAQ,SAAS,CAAC,KAAK;QAC7B,0BAA0B,GAC1B,IAAI;QAEJ,IAAI,OAAO;YACT,IAAK,QAAQ,MAAO;gBAClB,6EAA6E;gBAC7E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;YAC1B;QACF;IACF;AACF"}},
    {"offset": {"line": 19419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19424, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-combine-extensions@2.0.0/node_modules/micromark-util-combine-extensions/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;AAID,MAAM,iBAAiB,CAAC,EAAE,cAAc;AAUjC,SAAS,kBAAkB,UAAU;IAC1C,gCAAgC,GAChC,MAAM,MAAM,CAAC;IACb,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,WAAW,MAAM,CAAE;QAClC,gBAAgB,KAAK,UAAU,CAAC,MAAM;IACxC;IAEA,OAAO;AACT;AAEA;;;;;;;;CAQC,GACD,SAAS,gBAAgB,GAAG,EAAE,SAAS;IACrC,4BAA4B,GAC5B,IAAI;IAEJ,IAAK,QAAQ,UAAW;QACtB,MAAM,QAAQ,eAAe,IAAI,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,GAAG;QAC3D,oCAAoC,GACpC,MAAM,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,gDAAgD,GAChD,MAAM,QAAQ,SAAS,CAAC,KAAK;QAC7B,mBAAmB,GACnB,IAAI;QAEJ,IAAI,OAAO;YACT,IAAK,QAAQ,MAAO;gBAClB,IAAI,CAAC,eAAe,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,KAAK,GAAG,EAAE;gBACrD,MAAM,QAAQ,KAAK,CAAC,KAAK;gBACzB,WACE,sCAAsC;gBACtC,IAAI,CAAC,KAAK,EACV,MAAM,OAAO,CAAC,SAAS,QAAQ,QAAQ;oBAAC;iBAAM,GAAG,EAAE;YAEvD;QACF;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,WAAW,QAAQ,EAAE,IAAI;IAChC,IAAI,QAAQ,CAAC;IACb,2BAA2B,GAC3B,MAAM,SAAS,EAAE;IAEjB,MAAO,EAAE,QAAQ,KAAK,MAAM,CAAE;QAC5B,yCAAyC;;QACxC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,UAAU,WAAW,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;IACrE;IAEA,yOAAO,UAAU,GAAG,GAAG;AACzB;AAUO,SAAS,sBAAsB,cAAc;IAClD,0BAA0B,GAC1B,MAAM,WAAW,CAAC;IAClB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,eAAe,MAAM,CAAE;QACtC,cAAc,UAAU,cAAc,CAAC,MAAM;IAC/C;IAEA,OAAO;AACT;AAEA;;;;;;;;CAQC,GACD,SAAS,cAAc,GAAG,EAAE,SAAS;IACnC,gCAAgC,GAChC,IAAI;IAEJ,IAAK,QAAQ,UAAW;QACtB,MAAM,QAAQ,eAAe,IAAI,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,GAAG;QAC3D,MAAM,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,MAAM,QAAQ,SAAS,CAAC,KAAK;QAC7B,0BAA0B,GAC1B,IAAI;QAEJ,IAAI,OAAO;YACT,IAAK,QAAQ,MAAO;gBAClB,6EAA6E;gBAC7E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;YAC1B;QACF;IACF;AACF"}},
    {"offset": {"line": 19520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19524, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js"],"sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,IAAI,IAAI;AACR,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,IAAI;AAEZ;;;;;;;;;;;;CAYC,GAED,OAAO,OAAO,GAAG,SAAS,GAAG,EAAE,OAAO;IACpC,UAAU,WAAW,CAAC;IACtB,IAAI,OAAO,OAAO;IAClB,IAAI,SAAS,YAAY,IAAI,MAAM,GAAG,GAAG;QACvC,OAAO,MAAM;IACf,OAAO,IAAI,SAAS,YAAY,SAAS,MAAM;QAC7C,OAAO,QAAQ,IAAI,GAAG,QAAQ,OAAO,SAAS;IAChD;IACA,MAAM,IAAI,MACR,0DACE,KAAK,SAAS,CAAC;AAErB;AAEA;;;;;;CAMC,GAED,SAAS,MAAM,GAAG;IAChB,MAAM,OAAO;IACb,IAAI,IAAI,MAAM,GAAG,KAAK;QACpB;IACF;IACA,IAAI,QAAQ,mIAAmI,IAAI,CACjJ;IAEF,IAAI,CAAC,OAAO;QACV;IACF;IACA,IAAI,IAAI,WAAW,KAAK,CAAC,EAAE;IAC3B,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE,WAAW;IACzC,OAAQ;QACN,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI;QACb,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEA;;;;;;CAMC,GAED,SAAS,SAAS,EAAE;IAClB,IAAI,QAAQ,KAAK,GAAG,CAAC;IACrB,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B;IACA,OAAO,KAAK;AACd;AAEA;;;;;;CAMC,GAED,SAAS,QAAQ,EAAE;IACjB,IAAI,QAAQ,KAAK,GAAG,CAAC;IACrB,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,IAAI,SAAS,GAAG;QACd,OAAO,OAAO,IAAI,OAAO,GAAG;IAC9B;IACA,OAAO,KAAK;AACd;AAEA;;CAEC,GAED,SAAS,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI;IAChC,IAAI,WAAW,SAAS,IAAI;IAC5B,OAAO,KAAK,KAAK,CAAC,KAAK,KAAK,MAAM,OAAO,CAAC,WAAW,MAAM,EAAE;AAC/D"}},
    {"offset": {"line": 19664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19668, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js"],"sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 19885, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19889, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js"],"sourcesContent":["/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n"],"names":[],"mappings":"AAAA,sBAAsB,GAEtB;;CAEC,GAED,QAAQ,UAAU,GAAG;AACrB,QAAQ,IAAI,GAAG;AACf,QAAQ,IAAI,GAAG;AACf,QAAQ,SAAS,GAAG;AACpB,QAAQ,OAAO,GAAG;AAClB,QAAQ,OAAO,GAAG,AAAC,CAAA;IAClB,IAAI,SAAS;IAEb,OAAO;QACN,IAAI,CAAC,QAAQ;YACZ,SAAS;YACT,QAAQ,IAAI,CAAC;QACd;IACD;AACD,CAAA;AAEA;;CAEC,GAED,QAAQ,MAAM,GAAG;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAED;;;;;;CAMC,GAED,sCAAsC;AACtC,SAAS;IACR,4EAA4E;IAC5E,0EAA0E;IAC1E,aAAa;IACb,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,IAAI,KAAK,cAAc,OAAO,OAAO,CAAC,MAAM,GAAG;QACrH,OAAO;IACR;IAEA,oDAAoD;IACpD,IAAI,OAAO,cAAc,eAAe,UAAU,SAAS,IAAI,UAAU,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC,0BAA0B;QAChI,OAAO;IACR;IAEA,wDAAwD;IACxD,4FAA4F;IAC5F,OAAO,AAAC,OAAO,aAAa,eAAe,SAAS,eAAe,IAAI,SAAS,eAAe,CAAC,KAAK,IAAI,SAAS,eAAe,CAAC,KAAK,CAAC,gBAAgB,IAEtJ,OAAO,WAAW,eAAe,OAAO,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,OAAO,IAAK,OAAO,OAAO,CAAC,SAAS,IAAI,OAAO,OAAO,CAAC,KAAK,AAAC,KAGhI,OAAO,cAAc,eAAe,UAAU,SAAS,IAAI,UAAU,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC,qBAAqB,SAAS,OAAO,EAAE,EAAE,OAAO,MAEnJ,OAAO,cAAc,eAAe,UAAU,SAAS,IAAI,UAAU,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;AACtG;AAEA;;;;CAIC,GAED,SAAS,WAAW,IAAI;IACvB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,EAAE,IACpC,IAAI,CAAC,SAAS,GACd,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,IAC7B,IAAI,CAAC,EAAE,GACP,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,IAC7B,MAAM,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;IAExC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QACpB;IACD;IAEA,MAAM,IAAI,YAAY,IAAI,CAAC,KAAK;IAChC,KAAK,MAAM,CAAC,GAAG,GAAG,GAAG;IAErB,kEAAkE;IAClE,gEAAgE;IAChE,sDAAsD;IACtD,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,eAAe,CAAA;QAC9B,IAAI,UAAU,MAAM;YACnB;QACD;QACA;QACA,IAAI,UAAU,MAAM;YACnB,0CAA0C;YAC1C,yCAAyC;YACzC,QAAQ;QACT;IACD;IAEA,KAAK,MAAM,CAAC,OAAO,GAAG;AACvB;AAEA;;;;;;;CAOC,GACD,QAAQ,GAAG,GAAG,QAAQ,KAAK,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAO,CAAC;AAEvD;;;;;CAKC,GACD,SAAS,KAAK,UAAU;IACvB,IAAI;QACH,IAAI,YAAY;YACf,QAAQ,OAAO,CAAC,OAAO,CAAC,SAAS;QAClC,OAAO;YACN,QAAQ,OAAO,CAAC,UAAU,CAAC;QAC5B;IACD,EAAE,OAAO,OAAO;IACf,UAAU;IACV,0CAA0C;IAC3C;AACD;AAEA;;;;;CAKC,GACD,SAAS;IACR,IAAI;IACJ,IAAI;QACH,IAAI,QAAQ,OAAO,CAAC,OAAO,CAAC;IAC7B,EAAE,OAAO,OAAO;IACf,UAAU;IACV,0CAA0C;IAC3C;IAEA,sEAAsE;IACtE,IAAI,CAAC,KAAK,OAAO,YAAY,eAAe,SAAS,SAAS;QAC7D,IAAI,QAAQ,GAAG,CAAC,KAAK;IACtB;IAEA,OAAO;AACR;AAEA;;;;;;;;;CASC,GAED,SAAS;IACR,IAAI;QACH,uGAAuG;QACvG,2DAA2D;QAC3D,OAAO;IACR,EAAE,OAAO,OAAO;IACf,UAAU;IACV,0CAA0C;IAC3C;AACD;AAEA,OAAO,OAAO,GAAG,sHAAoB;AAErC,MAAM,EAAC,UAAU,EAAC,GAAG,OAAO,OAAO;AAEnC;;CAEC,GAED,WAAW,CAAC,GAAG,SAAU,CAAC;IACzB,IAAI;QACH,OAAO,KAAK,SAAS,CAAC;IACvB,EAAE,OAAO,OAAO;QACf,OAAO,iCAAiC,MAAM,OAAO;IACtD;AACD"}},
    {"offset": {"line": 20110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20114, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/node.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 20329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20333, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js"],"sourcesContent":["/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n"],"names":[],"mappings":"AAAA;;;CAGC,GAED,IAAI,OAAO,YAAY,eAAe,QAAQ,IAAI,KAAK,cAAc,4CAAoB,QAAQ,QAAQ,MAAM,EAAE;IAChH,OAAO,OAAO,GAAG;AAClB,OAAO;IACN,OAAO,OAAO,GAAG;AAClB"}},
    {"offset": {"line": 20341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20345, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n"],"names":[],"mappings":"AAAA;AAEA,OAAO,OAAO,GAAG,CAAC,MAAM,OAAO,QAAQ,IAAI;IAC1C,MAAM,SAAS,KAAK,UAAU,CAAC,OAAO,KAAM,KAAK,MAAM,KAAK,IAAI,MAAM;IACtE,MAAM,WAAW,KAAK,OAAO,CAAC,SAAS;IACvC,MAAM,qBAAqB,KAAK,OAAO,CAAC;IACxC,OAAO,aAAa,CAAC,KAAK,CAAC,uBAAuB,CAAC,KAAK,WAAW,kBAAkB;AACtF"}},
    {"offset": {"line": 20352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20356, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js"],"sourcesContent":["'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n"],"names":[],"mappings":"AAAA;AACA,MAAM,KAAK,+BAAQ;AACnB,MAAM,MAAM,+BAAQ;AACpB,MAAM,UAAU;AAEhB,MAAM,EAAC,GAAG,EAAC,GAAG;AAEd,IAAI;AACJ,IAAI,QAAQ,eACX,QAAQ,gBACR,QAAQ,kBACR,QAAQ,gBAAgB;IACxB,aAAa;AACd,OAAO,IAAI,QAAQ,YAClB,QAAQ,aACR,QAAQ,iBACR,QAAQ,iBAAiB;IACzB,aAAa;AACd;AAEA,IAAI,iBAAiB,KAAK;IACzB,IAAI,IAAI,WAAW,KAAK,QAAQ;QAC/B,aAAa;IACd,OAAO,IAAI,IAAI,WAAW,KAAK,SAAS;QACvC,aAAa;IACd,OAAO;QACN,aAAa,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,SAAS,IAAI,WAAW,EAAE,KAAK;IACzF;AACD;AAEA,SAAS,eAAe,KAAK;IAC5B,IAAI,UAAU,GAAG;QAChB,OAAO;IACR;IAEA,OAAO;QACN;QACA,UAAU;QACV,QAAQ,SAAS;QACjB,QAAQ,SAAS;IAClB;AACD;AAEA,SAAS,cAAc,UAAU,EAAE,WAAW;IAC7C,IAAI,eAAe,GAAG;QACrB,OAAO;IACR;IAEA,IAAI,QAAQ,gBACX,QAAQ,iBACR,QAAQ,oBAAoB;QAC5B,OAAO;IACR;IAEA,IAAI,QAAQ,cAAc;QACzB,OAAO;IACR;IAEA,IAAI,cAAc,CAAC,eAAe,eAAe,WAAW;QAC3D,OAAO;IACR;IAEA,MAAM,MAAM,cAAc;IAE1B,IAAI,IAAI,IAAI,KAAK,QAAQ;QACxB,OAAO;IACR;IAEA;;;IAcA,IAAI,QAAQ,KAAK;QAChB,IAAI;YAAC;YAAU;YAAY;YAAY;YAAa;YAAkB;SAAY,CAAC,IAAI,CAAC,CAAA,OAAQ,QAAQ,QAAQ,IAAI,OAAO,KAAK,YAAY;YAC3I,OAAO;QACR;QAEA,OAAO;IACR;IAEA,IAAI,sBAAsB,KAAK;QAC9B,OAAO,gCAAgC,IAAI,CAAC,IAAI,gBAAgB,IAAI,IAAI;IACzE;IAEA,IAAI,IAAI,SAAS,KAAK,aAAa;QAClC,OAAO;IACR;IAEA,IAAI,kBAAkB,KAAK;QAC1B,MAAM,UAAU,SAAS,CAAC,IAAI,oBAAoB,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE;QAEzE,OAAQ,IAAI,YAAY;YACvB,KAAK;gBACJ,OAAO,WAAW,IAAI,IAAI;YAC3B,KAAK;gBACJ,OAAO;QAET;IACD;IAEA,IAAI,iBAAiB,IAAI,CAAC,IAAI,IAAI,GAAG;QACpC,OAAO;IACR;IAEA,IAAI,8DAA8D,IAAI,CAAC,IAAI,IAAI,GAAG;QACjF,OAAO;IACR;IAEA,IAAI,eAAe,KAAK;QACvB,OAAO;IACR;IAEA,OAAO;AACR;AAEA,SAAS,gBAAgB,MAAM;IAC9B,MAAM,QAAQ,cAAc,QAAQ,UAAU,OAAO,KAAK;IAC1D,OAAO,eAAe;AACvB;AAEA,OAAO,OAAO,GAAG;IAChB,eAAe;IACf,QAAQ,eAAe,cAAc,MAAM,IAAI,MAAM,CAAC;IACtD,QAAQ,eAAe,cAAc,MAAM,IAAI,MAAM,CAAC;AACvD"}},
    {"offset": {"line": 20455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20460, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-to-string@3.2.0/node_modules/mdast-util-to-string/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC,GAED,oBAAoB;;;AACpB,MAAM,eAAe,CAAC;AAef,SAAS,SAAS,KAAK,EAAE,OAAO;IACrC,MAAM,WAAW,WAAW;IAC5B,MAAM,kBACJ,OAAO,SAAS,eAAe,KAAK,YAChC,SAAS,eAAe,GACxB;IACN,MAAM,cACJ,OAAO,SAAS,WAAW,KAAK,YAAY,SAAS,WAAW,GAAG;IAErE,OAAO,IAAI,OAAO,iBAAiB;AACrC;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,IAAI,KAAK,EAAE,eAAe,EAAE,WAAW;IAC9C,IAAI,KAAK,QAAQ;QACf,IAAI,WAAW,OAAO;YACpB,OAAO,MAAM,IAAI,KAAK,UAAU,CAAC,cAAc,KAAK,MAAM,KAAK;QACjE;QAEA,IAAI,mBAAmB,SAAS,SAAS,MAAM,GAAG,EAAE;YAClD,OAAO,MAAM,GAAG;QAClB;QAEA,IAAI,cAAc,OAAO;YACvB,OAAO,IAAI,MAAM,QAAQ,EAAE,iBAAiB;QAC9C;IACF;IAEA,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO,IAAI,OAAO,iBAAiB;IACrC;IAEA,OAAO;AACT;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,IAAI,MAAM,EAAE,eAAe,EAAE,WAAW;IAC/C,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,iBAAiB;IACtD;IAEA,OAAO,OAAO,IAAI,CAAC;AACrB;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,KAAK;IACjB,OAAO,QAAQ,SAAS,OAAO,UAAU;AAC3C"}},
    {"offset": {"line": 20536, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20541, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-to-string@3.2.0/node_modules/mdast-util-to-string/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {toString} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 20549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20554, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC,GAED,oBAAoB;;;AACpB,MAAM,eAAe,CAAC;AAef,SAAS,SAAS,KAAK,EAAE,OAAO;IACrC,MAAM,WAAW,WAAW;IAC5B,MAAM,kBACJ,OAAO,SAAS,eAAe,KAAK,YAChC,SAAS,eAAe,GACxB;IACN,MAAM,cACJ,OAAO,SAAS,WAAW,KAAK,YAAY,SAAS,WAAW,GAAG;IAErE,OAAO,IAAI,OAAO,iBAAiB;AACrC;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,IAAI,KAAK,EAAE,eAAe,EAAE,WAAW;IAC9C,IAAI,KAAK,QAAQ;QACf,IAAI,WAAW,OAAO;YACpB,OAAO,MAAM,IAAI,KAAK,UAAU,CAAC,cAAc,KAAK,MAAM,KAAK;QACjE;QAEA,IAAI,mBAAmB,SAAS,SAAS,MAAM,GAAG,EAAE;YAClD,OAAO,MAAM,GAAG;QAClB;QAEA,IAAI,cAAc,OAAO;YACvB,OAAO,IAAI,MAAM,QAAQ,EAAE,iBAAiB;QAC9C;IACF;IAEA,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO,IAAI,OAAO,iBAAiB;IACrC;IAEA,OAAO;AACT;AAEA;;;;;;;;;;;CAWC,GACD,SAAS,IAAI,MAAM,EAAE,eAAe,EAAE,WAAW;IAC/C,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,iBAAiB;IACtD;IAEA,OAAO,OAAO,IAAI,CAAC;AACrB;AAEA;;;;;;;CAOC,GACD,SAAS,KAAK,KAAK;IACjB,OAAO,QAAQ,SAAS,OAAO,UAAU;AAC3C"}},
    {"offset": {"line": 20630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20635, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {toString} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 20643, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20648, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-parse@10.0.2/node_modules/remark-parse/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;AAQc,SAAS,YAAY,OAAO;IACzC,mDAAmD,GACnD,MAAM,SAAS,CAAC;QACd,kBAAkB;QAClB,MAAM,WAAmC,IAAI,CAAC,IAAI,CAAC;QAEnD,OAAO,yPACL,KACA,OAAO,MAAM,CAAC,CAAC,GAAG,UAAU,SAAS;YACnC,6CAA6C;YAC7C,uEAAuE;YACvE,mBAAmB;YACnB,YAAY,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE;YAClD,iBAAiB,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE;QAC5D;IAEJ;IAEA,OAAO,MAAM,CAAC,IAAI,EAAE;QAAC,QAAQ;IAAM;AACrC"}},
    {"offset": {"line": 20673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20678, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 20684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20689, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;;CAEC;;;;;;AAYc,SAAS,YAAY,OAAO;IACzC,sBAAsB,GACtB,oFAAoF;IACpF,MAAM,OAAO,IAAI;IAEjB,KAAK,MAAM,GAAG;IAEd;;GAEC,GACD,SAAS,OAAO,GAAG;QACjB,OAAO,yPAAa,KAAK;YACvB,GAAG,KAAK,IAAI,CAAC,WAAW;YACxB,GAAG,OAAO;YACV,6CAA6C;YAC7C,uEAAuE;YACvE,mBAAmB;YACnB,YAAY,KAAK,IAAI,CAAC,0BAA0B,EAAE;YAClD,iBAAiB,KAAK,IAAI,CAAC,6BAA6B,EAAE;QAC5D;IACF;AACF"}},
    {"offset": {"line": 20720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20725, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {default} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 20732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20737, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdxjs-esm@1.3.1/node_modules/mdast-util-mdxjs-esm/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('../index.js').MdxjsEsm} MdxjsEsm\n */\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX ESM.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxjsEsmFromMarkdown = {\n  enter: {mdxjsEsm: enterMdxjsEsm},\n  exit: {mdxjsEsm: exitMdxjsEsm, mdxjsEsmData: exitMdxjsEsmData}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxjsEsmToMarkdown = {handlers: {mdxjsEsm: handleMdxjsEsm}}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxjsEsm(token) {\n  this.enter({type: 'mdxjsEsm', value: ''}, token)\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsm(token) {\n  const value = this.resume()\n  const node = /** @type {MdxjsEsm} */ (this.exit(token))\n  /** @type {Program | undefined} */\n  // @ts-expect-error: custom.\n  const estree = token.estree\n\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsmData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxjsEsm} node\n */\nfunction handleMdxjsEsm(node) {\n  return node.value || ''\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC,GAED,uCAAuC;AAEvC;;;;;;;CAOC;;;;AACM,MAAM,uBAAuB;IAClC,OAAO;QAAC,UAAU;IAAa;IAC/B,MAAM;QAAC,UAAU;QAAc,cAAc;IAAgB;AAC/D;AAOO,MAAM,qBAAqB;IAAC,UAAU;QAAC,UAAU;IAAc;AAAC;AAEvE;;;CAGC,GACD,SAAS,cAAc,KAAK;IAC1B,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAY,OAAO;IAAE,GAAG;IAC1C,IAAI,CAAC,MAAM,GAAG,eAAe;;AAC/B;AAEA;;;CAGC,GACD,SAAS,aAAa,KAAK;IACzB,MAAM,QAAQ,IAAI,CAAC,MAAM;IACzB,MAAM,OAAgC,IAAI,CAAC,IAAI,CAAC;IAChD,gCAAgC,GAChC,4BAA4B;IAC5B,MAAM,SAAS,MAAM,MAAM;IAE3B,KAAK,KAAK,GAAG;IAEb,IAAI,QAAQ;QACV,KAAK,IAAI,GAAG;YAAC;QAAM;IACrB;AACF;AAEA;;;CAGC,GACD,SAAS,iBAAiB,KAAK;IAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC;AAEA;;;CAGC,GACD,SAAS,eAAe,IAAI;IAC1B,OAAO,KAAK,KAAK,IAAI;AACvB"}},
    {"offset": {"line": 20813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20818, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdxjs-esm@1.3.1/node_modules/mdast-util-mdxjs-esm/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 20826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20831, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdxjs-esm@2.0.1/node_modules/mdast-util-mdxjs-esm/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('../index.js').MdxjsEsm} MdxjsEsm\n */\n\n// To do: next major: expose functions.\nimport {ok as assert} from 'devlop'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX.js ESM in\n * markdown.\n *\n * When using the micromark syntax extension with `addResult`, nodes will have\n * a `data.estree` field set to an ESTree [`Program`][program] node.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX.js ESM.\n */\nexport function mdxjsEsmFromMarkdown() {\n  return {\n    enter: {mdxjsEsm: enterMdxjsEsm},\n    exit: {mdxjsEsm: exitMdxjsEsm, mdxjsEsmData: exitMdxjsEsmData}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX.js ESM in\n * markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX.js ESM.\n */\nexport function mdxjsEsmToMarkdown() {\n  return {handlers: {mdxjsEsm: handleMdxjsEsm}}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxjsEsm(token) {\n  this.enter({type: 'mdxjsEsm', value: ''}, token)\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsm(token) {\n  const value = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'mdxjsEsm')\n\n  this.exit(token)\n\n  const estree = token.estree\n\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsmData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxjsEsm} node\n */\nfunction handleMdxjsEsm(node) {\n  return node.value || ''\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC,GAED,uCAAuC;;;;;;;;AAahC,SAAS;IACd,OAAO;QACL,OAAO;YAAC,UAAU;QAAa;QAC/B,MAAM;YAAC,UAAU;YAAc,cAAc;QAAgB;IAC/D;AACF;AASO,SAAS;IACd,OAAO;QAAC,UAAU;YAAC,UAAU;QAAc;IAAC;AAC9C;AAEA;;;CAGC,GACD,SAAS,cAAc,KAAK;IAC1B,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAY,OAAO;IAAE,GAAG;IAC1C,IAAI,CAAC,MAAM,GAAG,eAAe;;AAC/B;AAEA;;;CAGC,GACD,SAAS,aAAa,KAAK;IACzB,MAAM,QAAQ,IAAI,CAAC,MAAM;IACzB,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAC9C,+LAAO,KAAK,IAAI,KAAK;IAErB,IAAI,CAAC,IAAI,CAAC;IAEV,MAAM,SAAS,MAAM,MAAM;IAE3B,KAAK,KAAK,GAAG;IAEb,IAAI,QAAQ;QACV,KAAK,IAAI,GAAG;YAAC;QAAM;IACrB;AACF;AAEA;;;CAGC,GACD,SAAS,iBAAiB,KAAK;IAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC;AAEA;;;CAGC,GACD,SAAS,eAAe,IAAI;IAC1B,OAAO,KAAK,KAAK,IAAI;AACvB"}},
    {"offset": {"line": 20906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20911, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdxjs-esm@2.0.1/node_modules/mdast-util-mdxjs-esm/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 20919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20924, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/format-basic.js"],"sourcesContent":["/**\n * The smallest way to encode a character.\n *\n * @param {number} code\n * @returns {string}\n */\nexport function formatBasic(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACM,SAAS,YAAY,IAAI;IAC9B,OAAO,QAAQ,KAAK,QAAQ,CAAC,IAAI,WAAW,KAAK;AACnD"}},
    {"offset": {"line": 20935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20940, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/constant/dangerous.js"],"sourcesContent":["/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACM,MAAM,YAAY;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD"}},
    {"offset": {"line": 20958, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20963, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/to-named.js"],"sourcesContent":["import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,MAAM,CAAC,EAAE,cAAc;AAE7B;;;;CAIC,GACD,MAAM,aAAa,CAAC;AAEpB,mBAAmB,GACnB,IAAI;AAEJ,IAAK,6PAA+B;IAClC,IAAI,IAAI,IAAI,wPAAyB,MAAM;QACzC,UAAU,CAAC,qPAAsB,CAAC,IAAI,CAAC,GAAG;IAC5C;AACF;AAWO,SAAS,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS;IACjD,MAAM,YAAY,OAAO,YAAY,CAAC;IAEtC,IAAI,IAAI,IAAI,CAAC,YAAY,YAAY;QACnC,MAAM,OAAO,UAAU,CAAC,UAAU;QAClC,MAAM,QAAQ,MAAM;QAEpB,IACE,QACA,yPAAwB,QAAQ,CAAC,SACjC,CAAC,8OAAU,QAAQ,CAAC,SACpB,CAAC,CAAC,aACC,QACC,SAAS,GAAG,OAAO,OACnB,YAAY,IAAI,CAAC,OAAO,YAAY,CAAC,MAAO,GAChD;YACA,OAAO;QACT;QAEA,OAAO,QAAQ;IACjB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 20997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21002, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/to-decimal.js"],"sourcesContent":["/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,SAAS,UAAU,IAAI,EAAE,IAAI,EAAE,IAAI;IACxC,MAAM,QAAQ,OAAO,OAAO;IAC5B,OAAO,QAAQ,QAAQ,CAAC,KAAK,IAAI,CAAC,OAAO,YAAY,CAAC,SAClD,QACA,QAAQ;AACd"}},
    {"offset": {"line": 21016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21021, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/to-hexadecimal.js"],"sourcesContent":["/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACM,SAAS,cAAc,IAAI,EAAE,IAAI,EAAE,IAAI;IAC5C,MAAM,QAAQ,QAAQ,KAAK,QAAQ,CAAC,IAAI,WAAW;IACnD,OAAO,QAAQ,QAAQ,CAAC,aAAa,IAAI,CAAC,OAAO,YAAY,CAAC,SAC1D,QACA,QAAQ;AACd"}},
    {"offset": {"line": 21035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21040, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/format-smart.js"],"sourcesContent":["/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;CAeC;;;;;;;;;;AAcM,SAAS,YAAY,IAAI,EAAE,IAAI,EAAE,OAAO;IAC7C,IAAI,UAAU,sPAAc,MAAM,MAAM,QAAQ,sBAAsB;IACtE,6BAA6B,GAC7B,IAAI;IAEJ,IAAI,QAAQ,kBAAkB,IAAI,QAAQ,qBAAqB,EAAE;QAC/D,QAAQ,0OACN,MACA,MACA,QAAQ,sBAAsB,EAC9B,QAAQ,SAAS;IAErB;IAEA,qDAAqD;IACrD,yEAAyE;IACzE,sCAAsC;IACtC,EAAE;IACF,0CAA0C;IAC1C,iCAAiC;IACjC,EAAE;IACF,0EAA0E;IAC1E,yEAAyE;IACzE,0EAA0E;IAC1E,IACE,CAAC,QAAQ,qBAAqB,IAAI,CAAC,KAAK,KACxC,QAAQ,qBAAqB,EAC7B;QACA,MAAM,UAAU,8OAAU,MAAM,MAAM,QAAQ,sBAAsB;QAEpE,IAAI,QAAQ,MAAM,GAAG,QAAQ,MAAM,EAAE;YACnC,UAAU;QACZ;IACF;IAEA,OAAO,SACL,CAAC,CAAC,QAAQ,qBAAqB,IAAI,MAAM,MAAM,GAAG,QAAQ,MAAM,IAC9D,QACA;AACN"}},
    {"offset": {"line": 21089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21094, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/core.js"],"sourcesContent":["/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;CAaC,GAED;;;;;;CAMC;;;AACM,SAAS,KAAK,KAAK,EAAE,OAAO;IACjC,QAAQ,MAAM,OAAO,CACnB,QAAQ,MAAM,GAAG,uBAAuB,QAAQ,MAAM,IAAI,aAC1D;IAGF,IAAI,QAAQ,MAAM,IAAI,QAAQ,UAAU,EAAE;QACxC,OAAO;IACT;IAEA,OACE,KACE,mBAAmB;KAClB,OAAO,CAAC,mCAAmC,UAC5C,uEAAuE;IACvE,mBAAmB;KAClB,OAAO,CACN,mEAAmE;IACnE,8DACA;IAIN;;;;GAIC,GACD,SAAS,UAAU,IAAI,EAAE,KAAK,EAAE,GAAG;QACjC,OAAO,QAAQ,MAAM,CACnB,CAAC,KAAK,UAAU,CAAC,KAAK,MAAM,IAAI,QAC9B,KAAK,UAAU,CAAC,KAChB,SACA,SACF,IAAI,UAAU,CAAC,QAAQ,IACvB;IAEJ;IAEA;;;;GAIC,GACD,SAAS,MAAM,SAAS,EAAE,KAAK,EAAE,GAAG;QAClC,OAAO,QAAQ,MAAM,CACnB,UAAU,UAAU,CAAC,IACrB,IAAI,UAAU,CAAC,QAAQ,IACvB;IAEJ;AACF;AAEA;;;CAGC,GACD,SAAS,uBAAuB,MAAM;IACpC,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ,CAAC;IAEb,MAAO,EAAE,QAAQ,OAAO,MAAM,CAAE;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB;IAC3D;IAEA,OAAO,IAAI,OAAO,QAAQ,OAAO,IAAI,CAAC,OAAO,KAAK;AACpD"}},
    {"offset": {"line": 21152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21157, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;AAgBM,SAAS,kBAAkB,KAAK,EAAE,OAAO;IAC9C,OAAO,wNAAK,OAAO,OAAO,MAAM,CAAC;QAAC,MAAM;IAAa,GAAG;AAC1D;AAYO,SAAS,uBAAuB,KAAK,EAAE,OAAO;IACnD,OAAO,wNAAK,OAAO,OAAO,MAAM,CAAC;QAAC,MAAM;IAAa,GAAG;AAC1D"}},
    {"offset": {"line": 21181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21186, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').LightOptions} LightOptions\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport * from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;CAGC"}},
    {"offset": {"line": 21196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21201, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/character-entities-html4@2.1.0/node_modules/character-entities-html4/index.js"],"sourcesContent":["/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 21462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21467, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/character-entities-legacy@3.0.0/node_modules/character-entities-legacy/index.js"],"sourcesContent":["/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,0BAA0B;IACr}},
    {"offset": {"line": 21582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21587, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/is-decimal@2.0.1/node_modules/is-decimal/index.js"],"sourcesContent":["/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,UAAU,SAAS;IACjC,MAAM,OACJ,OAAO,cAAc,WAAW,UAAU,UAAU,CAAC,KAAK;IAE5D,OAAO,QAAQ,MAAM,QAAQ,GAAG,OAAO;AACzC"}},
    {"offset": {"line": 21600, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21605, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/is-alphabetical@2.0.1/node_modules/is-alphabetical/index.js"],"sourcesContent":["/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,eAAe,SAAS;IACtC,MAAM,OACJ,OAAO,cAAc,WAAW,UAAU,UAAU,CAAC,KAAK;IAE5D,OACE,AAAC,QAAQ,MAAM,QAAQ,OACtB,QAAQ,MAAM,QAAQ;AAE3B"}},
    {"offset": {"line": 21618, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21623, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/is-alphanumerical@2.0.1/node_modules/is-alphanumerical/index.js"],"sourcesContent":["import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n"],"names":[],"mappings":";;;;;;;;AAUO,SAAS,iBAAiB,SAAS;IACxC,OAAO,sNAAe,cAAc,uMAAU;AAChD"}},
    {"offset": {"line": 21634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21639, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/is-hexadecimal@2.0.1/node_modules/is-hexadecimal/index.js"],"sourcesContent":["/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,cAAc,SAAS;IACrC,MAAM,OACJ,OAAO,cAAc,WAAW,UAAU,UAAU,CAAC,KAAK;IAE5D,OACE,AAAC,QAAQ,GAAG,KAAK,OAAM,QAAQ,OAC9B,QAAQ,GAAG,KAAK,OAAM,QAAQ,MAC9B,QAAQ,GAAG,KAAK,OAAM,QAAQ;AAEnC"}},
    {"offset": {"line": 21652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21657, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/character-reference-invalid@2.0.1/node_modules/character-reference-invalid/index.js"],"sourcesContent":["/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,4BAA4B;IACvC,GAAG;IACH,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP"}},
    {"offset": {"line": 21694, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21699, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/parse-entities@4.0.1/node_modules/parse-entities/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 22001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22006, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/parse-entities@4.0.1/node_modules/parse-entities/index.js"],"sourcesContent":["// Note: more types exposed from `index.d.ts`.\n// To do: refactor to include type parameters in JS.\nexport {parseEntities} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,8CAA8C;AAC9C,oDAAoD"}},
    {"offset": {"line": 22014, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22019, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js"],"sourcesContent":["/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC;;;AACM,SAAS,OAAO,KAAK,EAAE,SAAS;IACrC,MAAM,SAAS,OAAO;IAEtB,IAAI,OAAO,cAAc,UAAU;QACjC,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,QAAQ;IACZ,IAAI,QAAQ,OAAO,OAAO,CAAC;IAE3B,MAAO,UAAU,CAAC,EAAG;QACnB;QACA,QAAQ,OAAO,OAAO,CAAC,WAAW,QAAQ,UAAU,MAAM;IAC5D;IAEA,OAAO;AACT"}},
    {"offset": {"line": 22044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22049, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-jsx@3.0.0/node_modules/mdast-util-mdx-jsx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').OnEnterError} OnEnterError\n * @typedef {import('mdast-util-from-markdown').OnExitError} OnExitError\n * @typedef {import('mdast-util-from-markdown').Token} Token\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Tracker} Tracker\n *\n * @typedef {import('../index.js').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('../index.js').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('../index.js').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('../index.js').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('../index.js').MdxJsxTextElement} MdxJsxTextElement\n */\n\n/**\n * @typedef Tag\n *   Single tag.\n * @property {string | undefined} name\n *   Name of tag, or `undefined` for fragment.\n *\n *   > 👉 **Note**: `null` is used in the AST for fragments, as it serializes in\n *   > JSON.\n * @property {Array<MdxJsxAttribute | MdxJsxExpressionAttribute>} attributes\n *   Attributes.\n * @property {boolean} close\n *   Whether the tag is closing (`</x>`).\n * @property {boolean} selfClosing\n *   Whether the tag is self-closing (`<x/>`).\n * @property {Token['start']} start\n *   Start point.\n * @property {Token['start']} end\n *   End point.\n *\n * @typedef ToMarkdownOptions\n *   Configuration.\n * @property {'\"' | \"'\" | null | undefined} [quote='\"']\n *   Preferred quote to use around attribute values (default: `'\"'`).\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n * @property {number | null | undefined} [printWidth=Infinity]\n *   Try and wrap syntax at this width (default: `Infinity`).\n *\n *   When set to a finite number (say, `80`), the formatter will print\n *   attributes on separate lines when a tag doesn’t fit on one line.\n *   The normal behavior is to print attributes with spaces between them\n *   instead of line endings.\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {parseEntities} from 'parse-entities'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst indent = '  '\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n *   When using the syntax extension with `addResult`, nodes will have a\n *   `data.estree` field set to an ESTree `Program` node.\n */\nexport function mdxJsxFromMarkdown() {\n  return {\n    canContainEols: ['mdxJsxTextElement'],\n    enter: {\n      mdxJsxFlowTag: enterMdxJsxTag,\n      mdxJsxFlowTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxFlowTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxFlowTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagAttributeValueLiteral: buffer,\n      mdxJsxFlowTagAttributeValueExpression: buffer,\n      mdxJsxFlowTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker,\n\n      mdxJsxTextTag: enterMdxJsxTag,\n      mdxJsxTextTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxTextTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxTextTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagAttributeValueLiteral: buffer,\n      mdxJsxTextTagAttributeValueExpression: buffer,\n      mdxJsxTextTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker\n    },\n    exit: {\n      mdxJsxFlowTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxFlowTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxFlowTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxFlowTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxFlowTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagExpressionAttributeValue: data,\n      mdxJsxFlowTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxFlowTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxFlowTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxFlowTagAttributeValueLiteralValue: data,\n      mdxJsxFlowTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxFlowTagAttributeValueExpressionValue: data,\n      mdxJsxFlowTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxFlowTag: exitMdxJsxTag,\n\n      mdxJsxTextTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxTextTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxTextTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxTextTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxTextTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagExpressionAttributeValue: data,\n      mdxJsxTextTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxTextTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxTextTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxTextTagAttributeValueLiteralValue: data,\n      mdxJsxTextTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxTextTagAttributeValueExpressionValue: data,\n      mdxJsxTextTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxTextTag: exitMdxJsxTag\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function buffer() {\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function data(token) {\n    this.config.enter.data.call(this, token)\n    this.config.exit.data.call(this, token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTag(token) {\n    /** @type {Tag} */\n    const tag = {\n      name: undefined,\n      attributes: [],\n      close: false,\n      selfClosing: false,\n      start: token.start,\n      end: token.end\n    }\n    if (!this.data.mdxJsxTagStack) this.data.mdxJsxTagStack = []\n    this.data.mdxJsxTag = tag\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagClosingMarker(token) {\n    const stack = this.data.mdxJsxTagStack\n    assert(stack, 'expected `mdxJsxTagStack`')\n\n    if (stack.length === 0) {\n      throw new VFileMessage(\n        'Unexpected closing slash `/` in tag, expected an open tag first',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAnyAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected attribute in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-attribute'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagSelfClosingMarker(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected self-closing slash `/` in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-self-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagClosingMarker() {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.close = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNamePrimary(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameMember(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.name += '.' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameLocal(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxAttribute', name: '', value: null})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagExpressionAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxExpressionAttribute', value: ''})\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagExpressionAttribute(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const tail = tag.attributes[tag.attributes.length - 1]\n    assert(tail.type === 'mdxJsxExpressionAttribute')\n    const estree = token.estree\n\n    tail.value = this.resume()\n\n    if (estree) {\n      tail.data = {estree}\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNamePrimary(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const node = tag.attributes[tag.attributes.length - 1]\n    assert(node.type === 'mdxJsxAttribute')\n    node.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNameLocal(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const node = tag.attributes[tag.attributes.length - 1]\n    assert(node.type === 'mdxJsxAttribute')\n    node.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueLiteral() {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    tag.attributes[tag.attributes.length - 1].value = parseEntities(\n      this.resume(),\n      {nonTerminated: false}\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueExpression(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const tail = tag.attributes[tag.attributes.length - 1]\n    assert(tail.type === 'mdxJsxAttribute')\n    /** @type {MdxJsxAttributeValueExpression} */\n    const node = {type: 'mdxJsxAttributeValueExpression', value: this.resume()}\n    const estree = token.estree\n\n    if (estree) {\n      node.data = {estree}\n    }\n\n    tail.value = node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagSelfClosingMarker() {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    tag.selfClosing = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTag(token) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const stack = this.data.mdxJsxTagStack\n    assert(stack, 'expected `mdxJsxTagStack`')\n    const tail = stack[stack.length - 1]\n\n    if (tag.close && tail.name !== tag.name) {\n      throw new VFileMessage(\n        'Unexpected closing tag `' +\n          serializeAbbreviatedTag(tag) +\n          '`, expected corresponding closing tag for `' +\n          serializeAbbreviatedTag(tail) +\n          '` (' +\n          stringifyPosition(tail) +\n          ')',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:end-tag-mismatch'\n      )\n    }\n\n    // End of a tag, so drop the buffer.\n    this.resume()\n\n    if (tag.close) {\n      stack.pop()\n    } else {\n      this.enter(\n        {\n          type:\n            token.type === 'mdxJsxTextTag'\n              ? 'mdxJsxTextElement'\n              : 'mdxJsxFlowElement',\n          name: tag.name || null,\n          attributes: tag.attributes,\n          children: []\n        },\n        token,\n        onErrorRightIsTag\n      )\n    }\n\n    if (tag.selfClosing || tag.close) {\n      this.exit(token, onErrorLeftIsTag)\n    } else {\n      stack.push(tag)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnEnterError}\n   */\n  function onErrorRightIsTag(closing, open) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n    const place = closing ? ' before the end of `' + closing.type + '`' : ''\n    const position = closing\n      ? {start: closing.start, end: closing.end}\n      : undefined\n\n    throw new VFileMessage(\n      'Expected a closing tag for `' +\n        serializeAbbreviatedTag(tag) +\n        '` (' +\n        stringifyPosition({start: open.start, end: open.end}) +\n        ')' +\n        place,\n      position,\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnExitError}\n   */\n  function onErrorLeftIsTag(a, b) {\n    const tag = this.data.mdxJsxTag\n    assert(tag, 'expected `mdxJsxTag`')\n\n    throw new VFileMessage(\n      'Expected the closing tag `' +\n        serializeAbbreviatedTag(tag) +\n        '` either after the end of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.end) +\n        ') or another opening tag after the start of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.start) +\n        ')',\n      {start: a.start, end: a.end},\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * Serialize a tag, excluding attributes.\n   * `self-closing` is not supported, because we don’t need it yet.\n   *\n   * @param {Tag} tag\n   * @returns {string}\n   */\n  function serializeAbbreviatedTag(tag) {\n    return '<' + (tag.close ? '/' : '') + (tag.name || '') + '>'\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX JSX.\n *\n * This extension configures `mdast-util-to-markdown` with\n * `options.fences: true` and `options.resourceLink: true` too, do not\n * overwrite them!\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX JSX.\n */\nexport function mdxJsxToMarkdown(options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const quoteSmart = options_.quoteSmart || false\n  const tightSelfClosing = options_.tightSelfClosing || false\n  const printWidth = options_.printWidth || Number.POSITIVE_INFINITY\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error(\n      'Cannot serialize attribute values with `' +\n        quote +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  mdxElement.peek = peekElement\n\n  return {\n    handlers: {\n      mdxJsxFlowElement: mdxElement,\n      mdxJsxTextElement: mdxElement\n    },\n    unsafe: [\n      {character: '<', inConstruct: ['phrasing']},\n      {atBreak: true, character: '<'}\n    ],\n    // Always generate fenced code (never indented code).\n    fences: true,\n    // Always generate links with resources (never autolinks).\n    resourceLink: true\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n   */\n  // eslint-disable-next-line complexity\n  function mdxElement(node, _, state, info) {\n    const flow = node.type === 'mdxJsxFlowElement'\n    const selfClosing = node.name\n      ? !node.children || node.children.length === 0\n      : false\n    const depth = inferDepth(state)\n    const currentIndent = createIndent(depth)\n    const trackerOneLine = state.createTracker(info)\n    const trackerMultiLine = state.createTracker(info)\n    /** @type {Array<string>} */\n    const serializedAttributes = []\n    const prefix = (flow ? currentIndent : '') + '<' + (node.name || '')\n    const exit = state.enter(node.type)\n\n    trackerOneLine.move(prefix)\n    trackerMultiLine.move(prefix)\n\n    // None.\n    if (node.attributes && node.attributes.length > 0) {\n      if (!node.name) {\n        throw new Error('Cannot serialize fragment w/ attributes')\n      }\n\n      let index = -1\n      while (++index < node.attributes.length) {\n        const attribute = node.attributes[index]\n        /** @type {string} */\n        let result\n\n        if (attribute.type === 'mdxJsxExpressionAttribute') {\n          result = '{' + (attribute.value || '') + '}'\n        } else {\n          if (!attribute.name) {\n            throw new Error('Cannot serialize attribute w/o name')\n          }\n\n          const value = attribute.value\n          const left = attribute.name\n          /** @type {string} */\n          let right = ''\n\n          if (value === null || value === undefined) {\n            // Empty.\n          } else if (typeof value === 'object') {\n            right = '{' + (value.value || '') + '}'\n          } else {\n            // If the alternative is less common than `quote`, switch.\n            const appliedQuote =\n              quoteSmart && ccount(value, quote) > ccount(value, alternative)\n                ? alternative\n                : quote\n            right =\n              appliedQuote +\n              stringifyEntitiesLight(value, {subset: [appliedQuote]}) +\n              appliedQuote\n          }\n\n          result = left + (right ? '=' : '') + right\n        }\n\n        serializedAttributes.push(result)\n      }\n    }\n\n    let attributesOnTheirOwnLine = false\n    const attributesOnOneLine = serializedAttributes.join(' ')\n\n    if (\n      // Block:\n      flow &&\n      // Including a line ending (expressions).\n      (/\\r?\\n|\\r/.test(attributesOnOneLine) ||\n        // Current position (including `<tag`).\n        trackerOneLine.current().now.column +\n          // -1 because columns, +1 for ` ` before attributes.\n          // Attributes joined by spaces.\n          attributesOnOneLine.length +\n          // ` />`.\n          (selfClosing ? (tightSelfClosing ? 2 : 3) : 1) >\n          printWidth)\n    ) {\n      attributesOnTheirOwnLine = true\n    }\n\n    let tracker = trackerOneLine\n    let value = prefix\n\n    if (attributesOnTheirOwnLine) {\n      tracker = trackerMultiLine\n\n      let index = -1\n\n      while (++index < serializedAttributes.length) {\n        // Only indent first line of of attributes, we can’t indent attribute\n        // values.\n        serializedAttributes[index] =\n          currentIndent + indent + serializedAttributes[index]\n      }\n\n      value += tracker.move(\n        '\\n' + serializedAttributes.join('\\n') + '\\n' + currentIndent\n      )\n    } else if (attributesOnOneLine) {\n      value += tracker.move(' ' + attributesOnOneLine)\n    }\n\n    if (selfClosing) {\n      value += tracker.move(\n        (tightSelfClosing || attributesOnTheirOwnLine ? '' : ' ') + '/'\n      )\n    }\n\n    value += tracker.move('>')\n\n    if (node.children && node.children.length > 0) {\n      if (node.type === 'mdxJsxTextElement') {\n        value += tracker.move(\n          // @ts-expect-error: `containerPhrasing` is typed correctly, but TS\n          // generates *hardcoded* types, which means that our dynamically added\n          // directives are not present.\n          // At some point, TS should fix that, and `from-markdown` should be fine.\n          state.containerPhrasing(node, {\n            ...tracker.current(),\n            before: '>',\n            after: '<'\n          })\n        )\n      } else {\n        tracker.shift(2)\n        value += tracker.move('\\n')\n        value += tracker.move(containerFlow(node, state, tracker.current()))\n        value += tracker.move('\\n')\n      }\n    }\n\n    if (!selfClosing) {\n      value += tracker.move(\n        (flow ? currentIndent : '') + '</' + (node.name || '') + '>'\n      )\n    }\n\n    exit()\n    return value\n  }\n}\n\n// Modified copy of:\n// <https://github.com/syntax-tree/mdast-util-to-markdown/blob/a381cbc/lib/util/container-flow.js>.\n//\n// To do: add `indent` support to `mdast-util-to-markdown`.\n// As indents are only used for JSX, it’s fine for now, but perhaps better\n// there.\n/**\n * @param {MdxJsxFlowElement} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {ReturnType<Tracker['current']>} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children\n  const tracker = state.createTracker(info)\n  const currentIndent = createIndent(inferDepth(state))\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    const childInfo = {before: '\\n', after: '\\n', ...tracker.current()}\n\n    const result = state.handle(child, parent, state, childInfo)\n\n    const serializedChild =\n      child.type === 'mdxJsxFlowElement'\n        ? result\n        : state.indentLines(result, function (line, _, blank) {\n            return (blank ? '' : currentIndent) + line\n          })\n\n    results.push(tracker.move(serializedChild))\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move('\\n\\n'))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n *\n * @param {State} state\n * @returns {number}\n */\nfunction inferDepth(state) {\n  let depth = 0\n\n  for (const x of state.stack) {\n    if (x === 'mdxJsxFlowElement') {\n      depth++\n    }\n  }\n\n  return depth\n}\n\n/**\n * @param {number} depth\n * @returns {string}\n */\nfunction createIndent(depth) {\n  return indent.repeat(depth)\n}\n\n/**\n * @type {ToMarkdownHandle}\n */\nfunction peekElement() {\n  return '<'\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 22651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22656, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-jsx@3.0.0/node_modules/mdast-util-mdx-jsx/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 22664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22669, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-jsx@2.1.4/node_modules/mdast-util-mdx-jsx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Token} Token\n * @typedef {import('mdast-util-from-markdown').OnEnterError} OnEnterError\n * @typedef {import('mdast-util-from-markdown').OnExitError} OnExitError\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Tracker} Tracker\n *\n * @typedef {import('../index.js').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('../index.js').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('../index.js').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('../index.js').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('../index.js').MdxJsxTextElement} MdxJsxTextElement\n */\n\n/**\n * @typedef Tag\n *   Single tag.\n * @property {string | undefined} name\n *   Name of tag, or `undefined` for fragment.\n *\n *   > 👉 **Note**: `null` is used in the AST for fragments, as it serializes in\n *   > JSON.\n * @property {Array<MdxJsxAttribute | MdxJsxExpressionAttribute>} attributes\n *   Attributes.\n * @property {boolean} close\n *   Whether the tag is closing (`</x>`).\n * @property {boolean} selfClosing\n *   Whether the tag is self-closing (`<x/>`).\n * @property {Token['start']} start\n *   Start point.\n * @property {Token['start']} end\n *   End point.\n *\n * @typedef ToMarkdownOptions\n *   Configuration.\n * @property {'\"' | \"'\" | null | undefined} [quote='\"']\n *   Preferred quote to use around attribute values.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes.\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />`.\n * @property {number | null | undefined} [printWidth=Infinity]\n *   Try and wrap syntax at this width.\n *\n *   When set to a finite number (say, `80`), the formatter will print\n *   attributes on separate lines when a tag doesn’t fit on one line.\n *   The normal behavior is to print attributes with spaces between them\n *   instead of line endings.\n */\n\nimport {ccount} from 'ccount'\nimport {parseEntities} from 'parse-entities'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {VFileMessage} from 'vfile-message'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: use `state`, use utilities from state, rename `safeOptions` to `info`.\n\nconst indent = '  '\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n *   When using the syntax extension with `addResult`, nodes will have a\n *   `data.estree` field set to an ESTree `Program` node.\n */\nexport function mdxJsxFromMarkdown() {\n  return {\n    canContainEols: ['mdxJsxTextElement'],\n    enter: {\n      mdxJsxFlowTag: enterMdxJsxTag,\n      mdxJsxFlowTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxFlowTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxFlowTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagAttributeValueLiteral: buffer,\n      mdxJsxFlowTagAttributeValueExpression: buffer,\n      mdxJsxFlowTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker,\n\n      mdxJsxTextTag: enterMdxJsxTag,\n      mdxJsxTextTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxTextTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxTextTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagAttributeValueLiteral: buffer,\n      mdxJsxTextTagAttributeValueExpression: buffer,\n      mdxJsxTextTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker\n    },\n    exit: {\n      mdxJsxFlowTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxFlowTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxFlowTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxFlowTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxFlowTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagExpressionAttributeValue: data,\n      mdxJsxFlowTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxFlowTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxFlowTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxFlowTagAttributeValueLiteralValue: data,\n      mdxJsxFlowTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxFlowTagAttributeValueExpressionValue: data,\n      mdxJsxFlowTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxFlowTag: exitMdxJsxTag,\n\n      mdxJsxTextTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxTextTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxTextTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxTextTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxTextTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagExpressionAttributeValue: data,\n      mdxJsxTextTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxTextTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxTextTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxTextTagAttributeValueLiteralValue: data,\n      mdxJsxTextTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxTextTagAttributeValueExpressionValue: data,\n      mdxJsxTextTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxTextTag: exitMdxJsxTag\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function buffer() {\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function data(token) {\n    this.config.enter.data.call(this, token)\n    this.config.exit.data.call(this, token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTag(token) {\n    /** @type {Tag} */\n    const tag = {\n      name: undefined,\n      attributes: [],\n      close: false,\n      selfClosing: false,\n      start: token.start,\n      end: token.end\n    }\n    if (!this.getData('mdxJsxTagStack')) this.setData('mdxJsxTagStack', [])\n    this.setData('mdxJsxTag', tag)\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagClosingMarker(token) {\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n\n    if (stack.length === 0) {\n      throw new VFileMessage(\n        'Unexpected closing slash `/` in tag, expected an open tag first',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAnyAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected attribute in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-attribute'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagSelfClosingMarker(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected self-closing slash `/` in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-self-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.close = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameMember(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += '.' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxAttribute', name: '', value: null})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxExpressionAttribute', value: ''})\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxExpressionAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    tail.value = this.resume()\n\n    if (estree) {\n      tail.data = {estree}\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueLiteral() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.attributes[tag.attributes.length - 1].value = parseEntities(\n      this.resume(),\n      {nonTerminated: false}\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueExpression(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {MdxJsxAttributeValueExpression} */\n    const node = {type: 'mdxJsxAttributeValueExpression', value: this.resume()}\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    if (estree) {\n      node.data = {estree}\n    }\n\n    tail.value = node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagSelfClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    tag.selfClosing = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTag(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n    const tail = stack[stack.length - 1]\n\n    if (tag.close && tail.name !== tag.name) {\n      throw new VFileMessage(\n        'Unexpected closing tag `' +\n          serializeAbbreviatedTag(tag) +\n          '`, expected corresponding closing tag for `' +\n          serializeAbbreviatedTag(tail) +\n          '` (' +\n          stringifyPosition(tail) +\n          ')',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:end-tag-mismatch'\n      )\n    }\n\n    // End of a tag, so drop the buffer.\n    this.resume()\n\n    if (tag.close) {\n      stack.pop()\n    } else {\n      this.enter(\n        {\n          type:\n            token.type === 'mdxJsxTextTag'\n              ? 'mdxJsxTextElement'\n              : 'mdxJsxFlowElement',\n          name: tag.name || null,\n          attributes: tag.attributes,\n          children: []\n        },\n        token,\n        onErrorRightIsTag\n      )\n    }\n\n    if (tag.selfClosing || tag.close) {\n      this.exit(token, onErrorLeftIsTag)\n    } else {\n      stack.push(tag)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnEnterError}\n   */\n  function onErrorRightIsTag(closing, open) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const place = closing ? ' before the end of `' + closing.type + '`' : ''\n    const position = closing\n      ? {start: closing.start, end: closing.end}\n      : undefined\n\n    throw new VFileMessage(\n      'Expected a closing tag for `' +\n        serializeAbbreviatedTag(tag) +\n        '` (' +\n        stringifyPosition({start: open.start, end: open.end}) +\n        ')' +\n        place,\n      position,\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnExitError}\n   */\n  function onErrorLeftIsTag(a, b) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    throw new VFileMessage(\n      'Expected the closing tag `' +\n        serializeAbbreviatedTag(tag) +\n        '` either after the end of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.end) +\n        ') or another opening tag after the start of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.start) +\n        ')',\n      {start: a.start, end: a.end},\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * Serialize a tag, excluding attributes.\n   * `self-closing` is not supported, because we don’t need it yet.\n   *\n   * @param {Tag} tag\n   * @returns {string}\n   */\n  function serializeAbbreviatedTag(tag) {\n    return '<' + (tag.close ? '/' : '') + (tag.name || '') + '>'\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX JSX.\n *\n * This extension configures `mdast-util-to-markdown` with\n * `options.fences: true` and `options.resourceLink: true` too, do not\n * overwrite them!\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX JSX.\n */\nexport function mdxJsxToMarkdown(options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const quoteSmart = options_.quoteSmart || false\n  const tightSelfClosing = options_.tightSelfClosing || false\n  const printWidth = options_.printWidth || Number.POSITIVE_INFINITY\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error(\n      'Cannot serialize attribute values with `' +\n        quote +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  mdxElement.peek = peekElement\n\n  return {\n    handlers: {\n      mdxJsxFlowElement: mdxElement,\n      mdxJsxTextElement: mdxElement\n    },\n    unsafe: [\n      {character: '<', inConstruct: ['phrasing']},\n      {atBreak: true, character: '<'}\n    ],\n    // Always generate fenced code (never indented code).\n    fences: true,\n    // Always generate links with resources (never autolinks).\n    resourceLink: true\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n   */\n  // eslint-disable-next-line complexity\n  function mdxElement(node, _, context, safeOptions) {\n    const flow = node.type === 'mdxJsxFlowElement'\n    const selfClosing = node.name\n      ? !node.children || node.children.length === 0\n      : false\n    const depth = inferDepth(context)\n    const currentIndent = createIndent(depth)\n    const trackerOneLine = track(safeOptions)\n    const trackerMultiLine = track(safeOptions)\n    /** @type {Array<string>} */\n    const serializedAttributes = []\n    const prefix = (flow ? currentIndent : '') + '<' + (node.name || '')\n    const exit = context.enter(node.type)\n\n    trackerOneLine.move(prefix)\n    trackerMultiLine.move(prefix)\n\n    // None.\n    if (node.attributes && node.attributes.length > 0) {\n      if (!node.name) {\n        throw new Error('Cannot serialize fragment w/ attributes')\n      }\n\n      let index = -1\n      while (++index < node.attributes.length) {\n        const attribute = node.attributes[index]\n        /** @type {string} */\n        let result\n\n        if (attribute.type === 'mdxJsxExpressionAttribute') {\n          result = '{' + (attribute.value || '') + '}'\n        } else {\n          if (!attribute.name) {\n            throw new Error('Cannot serialize attribute w/o name')\n          }\n\n          const value = attribute.value\n          const left = attribute.name\n          /** @type {string} */\n          let right = ''\n\n          if (value === undefined || value === null) {\n            // Empty.\n          } else if (typeof value === 'object') {\n            right = '{' + (value.value || '') + '}'\n          } else {\n            // If the alternative is less common than `quote`, switch.\n            const appliedQuote =\n              quoteSmart && ccount(value, quote) > ccount(value, alternative)\n                ? alternative\n                : quote\n            right =\n              appliedQuote +\n              stringifyEntitiesLight(value, {subset: [appliedQuote]}) +\n              appliedQuote\n          }\n\n          result = left + (right ? '=' : '') + right\n        }\n\n        serializedAttributes.push(result)\n      }\n    }\n\n    let attributesOnTheirOwnLine = false\n    const attributesOnOneLine = serializedAttributes.join(' ')\n\n    if (\n      // Block:\n      flow &&\n      // Including a line ending (expressions).\n      (/\\r?\\n|\\r/.test(attributesOnOneLine) ||\n        // Current position (including `<tag`).\n        trackerOneLine.current().now.column +\n          // -1 because columns, +1 for ` ` before attributes.\n          // Attributes joined by spaces.\n          attributesOnOneLine.length +\n          // ` />`.\n          (selfClosing ? (tightSelfClosing ? 2 : 3) : 1) >\n          printWidth)\n    ) {\n      attributesOnTheirOwnLine = true\n    }\n\n    let tracker = trackerOneLine\n    let value = prefix\n\n    if (attributesOnTheirOwnLine) {\n      tracker = trackerMultiLine\n\n      let index = -1\n\n      while (++index < serializedAttributes.length) {\n        // Only indent first line of of attributes, we can’t indent attribute\n        // values.\n        serializedAttributes[index] =\n          currentIndent + indent + serializedAttributes[index]\n      }\n\n      value += tracker.move(\n        '\\n' + serializedAttributes.join('\\n') + '\\n' + currentIndent\n      )\n    } else if (attributesOnOneLine) {\n      value += tracker.move(' ' + attributesOnOneLine)\n    }\n\n    if (selfClosing) {\n      value += tracker.move(\n        (tightSelfClosing || attributesOnTheirOwnLine ? '' : ' ') + '/'\n      )\n    }\n\n    value += tracker.move('>')\n\n    if (node.children && node.children.length > 0) {\n      if (node.type === 'mdxJsxTextElement') {\n        value += tracker.move(\n          containerPhrasing(node, context, {\n            ...tracker.current(),\n            before: '>',\n            after: '<'\n          })\n        )\n      } else {\n        tracker.shift(2)\n        value += tracker.move('\\n')\n        value += tracker.move(containerFlow(node, context, tracker.current()))\n        value += tracker.move('\\n')\n      }\n    }\n\n    if (!selfClosing) {\n      value += tracker.move(\n        (flow ? currentIndent : '') + '</' + (node.name || '') + '>'\n      )\n    }\n\n    exit()\n    return value\n  }\n}\n\n// Modified copy of:\n// <https://github.com/syntax-tree/mdast-util-to-markdown/blob/a381cbc/lib/util/container-flow.js>.\n//\n// To do: add `indent` support to `mdast-util-to-markdown`.\n// As indents are only used for JSX, it’s fine for now, but perhaps better\n// there.\n/**\n * @param {MdxJsxFlowElement} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {ReturnType<Tracker['current']>} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children\n  const tracker = state.createTracker(info)\n  const currentIndent = createIndent(inferDepth(state))\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    const childInfo = {before: '\\n', after: '\\n', ...tracker.current()}\n\n    const result = state.handle(child, parent, state, childInfo)\n\n    const serializedChild =\n      child.type === 'mdxJsxFlowElement'\n        ? result\n        : indentLines(result, function (line, _, blank) {\n            return (blank ? '' : currentIndent) + line\n          })\n\n    results.push(tracker.move(serializedChild))\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move('\\n\\n'))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n *\n * @param {State} context\n * @returns {number}\n */\nfunction inferDepth(context) {\n  let depth = 0\n\n  for (const x of context.stack) {\n    if (x === 'mdxJsxFlowElement') {\n      depth++\n    }\n  }\n\n  return depth\n}\n\n/**\n * @param {number} depth\n * @returns {string}\n */\nfunction createIndent(depth) {\n  return indent.repeat(depth)\n}\n\n/**\n * @type {ToMarkdownHandle}\n */\nfunction peekElement() {\n  return '<'\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 23253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23258, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-jsx@2.1.4/node_modules/mdast-util-mdx-jsx/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 23266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23271, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/track.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;;;;CAIC;;;AACM,SAAS,MAAM,MAAM;IAC1B,6EAA6E;IAC7E,aAAa;IACb,oBAAoB,GACpB,MAAM,UAAU,UAAU,CAAC;IAC3B,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC;IAC5B,IAAI,YAAY,QAAQ,SAAS,IAAI;IACrC,IAAI,OAAO,IAAI,IAAI,IAAI;IACvB,IAAI,SAAS,IAAI,MAAM,IAAI;IAE3B,OAAO;QAAC;QAAM;QAAS;IAAK;IAE5B;;;;GAIC,GACD,SAAS;QACP,OAAO;YAAC,KAAK;gBAAC;gBAAM;YAAM;YAAG;QAAS;IACxC;IAEA;;;;GAIC,GACD,SAAS,MAAM,KAAK;QAClB,aAAa;IACf;IAEA;;;;GAIC,GACD,SAAS,KAAK,KAAK;QACjB,6DAA6D;QAC7D,MAAM,QAAQ,SAAS;QACvB,MAAM,SAAS,MAAM,KAAK,CAAC;QAC3B,MAAM,OAAO,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;QACtC,QAAQ,OAAO,MAAM,GAAG;QACxB,SACE,OAAO,MAAM,KAAK,IAAI,SAAS,KAAK,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG;QACjE,OAAO;IACT;AACF"}},
    {"offset": {"line": 23330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23335, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED,MAAM,MAAM;AAKL,SAAS,YAAY,KAAK,EAAE,GAAG;IACpC,0BAA0B,GAC1B,MAAM,SAAS,EAAE;IACjB,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,mCAAmC,GACnC,IAAI;IAEJ,MAAQ,QAAQ,IAAI,IAAI,CAAC,OAAS;QAChC,IAAI,MAAM,KAAK,CAAC,OAAO,MAAM,KAAK;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;QACpB,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM;QACrC;IACF;IAEA,IAAI,MAAM,KAAK,CAAC;IAEhB,OAAO,OAAO,IAAI,CAAC;IAEnB;;GAEC,GACD,SAAS,IAAI,KAAK;QAChB,OAAO,IAAI,CAAC,IAAI,OAAO,MAAM,CAAC;IAChC;AACF"}},
    {"offset": {"line": 23360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23365, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-to-markdown@1.5.0/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC,GAED;;;;;;;;;;;;;CAaC;;;AACM,SAAS,kBAAkB,MAAM,EAAE,KAAK,EAAE,IAAI;IACnD,MAAM,aAAa,MAAM,UAAU;IACnC,MAAM,WAAW,OAAO,QAAQ,IAAI,EAAE;IACtC,0BAA0B,GAC1B,MAAM,UAAU,EAAE;IAClB,IAAI,QAAQ,CAAC;IACb,IAAI,SAAS,KAAK,MAAM;IAExB,WAAW,IAAI,CAAC,CAAC;IACjB,IAAI,UAAU,MAAM,aAAa,CAAC;IAElC,MAAO,EAAE,QAAQ,SAAS,MAAM,CAAE;QAChC,MAAM,QAAQ,QAAQ,CAAC,MAAM;QAC7B,mBAAmB,GACnB,IAAI;QAEJ,UAAU,CAAC,WAAW,MAAM,GAAG,EAAE,GAAG;QAEpC,IAAI,QAAQ,IAAI,SAAS,MAAM,EAAE;YAC/B,mBAAmB,GACnB,oDAAoD;YACpD,IAAI,SAAS,MAAM,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;YAC5D,mBAAmB,GACnB,oDAAoD;YACpD,IAAI,UAAU,OAAO,IAAI,EAAE,SAAS,OAAO,IAAI;YAC/C,QAAQ,SACJ,OAAO,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,OAAO;gBACzC,QAAQ;gBACR,OAAO;gBACP,GAAG,QAAQ,OAAO,EAAE;YACtB,GAAG,MAAM,CAAC,KACV;QACN,OAAO;YACL,QAAQ,KAAK,KAAK;QACpB;QAEA,0EAA0E;QAC1E,qEAAqE;QACrE,UAAU;QACV,4EAA4E;QAC5E,sDAAsD;QACtD,yEAAyE;QACzE,IACE,QAAQ,MAAM,GAAG,KACjB,CAAC,WAAW,QAAQ,WAAW,IAAI,KACnC,MAAM,IAAI,KAAK,QACf;YACA,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,GAAG,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,CAAC,OAAO,CAC/D,eACA;YAEF,SAAS;YAET,0CAA0C;YAC1C,UAAU,MAAM,aAAa,CAAC;YAC9B,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC;QAC5B;QAEA,QAAQ,IAAI,CACV,QAAQ,IAAI,CACV,MAAM,MAAM,CAAC,OAAO,QAAQ,OAAO;YACjC,GAAG,QAAQ,OAAO,EAAE;YACpB;YACA;QACF;QAIJ,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;IAC9C;IAEA,WAAW,GAAG;IAEd,OAAO,QAAQ,IAAI,CAAC;AACtB"}},
    {"offset": {"line": 23435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23440, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-expression@1.3.2/node_modules/mdast-util-mdx-expression/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n *\n * @typedef {import('../index.js').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('../index.js').MdxTextExpression} MdxTextExpression\n */\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX expressions.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxExpressionFromMarkdown = {\n  enter: {\n    mdxFlowExpression: enterMdxFlowExpression,\n    mdxTextExpression: enterMdxTextExpression\n  },\n  exit: {\n    mdxFlowExpression: exitMdxExpression,\n    mdxFlowExpressionChunk: exitMdxExpressionData,\n    mdxTextExpression: exitMdxExpression,\n    mdxTextExpressionChunk: exitMdxExpressionData\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxExpressionToMarkdown = {\n  handlers: {\n    mdxFlowExpression: handleMdxExpression,\n    mdxTextExpression: handleMdxExpression\n  },\n  unsafe: [\n    {character: '{', inConstruct: ['phrasing']},\n    {atBreak: true, character: '{'}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxFlowExpression(token) {\n  this.enter({type: 'mdxFlowExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxTextExpression(token) {\n  this.enter({type: 'mdxTextExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpression(token) {\n  const value = this.resume()\n  /** @type {Program | undefined} */\n  // @ts-expect-error: estree.\n  const estree = token.estree\n  const node = /** @type {MdxFlowExpression | MdxTextExpression} */ (\n    this.exit(token)\n  )\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpressionData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxFlowExpression | MdxTextExpression} node\n */\nfunction handleMdxExpression(node) {\n  const value = node.value || ''\n  return '{' + value + '}'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC,GAED;;;;;;;CAOC;;;;AACM,MAAM,4BAA4B;IACvC,OAAO;QACL,mBAAmB;QACnB,mBAAmB;IACrB;IACA,MAAM;QACJ,mBAAmB;QACnB,wBAAwB;QACxB,mBAAmB;QACnB,wBAAwB;IAC1B;AACF;AAOO,MAAM,0BAA0B;IACrC,UAAU;QACR,mBAAmB;QACnB,mBAAmB;IACrB;IACA,QAAQ;QACN;YAAC,WAAW;YAAK,aAAa;gBAAC;aAAW;QAAA;QAC1C;YAAC,SAAS;YAAM,WAAW;QAAG;KAC/B;AACH;AAEA;;;CAGC,GACD,SAAS,uBAAuB,KAAK;IACnC,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAqB,OAAO;IAAE,GAAG;IACnD,IAAI,CAAC,MAAM;AACb;AAEA;;;CAGC,GACD,SAAS,uBAAuB,KAAK;IACnC,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAqB,OAAO;IAAE,GAAG;IACnD,IAAI,CAAC,MAAM;AACb;AAEA;;;CAGC,GACD,SAAS,kBAAkB,KAAK;IAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM;IACzB,gCAAgC,GAChC,4BAA4B;IAC5B,MAAM,SAAS,MAAM,MAAM;IAC3B,MAAM,OACJ,IAAI,CAAC,IAAI,CAAC;IAEZ,KAAK,KAAK,GAAG;IAEb,IAAI,QAAQ;QACV,KAAK,IAAI,GAAG;YAAC;QAAM;IACrB;AACF;AAEA;;;CAGC,GACD,SAAS,sBAAsB,KAAK;IAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC;AAEA;;;CAGC,GACD,SAAS,oBAAoB,IAAI;IAC/B,MAAM,QAAQ,KAAK,KAAK,IAAI;IAC5B,OAAO,MAAM,QAAQ;AACvB"}},
    {"offset": {"line": 23542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23547, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-expression@1.3.2/node_modules/mdast-util-mdx-expression/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 23555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23560, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-expression@2.0.0/node_modules/mdast-util-mdx-expression/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('../index.js').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('../index.js').MdxTextExpression} MdxTextExpression\n */\n\nimport {ok as assert} from 'devlop'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX expressions\n * in markdown.\n *\n * When using the micromark syntax extension with `addResult`, nodes will have\n * a `data.estree` field set to an ESTree `Program` node.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX expressions.\n */\nexport function mdxExpressionFromMarkdown() {\n  return {\n    enter: {\n      mdxFlowExpression: enterMdxFlowExpression,\n      mdxTextExpression: enterMdxTextExpression\n    },\n    exit: {\n      mdxFlowExpression: exitMdxExpression,\n      mdxFlowExpressionChunk: exitMdxExpressionData,\n      mdxTextExpression: exitMdxExpression,\n      mdxTextExpressionChunk: exitMdxExpressionData\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX expressions\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX expressions.\n */\nexport function mdxExpressionToMarkdown() {\n  return {\n    handlers: {\n      mdxFlowExpression: handleMdxExpression,\n      mdxTextExpression: handleMdxExpression\n    },\n    unsafe: [\n      {character: '{', inConstruct: ['phrasing']},\n      {atBreak: true, character: '{'}\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxFlowExpression(token) {\n  this.enter({type: 'mdxFlowExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxTextExpression(token) {\n  this.enter({type: 'mdxTextExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpression(token) {\n  const value = this.resume()\n  const estree = token.estree\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression')\n  this.exit(token)\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpressionData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxFlowExpression | MdxTextExpression} node\n */\nfunction handleMdxExpression(node) {\n  const value = node.value || ''\n  return '{' + value + '}'\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;;;;AAcM,SAAS;IACd,OAAO;QACL,OAAO;YACL,mBAAmB;YACnB,mBAAmB;QACrB;QACA,MAAM;YACJ,mBAAmB;YACnB,wBAAwB;YACxB,mBAAmB;YACnB,wBAAwB;QAC1B;IACF;AACF;AASO,SAAS;IACd,OAAO;QACL,UAAU;YACR,mBAAmB;YACnB,mBAAmB;QACrB;QACA,QAAQ;YACN;gBAAC,WAAW;gBAAK,aAAa;oBAAC;iBAAW;YAAA;YAC1C;gBAAC,SAAS;gBAAM,WAAW;YAAG;SAC/B;IACH;AACF;AAEA;;;CAGC,GACD,SAAS,uBAAuB,KAAK;IACnC,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAqB,OAAO;IAAE,GAAG;IACnD,IAAI,CAAC,MAAM;AACb;AAEA;;;CAGC,GACD,SAAS,uBAAuB,KAAK;IACnC,IAAI,CAAC,KAAK,CAAC;QAAC,MAAM;QAAqB,OAAO;IAAE,GAAG;IACnD,IAAI,CAAC,MAAM;AACb;AAEA;;;CAGC,GACD,SAAS,kBAAkB,KAAK;IAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM;IACzB,MAAM,SAAS,MAAM,MAAM;IAC3B,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAC9C,+LAAO,KAAK,IAAI,KAAK,uBAAuB,KAAK,IAAI,KAAK;IAC1D,IAAI,CAAC,IAAI,CAAC;IACV,KAAK,KAAK,GAAG;IAEb,IAAI,QAAQ;QACV,KAAK,IAAI,GAAG;YAAC;QAAM;IACrB;AACF;AAEA;;;CAGC,GACD,SAAS,sBAAsB,KAAK;IAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC;AAEA;;;CAGC,GACD,SAAS,oBAAoB,IAAI;IAC/B,MAAM,QAAQ,KAAK,KAAK,IAAI;IAC5B,OAAO,MAAM,QAAQ;AACvB"}},
    {"offset": {"line": 23661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23666, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx-expression@2.0.0/node_modules/mdast-util-mdx-expression/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 23674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23679, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx@2.0.1/node_modules/mdast-util-mdx/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpression} MdxTextExpression\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsm} MdxjsEsm\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElement} MdxJsxTextElement\n * @typedef {import('mdast-util-mdx-jsx').ToMarkdownOptions} ToMarkdownOptions\n */\n\nimport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from 'mdast-util-mdx-expression'\nimport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from 'mdast-util-mdx-jsx'\nimport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from 'mdast-util-mdxjs-esm'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n *\n *   When using the syntax extensions with `addResult`, ESM and expression\n *   nodes will have `data.estree` fields set to ESTree `Program` node.\n */\nexport function mdxFromMarkdown() {\n  return [mdxExpressionFromMarkdown, mdxJsxFromMarkdown(), mdxjsEsmFromMarkdown]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n */\nexport function mdxToMarkdown(options) {\n  return {\n    extensions: [\n      mdxExpressionToMarkdown,\n      mdxJsxToMarkdown(options),\n      mdxjsEsmToMarkdown\n    ]\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;CAaC;;;;;;;;;;;AAoBM,SAAS;IACd,OAAO;;QAA4B;;KAA2C;AAChF;AAYO,SAAS,cAAc,OAAO;IACnC,OAAO;QACL,YAAY;;YAEV,0OAAiB;;SAElB;IACH;AACF"}},
    {"offset": {"line": 23719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23724, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx@3.0.0/node_modules/mdast-util-mdx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-mdx-jsx').ToMarkdownOptions} ToMarkdownOptions\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from 'mdast-util-mdx-expression'\nimport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from 'mdast-util-mdx-jsx'\nimport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from 'mdast-util-mdxjs-esm'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n *\n *   When using the syntax extensions with `addResult`, ESM and expression\n *   nodes will have `data.estree` fields set to ESTree `Program` node.\n */\nexport function mdxFromMarkdown() {\n  return [\n    mdxExpressionFromMarkdown(),\n    mdxJsxFromMarkdown(),\n    mdxjsEsmFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n */\nexport function mdxToMarkdown(options) {\n  return {\n    extensions: [\n      mdxExpressionToMarkdown(),\n      mdxJsxToMarkdown(options),\n      mdxjsEsmToMarkdown()\n    ]\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;;;AAoBM,SAAS;IACd,OAAO;QACL;QACA;QACA;KACD;AACH;AAYO,SAAS,cAAc,OAAO;IACnC,OAAO;QACL,YAAY;YACV;YACA,0OAAiB;YACjB;SACD;IACH;AACF"}},
    {"offset": {"line": 23755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23760, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/mdast-util-mdx@3.0.0/node_modules/mdast-util-mdx/index.js"],"sourcesContent":["// Note: types exposed from `index.d.ts`.\nexport {mdxFromMarkdown, mdxToMarkdown} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,yCAAyC"}},
    {"offset": {"line": 23768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23773, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-visit@1.2.1/node_modules/estree-util-visit/lib/color.js"],"sourcesContent":["/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,MAAM,CAAC;IACrB,OAAO,eAAe,IAAI;AAC5B"}},
    {"offset": {"line": 23782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23787, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-visit@1.2.1/node_modules/estree-util-visit/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @typedef {CONTINUE | SKIP | EXIT} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed), when moving in an array.\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n */\n\n/**\n * @callback Visitor\n *   Handle a node.\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node`, the `Visitor` should\n *   return a new `Index` to specify the sibling to traverse after `node` is\n *   traversed.\n *   Adding or removing next siblings of `node` is handled as expected without\n *   needing to return a new `Index`.\n * @param {Node} node\n *   Found node.\n * @param {string | null} key\n *   Field at which `node` lives in its parent (or where a list of nodes lives).\n * @param {number | null} index\n *   Index where `node` lives if `parent[key]` is an array.\n * @param {Array<Node>} ancestors\n *   Ancestors of `node`.\n * @returns {Action | Index | ActionTuple | null | undefined | void}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @typedef Visitors\n *   Handle nodes when entering (preorder) and leaving (postorder).\n * @property {Visitor | null | undefined} [enter]\n *   Handle nodes when entering (preorder).\n * @property {Visitor | null | undefined} [leave]\n *   Handle nodes when leaving (postorder).\n */\n\nimport {color} from './color.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = Symbol('continue')\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = Symbol('exit')\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = Symbol('skip')\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) and/or *postorder* (**LRN**).\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor(s) when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * @param {Node} tree\n *   Tree to traverse\n * @param {Visitor | Visitors | null | undefined} [visitor]\n *   Handle each node.\n * @returns {void}\n *   Nothing.\n */\nexport function visit(tree, visitor) {\n  /** @type {Visitor | undefined} */\n  let enter\n  /** @type {Visitor | undefined} */\n  let leave\n\n  if (typeof visitor === 'function') {\n    enter = visitor\n  } else if (visitor && typeof visitor === 'object') {\n    if (visitor.enter) enter = visitor.enter\n    if (visitor.leave) leave = visitor.leave\n  }\n\n  build(tree, null, null, [])()\n\n  /**\n   * @param {Node} node\n   * @param {string | null} key\n   * @param {number | null} index\n   * @param {Array<Node>} parents\n   */\n  function build(node, key, index, parents) {\n    if (nodelike(node)) {\n      visit.displayName = 'node (' + color(node.type) + ')'\n    }\n\n    return visit\n\n    /**\n     * @returns {ActionTuple}\n     */\n    function visit() {\n      /** @type {ActionTuple} */\n      const result = enter ? toResult(enter(node, key, index, parents)) : []\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      if (result[0] !== SKIP) {\n        /** @type {keyof node} */\n        let cKey\n\n        for (cKey in node) {\n          if (\n            own.call(node, cKey) &&\n            node[cKey] &&\n            typeof node[cKey] === 'object' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'data' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'position'\n          ) {\n            const grandparents = parents.concat(node)\n            /** @type {unknown} */\n            const value = node[cKey]\n\n            if (Array.isArray(value)) {\n              const nodes = /** @type {Array<unknown>} */ (value)\n              let cIndex = 0\n\n              while (cIndex > -1 && cIndex < nodes.length) {\n                const subvalue = nodes[cIndex]\n\n                if (nodelike(subvalue)) {\n                  const subresult = build(\n                    subvalue,\n                    cKey,\n                    cIndex,\n                    grandparents\n                  )()\n                  if (subresult[0] === EXIT) return subresult\n                  cIndex =\n                    typeof subresult[1] === 'number' ? subresult[1] : cIndex + 1\n                } else {\n                  cIndex++\n                }\n              }\n            } else if (nodelike(value)) {\n              const subresult = build(value, cKey, null, grandparents)()\n              if (subresult[0] === EXIT) return subresult\n            }\n          }\n        }\n      }\n\n      return leave ? toResult(leave(node, key, index, parents)) : result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {Action | Index | ActionTuple | null | undefined | void} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n/**\n * Check if something looks like a node.\n *\n * @param {unknown} value\n *   Anything.\n * @returns {value is Node}\n *   Whether `value` looks like a node.\n */\nfunction nodelike(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'type' in value &&\n      typeof value.type === 'string' &&\n      value.type.length > 0\n  )\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCC,GAED;;;;;;;CAOC;;;;;;;;;AAID,MAAM,MAAM,CAAC,EAAE,cAAc;AAKtB,MAAM,WAAW,OAAO;AAKxB,MAAM,OAAO,OAAO;AAKpB,MAAM,OAAO,OAAO;AAoBpB,SAAS,MAAM,IAAI,EAAE,OAAO;IACjC,gCAAgC,GAChC,IAAI;IACJ,gCAAgC,GAChC,IAAI;IAEJ,IAAI,OAAO,YAAY,YAAY;QACjC,QAAQ;IACV,OAAO,IAAI,WAAW,OAAO,YAAY,UAAU;QACjD,IAAI,QAAQ,KAAK,EAAE,QAAQ,QAAQ,KAAK;QACxC,IAAI,QAAQ,KAAK,EAAE,QAAQ,QAAQ,KAAK;IAC1C;IAEA,MAAM,MAAM,MAAM,MAAM,EAAE;IAE1B;;;;;GAKC,GACD,SAAS,MAAM,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO;QACtC,IAAI,SAAS,OAAO;YAClB,MAAM,WAAW,GAAG,WAAW,8NAAM,KAAK,IAAI,IAAI;QACpD;QAEA,OAAO;QAEP;;KAEC,GACD,SAAS;YACP,wBAAwB,GACxB,MAAM,SAAS,QAAQ,SAAS,MAAM,MAAM,KAAK,OAAO,YAAY,EAAE;YAEtE,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACtB,OAAO;YACT;YAEA,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACtB,uBAAuB,GACvB,IAAI;gBAEJ,IAAK,QAAQ,KAAM;oBACjB,IACE,IAAI,IAAI,CAAC,MAAM,SACf,IAAI,CAAC,KAAK,IACV,OAAO,IAAI,CAAC,KAAK,KAAK,YACtB,4CAA4C;oBAC5C,SAAS,UACT,4CAA4C;oBAC5C,SAAS,YACT;wBACA,MAAM,eAAe,QAAQ,MAAM,CAAC;wBACpC,oBAAoB,GACpB,MAAM,QAAQ,IAAI,CAAC,KAAK;wBAExB,IAAI,MAAM,OAAO,CAAC,QAAQ;4BACxB,MAAM,QAAuC;4BAC7C,IAAI,SAAS;4BAEb,MAAO,SAAS,CAAC,KAAK,SAAS,MAAM,MAAM,CAAE;gCAC3C,MAAM,WAAW,KAAK,CAAC,OAAO;gCAE9B,IAAI,SAAS,WAAW;oCACtB,MAAM,YAAY,MAChB,UACA,MACA,QACA;oCAEF,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM,OAAO;oCAClC,SACE,OAAO,SAAS,CAAC,EAAE,KAAK,WAAW,SAAS,CAAC,EAAE,GAAG,SAAS;gCAC/D,OAAO;oCACL;gCACF;4BACF;wBACF,OAAO,IAAI,SAAS,QAAQ;4BAC1B,MAAM,YAAY,MAAM,OAAO,MAAM,MAAM;4BAC3C,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM,OAAO;wBACpC;oBACF;gBACF;YACF;YAEA,OAAO,QAAQ,SAAS,MAAM,MAAM,KAAK,OAAO,YAAY;QAC9D;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,SAAS,KAAK;IACrB,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO;IACT;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;YAAC;YAAU;SAAM;IAC1B;IAEA,OAAO;QAAC;KAAM;AAChB;AAEA;;;;;;;CAOC,GACD,SAAS,SAAS,KAAK;IACrB,OAAO,QACL,SACE,OAAO,UAAU,YACjB,UAAU,SACV,OAAO,MAAM,IAAI,KAAK,YACtB,MAAM,IAAI,CAAC,MAAM,GAAG;AAE1B"}},
    {"offset": {"line": 23946, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23951, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-visit@1.2.1/node_modules/estree-util-visit/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Action} Action\n * @typedef {import('./lib/index.js').ActionTuple} ActionTuple\n * @typedef {import('./lib/index.js').Index} Index\n * @typedef {import('./lib/index.js').Visitor} Visitor\n * @typedef {import('./lib/index.js').Visitors} Visitors\n */\n\nexport {CONTINUE, EXIT, SKIP, visit} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;;;;CAMC"}},
    {"offset": {"line": 23966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23971, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-visit@2.0.0/node_modules/estree-util-visit/lib/color.node.js"],"sourcesContent":["/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,MAAM,CAAC;IACrB,OAAO,eAAe,IAAI;AAC5B"}},
    {"offset": {"line": 23980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23985, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-visit@2.0.0/node_modules/estree-util-visit/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @typedef {CONTINUE | EXIT | SKIP} Action\n *   Union of the action types.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed), when moving in an array.\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n */\n\n/**\n * @callback Visitor\n *   Handle a node.\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node`, the `Visitor` should\n *   return a new `Index` to specify the sibling to traverse after `node` is\n *   traversed.\n *   Adding or removing next siblings of `node` is handled as expected without\n *   needing to return a new `Index`.\n * @param {Node} node\n *   Found node.\n * @param {string | undefined} key\n *   Field at which `node` lives in its parent (or where a list of nodes lives).\n * @param {number | undefined} index\n *   Index where `node` lives if `parent[key]` is an array.\n * @param {Array<Node>} ancestors\n *   Ancestors of `node`.\n * @returns {Action | ActionTuple | Index | null | undefined | void}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @typedef Visitors\n *   Handle nodes when entering (preorder) and leaving (postorder).\n * @property {Visitor | null | undefined} [enter]\n *   Handle nodes when entering (preorder) (optional).\n * @property {Visitor | null | undefined} [leave]\n *   Handle nodes when leaving (postorder) (optional).\n */\n\nimport {color} from 'estree-util-visit/do-not-use-color'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = Symbol('continue')\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = Symbol('exit')\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = Symbol('skip')\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) and/or *postorder* (**LRN**).\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor(s) when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * @param {Node} tree\n *   Tree to traverse\n * @param {Visitor | Visitors | null | undefined} [visitor]\n *   Handle each node (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport function visit(tree, visitor) {\n  /** @type {Visitor | undefined} */\n  let enter\n  /** @type {Visitor | undefined} */\n  let leave\n\n  if (typeof visitor === 'function') {\n    enter = visitor\n  } else if (visitor && typeof visitor === 'object') {\n    if (visitor.enter) enter = visitor.enter\n    if (visitor.leave) leave = visitor.leave\n  }\n\n  build(tree, undefined, undefined, [])()\n\n  /**\n   * @param {Node} node\n   * @param {string | undefined} key\n   * @param {number | undefined} index\n   * @param {Array<Node>} parents\n   */\n  function build(node, key, index, parents) {\n    if (nodelike(node)) {\n      visit.displayName = 'node (' + color(node.type) + ')'\n    }\n\n    return visit\n\n    /**\n     * @returns {ActionTuple}\n     */\n    function visit() {\n      /** @type {ActionTuple} */\n      const result = enter ? toResult(enter(node, key, index, parents)) : []\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      if (result[0] !== SKIP) {\n        /** @type {keyof node} */\n        let cKey\n\n        for (cKey in node) {\n          if (\n            own.call(node, cKey) &&\n            node[cKey] &&\n            typeof node[cKey] === 'object' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'data' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'position'\n          ) {\n            const grandparents = parents.concat(node)\n            /** @type {unknown} */\n            const value = node[cKey]\n\n            if (Array.isArray(value)) {\n              const nodes = /** @type {Array<unknown>} */ (value)\n              let cIndex = 0\n\n              while (cIndex > -1 && cIndex < nodes.length) {\n                const subvalue = nodes[cIndex]\n\n                if (nodelike(subvalue)) {\n                  const subresult = build(\n                    subvalue,\n                    cKey,\n                    cIndex,\n                    grandparents\n                  )()\n                  if (subresult[0] === EXIT) return subresult\n                  cIndex =\n                    typeof subresult[1] === 'number' ? subresult[1] : cIndex + 1\n                } else {\n                  cIndex++\n                }\n              }\n            } else if (nodelike(value)) {\n              const subresult = build(value, cKey, undefined, grandparents)()\n              if (subresult[0] === EXIT) return subresult\n            }\n          }\n        }\n      }\n\n      return leave ? toResult(leave(node, key, index, parents)) : result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {Action | ActionTuple | Index | null | undefined | void} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n/**\n * Check if something looks like a node.\n *\n * @param {unknown} value\n *   Anything.\n * @returns {value is Node}\n *   Whether `value` looks like a node.\n */\nfunction nodelike(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'type' in value &&\n      typeof value.type === 'string' &&\n      value.type.length > 0\n  )\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;;;;;CAeC,GAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCC,GAED;;;;;;;CAOC;;;;;;;;;AAID,MAAM,MAAM,CAAC,EAAE,cAAc;AAKtB,MAAM,WAAW,OAAO;AAKxB,MAAM,OAAO,OAAO;AAKpB,MAAM,OAAO,OAAO;AAoBpB,SAAS,MAAM,IAAI,EAAE,OAAO;IACjC,gCAAgC,GAChC,IAAI;IACJ,gCAAgC,GAChC,IAAI;IAEJ,IAAI,OAAO,YAAY,YAAY;QACjC,QAAQ;IACV,OAAO,IAAI,WAAW,OAAO,YAAY,UAAU;QACjD,IAAI,QAAQ,KAAK,EAAE,QAAQ,QAAQ,KAAK;QACxC,IAAI,QAAQ,KAAK,EAAE,QAAQ,QAAQ,KAAK;IAC1C;IAEA,MAAM,MAAM,WAAW,WAAW,EAAE;IAEpC;;;;;GAKC,GACD,SAAS,MAAM,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO;QACtC,IAAI,SAAS,OAAO;YAClB,MAAM,WAAW,GAAG,WAAW,sOAAM,KAAK,IAAI,IAAI;QACpD;QAEA,OAAO;QAEP;;KAEC,GACD,SAAS;YACP,wBAAwB,GACxB,MAAM,SAAS,QAAQ,SAAS,MAAM,MAAM,KAAK,OAAO,YAAY,EAAE;YAEtE,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACtB,OAAO;YACT;YAEA,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM;gBACtB,uBAAuB,GACvB,IAAI;gBAEJ,IAAK,QAAQ,KAAM;oBACjB,IACE,IAAI,IAAI,CAAC,MAAM,SACf,IAAI,CAAC,KAAK,IACV,OAAO,IAAI,CAAC,KAAK,KAAK,YACtB,4CAA4C;oBAC5C,SAAS,UACT,4CAA4C;oBAC5C,SAAS,YACT;wBACA,MAAM,eAAe,QAAQ,MAAM,CAAC;wBACpC,oBAAoB,GACpB,MAAM,QAAQ,IAAI,CAAC,KAAK;wBAExB,IAAI,MAAM,OAAO,CAAC,QAAQ;4BACxB,MAAM,QAAuC;4BAC7C,IAAI,SAAS;4BAEb,MAAO,SAAS,CAAC,KAAK,SAAS,MAAM,MAAM,CAAE;gCAC3C,MAAM,WAAW,KAAK,CAAC,OAAO;gCAE9B,IAAI,SAAS,WAAW;oCACtB,MAAM,YAAY,MAChB,UACA,MACA,QACA;oCAEF,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM,OAAO;oCAClC,SACE,OAAO,SAAS,CAAC,EAAE,KAAK,WAAW,SAAS,CAAC,EAAE,GAAG,SAAS;gCAC/D,OAAO;oCACL;gCACF;4BACF;wBACF,OAAO,IAAI,SAAS,QAAQ;4BAC1B,MAAM,YAAY,MAAM,OAAO,MAAM,WAAW;4BAChD,IAAI,SAAS,CAAC,EAAE,KAAK,MAAM,OAAO;wBACpC;oBACF;gBACF;YACF;YAEA,OAAO,QAAQ,SAAS,MAAM,MAAM,KAAK,OAAO,YAAY;QAC9D;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,SAAS,KAAK;IACrB,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,OAAO;IACT;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;YAAC;YAAU;SAAM;IAC1B;IAEA,OAAO;QAAC;KAAM;AAChB;AAEA;;;;;;;CAOC,GACD,SAAS,SAAS,KAAK;IACrB,OAAO,QACL,SACE,OAAO,UAAU,YACjB,UAAU,SACV,OAAO,MAAM,IAAI,KAAK,YACtB,MAAM,IAAI,CAAC,MAAM,GAAG;AAE1B"}},
    {"offset": {"line": 24144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24149, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/estree-util-visit@2.0.0/node_modules/estree-util-visit/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/index.js').Action} Action\n * @typedef {import('./lib/index.js').ActionTuple} ActionTuple\n * @typedef {import('./lib/index.js').Index} Index\n * @typedef {import('./lib/index.js').Visitor} Visitor\n * @typedef {import('./lib/index.js').Visitors} Visitors\n */\n\nexport {CONTINUE, EXIT, SKIP, visit} from './lib/index.js'\n"],"names":[],"mappings":"AAAA;;;;;;CAMC"}},
    {"offset": {"line": 24164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24169, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-events-to-acorn@1.2.3/node_modules/micromark-util-events-to-acorn/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('acorn').Comment} Comment\n * @typedef {import('acorn').Node} AcornNode\n * @typedef {import('acorn').Options} AcornOptions\n * @typedef {import('acorn').Token} Token\n * @typedef {import('estree').Node} EstreeNode\n * @typedef {import('estree').Program} Program\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} MicromarkPoint\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n * @typedef Acorn\n *   Acorn-like interface.\n * @property {import('acorn').parse} parse\n *   Parse a program.\n * @property {import('acorn').parseExpressionAt} parseExpressionAt\n *   Parse an expression.\n *\n * @typedef AcornLoc\n * @property {number} line\n * @property {number} column\n *\n * @typedef AcornErrorFields\n * @property {number} raisedAt\n * @property {number} pos\n * @property {AcornLoc} loc\n *\n * @typedef {Error & AcornErrorFields} AcornError\n *\n * @typedef Options\n *   Configuration.\n * @property {Acorn} acorn\n *   Typically `acorn`, object with `parse` and `parseExpressionAt` fields.\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for `acorn`.\n * @property {MicromarkPoint | null | undefined} [start]\n *   Place where events start.\n * @property {string | null | undefined} [prefix='']\n *   Text to place before events.\n * @property {string | null | undefined} [suffix='']\n *   Text to place after events.\n * @property {boolean | null | undefined} [expression=false]\n *   Whether this is a program or expression.\n * @property {boolean | null | undefined} [allowEmpty=false]\n *   Whether an empty expression is allowed (programs are always allowed to\n *   be empty).\n *\n * @typedef Result\n *   Result.\n * @property {Program | undefined} estree\n *   Program.\n * @property {AcornError | undefined} error\n *   Error if unparseable\n * @property {boolean} swallow\n *   Whether the error, if there is one, can be swallowed and more JavaScript\n *   could be valid.\n *\n * @typedef {[number, MicromarkPoint]} Stop\n *\n * @typedef Collection\n * @property {string} value\n * @property {Array<Stop>} stops\n */\n\nimport {visit} from 'estree-util-visit'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {VFileMessage} from 'vfile-message'\n\n/**\n * Parse a list of micromark events with acorn.\n *\n * @param {Array<Event>} events\n *   Events.\n * @param {Options} options\n *   Configuration.\n * @returns {Result}\n *   Result.\n */\n// eslint-disable-next-line complexity\nexport function eventsToAcorn(events, options) {\n  const prefix = options.prefix || ''\n  const suffix = options.suffix || ''\n  const acornOptions = Object.assign({}, options.acornOptions)\n  /** @type {Array<Comment>} */\n  const comments = []\n  /** @type {Array<Token>} */\n  const tokens = []\n  const onComment = acornOptions.onComment\n  const onToken = acornOptions.onToken\n  let swallow = false\n  /** @type {AcornNode | undefined} */\n  let estree\n  /** @type {AcornError | undefined} */\n  let exception\n  /** @type {AcornOptions} */\n  const acornConfig = Object.assign({}, acornOptions, {\n    onComment: comments,\n    preserveParens: true\n  })\n\n  if (onToken) {\n    acornConfig.onToken = tokens\n  }\n\n  const collection = collect(events, [\n    types.lineEnding,\n    // To do: these should be passed by users in parameters.\n    'expressionChunk', // From tests.\n    'mdxFlowExpressionChunk', // Flow chunk.\n    'mdxTextExpressionChunk', // Text chunk.\n    // JSX:\n    'mdxJsxTextTagExpressionAttributeValue',\n    'mdxJsxTextTagAttributeValueExpressionValue',\n    'mdxJsxFlowTagExpressionAttributeValue',\n    'mdxJsxFlowTagAttributeValueExpressionValue',\n    // ESM:\n    'mdxjsEsmData'\n  ])\n\n  const source = collection.value\n\n  const value = prefix + source + suffix\n  const isEmptyExpression = options.expression && empty(source)\n\n  if (isEmptyExpression && !options.allowEmpty) {\n    throw new VFileMessage(\n      'Unexpected empty expression',\n      parseOffsetToUnistPoint(0),\n      'micromark-extension-mdx-expression:unexpected-empty-expression'\n    )\n  }\n\n  try {\n    estree =\n      options.expression && !isEmptyExpression\n        ? options.acorn.parseExpressionAt(value, 0, acornConfig)\n        : options.acorn.parse(value, acornConfig)\n  } catch (error_) {\n    const error = /** @type {AcornError} */ (error_)\n    const point = parseOffsetToUnistPoint(error.pos)\n    error.message = String(error.message).replace(/ \\(\\d+:\\d+\\)$/, '')\n    // Always defined in our unist points that come from micromark.\n    assert(point.offset !== undefined, 'expected `offset`')\n    error.pos = point.offset\n    error.loc = {line: point.line, column: point.column - 1}\n    exception = error\n    swallow =\n      error.raisedAt >= prefix.length + source.length ||\n      // Broken comments are raised at their start, not their end.\n      error.message === 'Unterminated comment'\n  }\n\n  if (estree && options.expression && !isEmptyExpression) {\n    if (empty(value.slice(estree.end, value.length - suffix.length))) {\n      estree = {\n        type: 'Program',\n        start: 0,\n        end: prefix.length + source.length,\n        // @ts-expect-error: It’s good.\n        body: [\n          {\n            type: 'ExpressionStatement',\n            expression: estree,\n            start: 0,\n            end: prefix.length + source.length\n          }\n        ],\n        sourceType: 'module',\n        comments: []\n      }\n    } else {\n      const point = parseOffsetToUnistPoint(estree.end)\n      const error = /** @type {AcornError} */ (\n        new Error('Unexpected content after expression')\n      )\n      // Always defined in our unist points that come from micromark.\n      assert(point.offset !== undefined, 'expected `offset`')\n      error.pos = point.offset\n      error.loc = {line: point.line, column: point.column - 1}\n      exception = error\n      estree = undefined\n    }\n  }\n\n  if (estree) {\n    // @ts-expect-error: acorn *does* allow comments\n    estree.comments = comments\n\n    // @ts-expect-error: acorn looks enough like estree.\n    visit(estree, (esnode, field, index, parents) => {\n      let context = /** @type {AcornNode | Array<AcornNode>} */ (\n        parents[parents.length - 1]\n      )\n      /** @type {string | number | null} */\n      let prop = field\n\n      // Remove non-standard `ParenthesizedExpression`.\n      // @ts-expect-error: included in acorn.\n      if (esnode.type === 'ParenthesizedExpression' && context && prop) {\n        /* c8 ignore next 5 */\n        if (typeof index === 'number') {\n          // @ts-expect-error: indexable.\n          context = context[prop]\n          prop = index\n        }\n\n        // @ts-expect-error: indexable.\n        context[prop] = esnode.expression\n      }\n\n      fixPosition(esnode)\n    })\n\n    // Comment positions are fixed by `visit` because they’re in the tree.\n    if (Array.isArray(onComment)) {\n      onComment.push(...comments)\n    } else if (typeof onComment === 'function') {\n      for (const comment of comments) {\n        assert(comment.loc, 'expected `loc` on comment')\n        onComment(\n          comment.type === 'Block',\n          comment.value,\n          comment.start,\n          comment.end,\n          comment.loc.start,\n          comment.loc.end\n        )\n      }\n    }\n\n    for (const token of tokens) {\n      // Ignore tokens that ends in prefix or start in suffix:\n      if (\n        token.end <= prefix.length ||\n        token.start - prefix.length >= source.length\n      ) {\n        continue\n      }\n\n      fixPosition(token)\n\n      if (Array.isArray(onToken)) {\n        onToken.push(token)\n      } else {\n        // `tokens` are not added if `onToken` is not defined, so it must be a\n        // function.\n        assert(typeof onToken === 'function', 'expected function')\n        onToken(token)\n      }\n    }\n  }\n\n  // @ts-expect-error: It’s a program now.\n  return {estree, error: exception, swallow}\n\n  /**\n   * Update the position of a node.\n   *\n   * @param {AcornNode | EstreeNode | Token} nodeOrToken\n   * @returns {void}\n   */\n  function fixPosition(nodeOrToken) {\n    assert(\n      'start' in nodeOrToken,\n      'expected `start` in node or token from acorn'\n    )\n    assert('end' in nodeOrToken, 'expected `end` in node or token from acorn')\n    const pointStart = parseOffsetToUnistPoint(nodeOrToken.start)\n    const pointEnd = parseOffsetToUnistPoint(nodeOrToken.end)\n    // Always defined in our unist points that come from micromark.\n    assert(pointStart.offset !== undefined, 'expected `offset`')\n    assert(pointEnd.offset !== undefined, 'expected `offset`')\n    nodeOrToken.start = pointStart.offset\n    nodeOrToken.end = pointEnd.offset\n    nodeOrToken.loc = {\n      start: {\n        line: pointStart.line,\n        column: pointStart.column - 1,\n        offset: pointStart.offset\n      },\n      end: {\n        line: pointEnd.line,\n        column: pointEnd.column - 1,\n        offset: pointEnd.offset\n      }\n    }\n    nodeOrToken.range = [nodeOrToken.start, nodeOrToken.end]\n  }\n\n  /**\n   * Turn an arbitrary offset into the parsed value, into a point in the source\n   * value.\n   *\n   * @param {number} acornOffset\n   * @returns {UnistPoint}\n   */\n  function parseOffsetToUnistPoint(acornOffset) {\n    let sourceOffset = acornOffset - prefix.length\n\n    if (sourceOffset < 0) {\n      sourceOffset = 0\n    } else if (sourceOffset > source.length) {\n      sourceOffset = source.length\n    }\n\n    let point = relativeToPoint(collection.stops, sourceOffset)\n\n    if (!point) {\n      assert(\n        options.start,\n        'empty expressions are need `options.start` being passed'\n      )\n      point = {\n        line: options.start.line,\n        column: options.start.column,\n        offset: options.start.offset\n      }\n    }\n\n    return point\n  }\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return /^\\s*$/.test(\n    value\n      // Multiline comments.\n      .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n      // Line comments.\n      // EOF instead of EOL is specifically not allowed, because that would\n      // mean the closing brace is on the commented-out line\n      .replace(/\\/\\/[^\\r\\n]*(\\r\\n|\\n|\\r)/g, '')\n  )\n}\n\n// Port from <https://github.com/wooorm/markdown-rs/blob/e692ab0/src/util/mdx_collect.rs#L15>.\n/**\n * @param {Array<Event>} events\n * @param {Array<string>} names\n * @returns {Collection}\n */\nfunction collect(events, names) {\n  /** @type {Collection} */\n  const result = {value: '', stops: []}\n  let index = -1\n\n  while (++index < events.length) {\n    const event = events[index]\n\n    // Assume void.\n    if (event[0] === 'enter' && names.includes(event[1].type)) {\n      const chunks = event[2].sliceStream(event[1])\n\n      // Drop virtual spaces.\n      while (chunks.length > 0 && chunks[0] === codes.virtualSpace) {\n        chunks.shift()\n      }\n\n      const value = serializeChunks(chunks)\n      result.stops.push([result.value.length, event[1].start])\n      result.value += value\n      result.stops.push([result.value.length, event[1].end])\n    }\n  }\n\n  return result\n}\n\n// Port from <https://github.com/wooorm/markdown-rs/blob/e692ab0/src/util/location.rs#L91>.\n/**\n * Turn a relative offset into an absolute offset.\n *\n * @param {Array<Stop>} stops\n * @param {number} relative\n * @returns {UnistPoint | undefined}\n */\nfunction relativeToPoint(stops, relative) {\n  let index = 0\n\n  while (index < stops.length && stops[index][0] <= relative) {\n    index += 1\n  }\n\n  // There are no points: that only occurs if there was an empty string.\n  if (index === 0) {\n    return undefined\n  }\n\n  const [stopRelative, stopAbsolute] = stops[index - 1]\n  const rest = relative - stopRelative\n  return {\n    line: stopAbsolute.line,\n    column: stopAbsolute.column + rest,\n    offset: stopAbsolute.offset + rest\n  }\n}\n\n// Copy from <https://github.com/micromark/micromark/blob/ce3593a/packages/micromark/dev/lib/create-tokenizer.js#L595>\n// To do: expose that?\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @returns {string}\n */\nfunction serializeChunks(chunks) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = values.ht\n\n          break\n        }\n\n        /* c8 ignore next 6 */\n        case codes.virtualSpace: {\n          if (atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          // eslint-disable-next-line unicorn/prefer-code-point\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 24567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24572, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-util-events-to-acorn@2.0.2/node_modules/micromark-util-events-to-acorn/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('acorn').Comment} Comment\n * @typedef {import('acorn').Node} AcornNode\n * @typedef {import('acorn').Options} AcornOptions\n * @typedef {import('acorn').Token} Token\n * @typedef {import('estree').Node} EstreeNode\n * @typedef {import('estree').Program} Program\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} MicromarkPoint\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n * @typedef Acorn\n *   Acorn-like interface.\n * @property {import('acorn').parse} parse\n *   Parse a program.\n * @property {import('acorn').parseExpressionAt} parseExpressionAt\n *   Parse an expression.\n *\n * @typedef AcornLoc\n * @property {number} line\n * @property {number} column\n *\n * @typedef AcornErrorFields\n * @property {number} raisedAt\n * @property {number} pos\n * @property {AcornLoc} loc\n *\n * @typedef {Error & AcornErrorFields} AcornError\n *\n * @typedef Options\n *   Configuration.\n * @property {Acorn} acorn\n *   Typically `acorn`, object with `parse` and `parseExpressionAt` fields (required).\n * @property {Array<TokenType>} tokenTypes\n *   Names of (void) tokens to consider as data; `'lineEnding'` is always\n *   included (required).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for `acorn` (optional).\n * @property {MicromarkPoint | null | undefined} [start]\n *   Place where events start (optional, required if `allowEmpty`).\n * @property {string | null | undefined} [prefix='']\n *   Text to place before events (default: `''`).\n * @property {string | null | undefined} [suffix='']\n *   Text to place after events (default: `''`).\n * @property {boolean | null | undefined} [expression=false]\n *   Whether this is a program or expression (default: `false`).\n * @property {boolean | null | undefined} [allowEmpty=false]\n *   Whether an empty expression is allowed (programs are always allowed to\n *   be empty) (default: `false`).\n *\n * @typedef Result\n *   Result.\n * @property {Program | undefined} estree\n *   Program.\n * @property {AcornError | undefined} error\n *   Error if unparseable\n * @property {boolean} swallow\n *   Whether the error, if there is one, can be swallowed and more JavaScript\n *   could be valid.\n *\n * @typedef {[number, MicromarkPoint]} Stop\n *\n * @typedef Collection\n * @property {string} value\n * @property {Array<Stop>} stops\n */\n\nimport {ok as assert} from 'devlop'\nimport {visit} from 'estree-util-visit'\nimport {codes, types, values} from 'micromark-util-symbol'\nimport {VFileMessage} from 'vfile-message'\n\n/**\n * Parse a list of micromark events with acorn.\n *\n * @param {Array<Event>} events\n *   Events.\n * @param {Options} options\n *   Configuration (required).\n * @returns {Result}\n *   Result.\n */\n// eslint-disable-next-line complexity\nexport function eventsToAcorn(events, options) {\n  const prefix = options.prefix || ''\n  const suffix = options.suffix || ''\n  const acornOptions = Object.assign({}, options.acornOptions)\n  /** @type {Array<Comment>} */\n  const comments = []\n  /** @type {Array<Token>} */\n  const tokens = []\n  const onComment = acornOptions.onComment\n  const onToken = acornOptions.onToken\n  let swallow = false\n  /** @type {AcornNode | undefined} */\n  let estree\n  /** @type {AcornError | undefined} */\n  let exception\n  /** @type {AcornOptions} */\n  const acornConfig = Object.assign({}, acornOptions, {\n    onComment: comments,\n    preserveParens: true\n  })\n\n  if (onToken) {\n    acornConfig.onToken = tokens\n  }\n\n  const collection = collect(events, options.tokenTypes)\n\n  const source = collection.value\n\n  const value = prefix + source + suffix\n  const isEmptyExpression = options.expression && empty(source)\n\n  if (isEmptyExpression && !options.allowEmpty) {\n    throw new VFileMessage('Unexpected empty expression', {\n      place: parseOffsetToUnistPoint(0),\n      ruleId: 'unexpected-empty-expression',\n      source: 'micromark-extension-mdx-expression'\n    })\n  }\n\n  try {\n    estree =\n      options.expression && !isEmptyExpression\n        ? options.acorn.parseExpressionAt(value, 0, acornConfig)\n        : options.acorn.parse(value, acornConfig)\n  } catch (error_) {\n    const error = /** @type {AcornError} */ (error_)\n    const point = parseOffsetToUnistPoint(error.pos)\n    error.message = String(error.message).replace(/ \\(\\d+:\\d+\\)$/, '')\n    // Always defined in our unist points that come from micromark.\n    assert(point.offset !== undefined, 'expected `offset`')\n    error.pos = point.offset\n    error.loc = {line: point.line, column: point.column - 1}\n    exception = error\n    swallow =\n      error.raisedAt >= prefix.length + source.length ||\n      // Broken comments are raised at their start, not their end.\n      error.message === 'Unterminated comment'\n  }\n\n  if (estree && options.expression && !isEmptyExpression) {\n    if (empty(value.slice(estree.end, value.length - suffix.length))) {\n      estree = {\n        type: 'Program',\n        start: 0,\n        end: prefix.length + source.length,\n        // @ts-expect-error: It’s good.\n        body: [\n          {\n            type: 'ExpressionStatement',\n            expression: estree,\n            start: 0,\n            end: prefix.length + source.length\n          }\n        ],\n        sourceType: 'module',\n        comments: []\n      }\n    } else {\n      const point = parseOffsetToUnistPoint(estree.end)\n      const error = /** @type {AcornError} */ (\n        new Error('Unexpected content after expression')\n      )\n      // Always defined in our unist points that come from micromark.\n      assert(point.offset !== undefined, 'expected `offset`')\n      error.pos = point.offset\n      error.loc = {line: point.line, column: point.column - 1}\n      exception = error\n      estree = undefined\n    }\n  }\n\n  if (estree) {\n    // @ts-expect-error: acorn *does* allow comments\n    estree.comments = comments\n\n    // @ts-expect-error: acorn looks enough like estree.\n    visit(estree, function (esnode, field, index, parents) {\n      let context = /** @type {AcornNode | Array<AcornNode>} */ (\n        parents[parents.length - 1]\n      )\n      /** @type {number | string | undefined} */\n      let prop = field\n\n      // Remove non-standard `ParenthesizedExpression`.\n      // @ts-expect-error: included in acorn.\n      if (esnode.type === 'ParenthesizedExpression' && context && prop) {\n        /* c8 ignore next 5 */\n        if (typeof index === 'number') {\n          // @ts-expect-error: indexable.\n          context = context[prop]\n          prop = index\n        }\n\n        // @ts-expect-error: indexable.\n        context[prop] = esnode.expression\n      }\n\n      fixPosition(esnode)\n    })\n\n    // Comment positions are fixed by `visit` because they’re in the tree.\n    if (Array.isArray(onComment)) {\n      onComment.push(...comments)\n    } else if (typeof onComment === 'function') {\n      for (const comment of comments) {\n        assert(comment.loc, 'expected `loc` on comment')\n        onComment(\n          comment.type === 'Block',\n          comment.value,\n          comment.start,\n          comment.end,\n          comment.loc.start,\n          comment.loc.end\n        )\n      }\n    }\n\n    for (const token of tokens) {\n      // Ignore tokens that ends in prefix or start in suffix:\n      if (\n        token.end <= prefix.length ||\n        token.start - prefix.length >= source.length\n      ) {\n        continue\n      }\n\n      fixPosition(token)\n\n      if (Array.isArray(onToken)) {\n        onToken.push(token)\n      } else {\n        // `tokens` are not added if `onToken` is not defined, so it must be a\n        // function.\n        assert(typeof onToken === 'function', 'expected function')\n        onToken(token)\n      }\n    }\n  }\n\n  // @ts-expect-error: It’s a program now.\n  return {estree, error: exception, swallow}\n\n  /**\n   * Update the position of a node.\n   *\n   * @param {AcornNode | EstreeNode | Token} nodeOrToken\n   * @returns {undefined}\n   */\n  function fixPosition(nodeOrToken) {\n    assert(\n      'start' in nodeOrToken,\n      'expected `start` in node or token from acorn'\n    )\n    assert('end' in nodeOrToken, 'expected `end` in node or token from acorn')\n    const pointStart = parseOffsetToUnistPoint(nodeOrToken.start)\n    const pointEnd = parseOffsetToUnistPoint(nodeOrToken.end)\n    // Always defined in our unist points that come from micromark.\n    assert(pointStart.offset !== undefined, 'expected `offset`')\n    assert(pointEnd.offset !== undefined, 'expected `offset`')\n    nodeOrToken.start = pointStart.offset\n    nodeOrToken.end = pointEnd.offset\n    nodeOrToken.loc = {\n      start: {\n        line: pointStart.line,\n        column: pointStart.column - 1,\n        offset: pointStart.offset\n      },\n      end: {\n        line: pointEnd.line,\n        column: pointEnd.column - 1,\n        offset: pointEnd.offset\n      }\n    }\n    nodeOrToken.range = [nodeOrToken.start, nodeOrToken.end]\n  }\n\n  /**\n   * Turn an arbitrary offset into the parsed value, into a point in the source\n   * value.\n   *\n   * @param {number} acornOffset\n   * @returns {UnistPoint}\n   */\n  function parseOffsetToUnistPoint(acornOffset) {\n    let sourceOffset = acornOffset - prefix.length\n\n    if (sourceOffset < 0) {\n      sourceOffset = 0\n    } else if (sourceOffset > source.length) {\n      sourceOffset = source.length\n    }\n\n    let point = relativeToPoint(collection.stops, sourceOffset)\n\n    if (!point) {\n      assert(\n        options.start,\n        'empty expressions are need `options.start` being passed'\n      )\n      point = {\n        line: options.start.line,\n        column: options.start.column,\n        offset: options.start.offset\n      }\n    }\n\n    return point\n  }\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return /^\\s*$/.test(\n    value\n      // Multiline comments.\n      .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n      // Line comments.\n      // EOF instead of EOL is specifically not allowed, because that would\n      // mean the closing brace is on the commented-out line\n      .replace(/\\/\\/[^\\r\\n]*(\\r\\n|\\n|\\r)/g, '')\n  )\n}\n\n// Port from <https://github.com/wooorm/markdown-rs/blob/e692ab0/src/util/mdx_collect.rs#L15>.\n/**\n * @param {Array<Event>} events\n * @param {Array<TokenType>} tokenTypes\n * @returns {Collection}\n */\nfunction collect(events, tokenTypes) {\n  /** @type {Collection} */\n  const result = {value: '', stops: []}\n  let index = -1\n\n  while (++index < events.length) {\n    const event = events[index]\n\n    // Assume void.\n    if (event[0] === 'enter') {\n      const type = event[1].type\n\n      if (type === types.lineEnding || tokenTypes.includes(type)) {\n        const chunks = event[2].sliceStream(event[1])\n\n        // Drop virtual spaces.\n        while (chunks.length > 0 && chunks[0] === codes.virtualSpace) {\n          chunks.shift()\n        }\n\n        const value = serializeChunks(chunks)\n        result.stops.push([result.value.length, event[1].start])\n        result.value += value\n        result.stops.push([result.value.length, event[1].end])\n      }\n    }\n  }\n\n  return result\n}\n\n// Port from <https://github.com/wooorm/markdown-rs/blob/e692ab0/src/util/location.rs#L91>.\n/**\n * Turn a relative offset into an absolute offset.\n *\n * @param {Array<Stop>} stops\n * @param {number} relative\n * @returns {UnistPoint | undefined}\n */\nfunction relativeToPoint(stops, relative) {\n  let index = 0\n\n  while (index < stops.length && stops[index][0] <= relative) {\n    index += 1\n  }\n\n  // There are no points: that only occurs if there was an empty string.\n  if (index === 0) {\n    return undefined\n  }\n\n  const [stopRelative, stopAbsolute] = stops[index - 1]\n  const rest = relative - stopRelative\n  return {\n    line: stopAbsolute.line,\n    column: stopAbsolute.column + rest,\n    offset: stopAbsolute.offset + rest\n  }\n}\n\n// Copy from <https://github.com/micromark/micromark/blob/ce3593a/packages/micromark/dev/lib/create-tokenizer.js#L595>\n// To do: expose that?\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @returns {string}\n */\nfunction serializeChunks(chunks) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = values.ht\n\n          break\n        }\n\n        /* c8 ignore next 6 */\n        case codes.virtualSpace: {\n          if (atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          // eslint-disable-next-line unicorn/prefer-code-point\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 24964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24969, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdxjs-esm@1.0.5/node_modules/micromark-extension-mdxjs-esm/dev/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef Options\n *   Configuration (required).\n * @property {Acorn} acorn\n *   Acorn parser to use (required).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn (default: `{ecmaVersion: 2020, locations: true,\n *   sourceType: 'module'}`).\n *   all fields except `locations` can be set\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add `estree` fields to tokens with results from acorn.\n */\n\nimport {ok as assert} from 'uvu/assert'\nimport {blankLine} from 'micromark-core-commonmark'\nimport {asciiAlpha, markdownLineEnding} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\n\nconst blankLineBefore = {tokenize: tokenizeNextBlank, partial: true}\n\nconst allowedAcornTypes = new Set([\n  'ExportAllDeclaration',\n  'ExportDefaultDeclaration',\n  'ExportNamedDeclaration',\n  'ImportDeclaration'\n])\n\n/**\n * Create an extension for `micromark` to enable MDX ESM syntax.\n *\n * @param {Options} options\n *   Configuration (required).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   ESM syntax.\n */\nexport function mdxjsEsm(options) {\n  const exportImportConstruct = {tokenize: tokenizeExportImport, concrete: true}\n\n  if (!options || !options.acorn || !options.acorn.parse) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  const acorn = options.acorn\n  const acornOptions = Object.assign(\n    {ecmaVersion: 2020, sourceType: 'module'},\n    options.acornOptions\n  )\n\n  return {\n    flow: {\n      [codes.lowercaseE]: exportImportConstruct,\n      [codes.lowercaseI]: exportImportConstruct\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeExportImport(effects, ok, nok) {\n    const self = this\n    /** @type {Array<string>} */\n    const definedModuleSpecifiers =\n      self.parser.definedModuleSpecifiers ||\n      (self.parser.definedModuleSpecifiers = [])\n    const eventStart = this.events.length + 1 // Add the main `mdxjsEsm` token\n    let buffer = ''\n\n    return self.interrupt ? nok : start\n\n    /**\n     * Start of MDX ESM.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      assert(\n        code === codes.lowercaseE || code === codes.lowercaseI,\n        'expected `e` or `i`'\n      )\n\n      // Only at the start of a line, not at whitespace or in a container.\n      if (self.now().column > 1) return nok(code)\n\n      effects.enter('mdxjsEsm')\n      effects.enter('mdxjsEsmData')\n      effects.consume(code)\n      // eslint-disable-next-line unicorn/prefer-code-point\n      buffer += String.fromCharCode(code)\n      return word\n    }\n\n    /**\n     * In keyword.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *     ^^^^^^\n     * ```\n     *\n     * @type {State}\n     */\n    function word(code) {\n      if (asciiAlpha(code)) {\n        effects.consume(code)\n        // @ts-expect-error: definitely a number.\n        // eslint-disable-next-line unicorn/prefer-code-point\n        buffer += String.fromCharCode(code)\n        return word\n      }\n\n      if (\n        (buffer === 'import' || buffer === 'export') &&\n        code === codes.space\n      ) {\n        effects.consume(code)\n        return inside\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In data.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *           ^\n     * ```\n     *\n     * @type {State}\n     */\n    function inside(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit('mdxjsEsmData')\n        return lineStart(code)\n      }\n\n      effects.consume(code)\n      return inside\n    }\n\n    /**\n     * At line ending.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     *   | export {a}\n     * ```\n     *\n     * @type {State}\n     */\n    function lineStart(code) {\n      if (code === codes.eof) {\n        return atEnd(code)\n      }\n\n      if (markdownLineEnding(code)) {\n        return effects.check(blankLineBefore, atEnd, continuationStart)(code)\n      }\n\n      effects.enter('mdxjsEsmData')\n      return inside(code)\n    }\n\n    /**\n     * At line ending that continues.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     *   | export {a}\n     * ```\n     *\n     * @type {State}\n     */\n    function continuationStart(code) {\n      assert(markdownLineEnding(code))\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return lineStart\n    }\n\n    /**\n     * At end of line (blank or eof).\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     * ```\n     *\n     * @type {State}\n     */\n    function atEnd(code) {\n      const result = eventsToAcorn(self.events.slice(eventStart), {\n        acorn,\n        acornOptions,\n        prefix:\n          definedModuleSpecifiers.length > 0\n            ? 'var ' + definedModuleSpecifiers.join(',') + '\\n'\n            : ''\n      })\n\n      if (result.error) {\n        // There’s an error, which could be solved with more content, and there\n        // is more content.\n        if (code !== codes.eof && result.swallow) {\n          return continuationStart(code)\n        }\n\n        throw new VFileMessage(\n          'Could not parse import/exports with acorn: ' + String(result.error),\n          {\n            line: result.error.loc.line,\n            column: result.error.loc.column + 1,\n            offset: result.error.pos\n          },\n          'micromark-extension-mdxjs-esm:acorn'\n        )\n      }\n\n      assert(result.estree, 'expected `estree` to be defined')\n\n      // Remove the `VariableDeclaration`.\n      if (definedModuleSpecifiers.length > 0) {\n        const declaration = result.estree.body.shift()\n        assert(declaration)\n        assert(declaration.type === 'VariableDeclaration')\n      }\n\n      let index = -1\n\n      while (++index < result.estree.body.length) {\n        const node = result.estree.body[index]\n\n        if (!allowedAcornTypes.has(node.type)) {\n          throw new VFileMessage(\n            'Unexpected `' +\n              node.type +\n              '` in code: only import/exports are supported',\n            positionFromEstree(node),\n            'micromark-extension-mdxjs-esm:non-esm'\n          )\n        }\n\n        // Otherwise, when we’re not interrupting (hacky, because `interrupt` is\n        // used to parse containers and “sniff” if this is ESM), collect all the\n        // local values that are imported.\n        if (node.type === 'ImportDeclaration' && !self.interrupt) {\n          let index = -1\n\n          while (++index < node.specifiers.length) {\n            const specifier = node.specifiers[index]\n            definedModuleSpecifiers.push(specifier.local.name)\n          }\n        }\n      }\n\n      Object.assign(\n        effects.exit('mdxjsEsm'),\n        options.addResult ? {estree: result.estree} : undefined\n      )\n\n      return ok(code)\n    }\n  }\n}\n\n/** @type {Tokenizer} */\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    assert(markdownLineEnding(code))\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 25213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25218, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdxjs-esm@1.0.5/node_modules/micromark-extension-mdxjs-esm/dev/index.js"],"sourcesContent":["// Note: more types exposed from `index.d.ts`.\nexport {mdxjsEsm} from './lib/syntax.js'\n"],"names":[],"mappings":"AAAA,8CAA8C"}},
    {"offset": {"line": 25225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25230, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdxjs-esm@3.0.0/node_modules/micromark-extension-mdxjs-esm/dev/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef Options\n *   Configuration (required).\n * @property {Acorn} acorn\n *   Acorn parser to use (required).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn (default: `{ecmaVersion: 2024, locations: true,\n *   sourceType: 'module'}`); all fields except `locations` can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add `estree` fields to tokens with results from acorn\n *   (default: `false`).\n */\n\nimport {ok as assert} from 'devlop'\nimport {blankLine} from 'micromark-core-commonmark'\nimport {asciiAlpha, markdownLineEnding} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {codes, types} from 'micromark-util-symbol'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\n\nconst blankLineBefore = {tokenize: tokenizeNextBlank, partial: true}\n\nconst trouble = 'https://github.com/micromark/micromark-extension-mdxjs-esm'\n\nconst allowedAcornTypes = new Set([\n  'ExportAllDeclaration',\n  'ExportDefaultDeclaration',\n  'ExportNamedDeclaration',\n  'ImportDeclaration'\n])\n\n/**\n * Create an extension for `micromark` to enable MDX ESM syntax.\n *\n * @param {Options} options\n *   Configuration (required).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   ESM syntax.\n */\nexport function mdxjsEsm(options) {\n  const exportImportConstruct = {tokenize: tokenizeExportImport, concrete: true}\n\n  if (!options || !options.acorn || !options.acorn.parse) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  const acorn = options.acorn\n  const acornOptions = Object.assign(\n    {ecmaVersion: 2024, sourceType: 'module'},\n    options.acornOptions,\n    {locations: true}\n  )\n\n  return {\n    flow: {\n      [codes.lowercaseE]: exportImportConstruct,\n      [codes.lowercaseI]: exportImportConstruct\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeExportImport(effects, ok, nok) {\n    const self = this\n    const definedModuleSpecifiers =\n      self.parser.definedModuleSpecifiers ||\n      (self.parser.definedModuleSpecifiers = [])\n    const eventStart = this.events.length + 1 // Add the main `mdxjsEsm` token\n    let buffer = ''\n\n    return self.interrupt ? nok : start\n\n    /**\n     * Start of MDX ESM.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      assert(\n        code === codes.lowercaseE || code === codes.lowercaseI,\n        'expected `e` or `i`'\n      )\n\n      // Only at the start of a line, not at whitespace or in a container.\n      if (self.now().column > 1) return nok(code)\n\n      effects.enter('mdxjsEsm')\n      effects.enter('mdxjsEsmData')\n      effects.consume(code)\n      // eslint-disable-next-line unicorn/prefer-code-point\n      buffer += String.fromCharCode(code)\n      return word\n    }\n\n    /**\n     * In keyword.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *     ^^^^^^\n     * ```\n     *\n     * @type {State}\n     */\n    function word(code) {\n      if (asciiAlpha(code)) {\n        effects.consume(code)\n        // @ts-expect-error: definitely a number.\n        // eslint-disable-next-line unicorn/prefer-code-point\n        buffer += String.fromCharCode(code)\n        return word\n      }\n\n      if (\n        (buffer === 'import' || buffer === 'export') &&\n        code === codes.space\n      ) {\n        effects.consume(code)\n        return inside\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In data.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *           ^\n     * ```\n     *\n     * @type {State}\n     */\n    function inside(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit('mdxjsEsmData')\n        return lineStart(code)\n      }\n\n      effects.consume(code)\n      return inside\n    }\n\n    /**\n     * At line ending.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     *   | export {a}\n     * ```\n     *\n     * @type {State}\n     */\n    function lineStart(code) {\n      if (code === codes.eof) {\n        return atEnd(code)\n      }\n\n      if (markdownLineEnding(code)) {\n        return effects.check(blankLineBefore, atEnd, continuationStart)(code)\n      }\n\n      effects.enter('mdxjsEsmData')\n      return inside(code)\n    }\n\n    /**\n     * At line ending that continues.\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     *   | export {a}\n     * ```\n     *\n     * @type {State}\n     */\n    function continuationStart(code) {\n      assert(markdownLineEnding(code))\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return lineStart\n    }\n\n    /**\n     * At end of line (blank or eof).\n     *\n     * ```markdown\n     * > | import a from 'b'\n     *                      ^\n     * ```\n     *\n     * @type {State}\n     */\n    function atEnd(code) {\n      const result = eventsToAcorn(self.events.slice(eventStart), {\n        acorn,\n        acornOptions,\n        tokenTypes: ['mdxjsEsmData'],\n        prefix:\n          definedModuleSpecifiers.length > 0\n            ? 'var ' + definedModuleSpecifiers.join(',') + '\\n'\n            : ''\n      })\n\n      if (result.error) {\n        // There’s an error, which could be solved with more content, and there\n        // is more content.\n        if (code !== codes.eof && result.swallow) {\n          return continuationStart(code)\n        }\n\n        const error = new VFileMessage(\n          'Could not parse import/exports with acorn',\n          {\n            cause: result.error,\n            place: {\n              line: result.error.loc.line,\n              column: result.error.loc.column + 1,\n              offset: result.error.pos\n            },\n            ruleId: 'acorn',\n            source: 'micromark-extension-mdxjs-esm'\n          }\n        )\n        error.url = trouble + '#could-not-parse-importexports-with-acorn'\n        throw error\n      }\n\n      assert(result.estree, 'expected `estree` to be defined')\n\n      // Remove the `VariableDeclaration`.\n      if (definedModuleSpecifiers.length > 0) {\n        const declaration = result.estree.body.shift()\n        assert(declaration)\n        assert(declaration.type === 'VariableDeclaration')\n      }\n\n      let index = -1\n\n      while (++index < result.estree.body.length) {\n        const node = result.estree.body[index]\n\n        if (!allowedAcornTypes.has(node.type)) {\n          const error = new VFileMessage(\n            'Unexpected `' +\n              node.type +\n              '` in code: only import/exports are supported',\n            {\n              place: positionFromEstree(node),\n              ruleId: 'non-esm',\n              source: 'micromark-extension-mdxjs-esm'\n            }\n          )\n          error.url =\n            trouble +\n            '#unexpected-type-in-code-only-importexports-are-supported'\n          throw error\n        }\n\n        // Otherwise, when we’re not interrupting (hacky, because `interrupt` is\n        // used to parse containers and “sniff” if this is ESM), collect all the\n        // local values that are imported.\n        if (node.type === 'ImportDeclaration' && !self.interrupt) {\n          let index = -1\n\n          while (++index < node.specifiers.length) {\n            const specifier = node.specifiers[index]\n            definedModuleSpecifiers.push(specifier.local.name)\n          }\n        }\n      }\n\n      Object.assign(\n        effects.exit('mdxjsEsm'),\n        options.addResult ? {estree: result.estree} : undefined\n      )\n\n      return ok(code)\n    }\n  }\n}\n\n/** @type {Tokenizer} */\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    assert(markdownLineEnding(code))\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 25491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25496, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdxjs-esm@3.0.0/node_modules/micromark-extension-mdxjs-esm/dev/index.js"],"sourcesContent":["// Note: more types exposed from `index.d.ts`.\nexport {mdxjsEsm} from './lib/syntax.js'\n"],"names":[],"mappings":"AAAA,8CAA8C"}},
    {"offset": {"line": 25503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25508, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdx-md@1.0.1/node_modules/micromark-extension-mdx-md/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to disable\n * some CommonMark syntax (code (indented), autolinks, and HTML (flow and\n * text)) for MDX.\n *\n * @type {Extension}\n */\nexport const mdxMd = {\n  disable: {null: ['autolink', 'codeIndented', 'htmlFlow', 'htmlText']}\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,uCAAuC;AAEvC;;;;;;CAMC;;;AACM,MAAM,QAAQ;IACnB,SAAS;QAAC,MAAM;YAAC;YAAY;YAAgB;YAAY;SAAW;IAAA;AACtE"}},
    {"offset": {"line": 25530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25535, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdx-md@2.0.0/node_modules/micromark-extension-mdx-md/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\n/**\n * Create an extension for `micromark` to disable some CommonMark syntax (code\n * (indented), autolinks, and HTML (flow and text)) for MDX.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to disable\n *   some CommonMark syntax for MDX.\n */\nexport function mdxMd() {\n  return {\n    disable: {null: ['autolink', 'codeIndented', 'htmlFlow', 'htmlText']}\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;CAOC;;;AACM,SAAS;IACd,OAAO;QACL,SAAS;YAAC,MAAM;gBAAC;gBAAY;gBAAgB;gBAAY;aAAW;QAAA;IACtE;AACF"}},
    {"offset": {"line": 25559, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25564, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-mdx-expression@1.0.9/node_modules/micromark-factory-mdx-expression/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('estree').Program} Program\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @typedef MdxSignalOk\n *   Good result.\n * @property {'ok'} type\n *   Type.\n * @property {Program | undefined} estree\n *   Value.\n *\n * @typedef MdxSignalNok\n *   Bad result.\n * @property {'nok'} type\n *   Type.\n * @property {VFileMessage} message\n *   Value.\n *\n * @typedef {MdxSignalOk | MdxSignalNok} MdxSignal\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {ok as assert} from 'uvu/assert'\nimport {VFileMessage} from 'vfile-message'\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful\n * @param {TokenType} type\n *   Token type for whole (`{}`).\n * @param {TokenType} markerType\n *   Token type for the markers (`{`, `}`).\n * @param {TokenType} chunkType\n *   Token type for the value (`1`).\n * @param {Acorn | null | undefined} [acorn]\n *   Object with `acorn.parse` and `acorn.parseExpressionAt`.\n * @param {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn.\n * @param {boolean | null | undefined} [addResult=false]\n *   Add `estree` to token.\n * @param {boolean | null | undefined} [spread=false]\n *   Support a spread (`{...a}`) only.\n * @param {boolean | null | undefined} [allowEmpty=false]\n *   Support an empty expression.\n * @param {boolean | null | undefined} [allowLazy=false]\n *   Support lazy continuation of an expression.\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryMdxExpression(\n  effects,\n  ok,\n  type,\n  markerType,\n  chunkType,\n  acorn,\n  acornOptions,\n  addResult,\n  spread,\n  allowEmpty,\n  allowLazy\n) {\n  const self = this\n  const eventStart = this.events.length + 3 // Add main and marker token\n  let size = 0\n  /** @type {Point} */\n  let pointStart\n  /** @type {Error} */\n  let lastCrash\n\n  return start\n\n  /**\n   * Start of an MDX expression.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftCurlyBrace, 'expected `{`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    pointStart = self.now()\n    return before\n  }\n\n  /**\n   * Before data.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    if (code === codes.eof) {\n      throw (\n        lastCrash ||\n        new VFileMessage(\n          'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n          self.now(),\n          'micromark-extension-mdx-expression:unexpected-eof'\n        )\n      )\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return eolAfter\n    }\n\n    if (code === codes.rightCurlyBrace && size === 0) {\n      /** @type {MdxSignal} */\n      const next = acorn\n        ? mdxExpressionParse.call(\n            self,\n            acorn,\n            acornOptions,\n            eventStart,\n            pointStart,\n            allowEmpty || false,\n            spread || false\n          )\n        : {type: 'ok', estree: undefined}\n\n      if (next.type === 'ok') {\n        effects.enter(markerType)\n        effects.consume(code)\n        effects.exit(markerType)\n        const token = effects.exit(type)\n\n        if (addResult && next.estree) {\n          Object.assign(token, {estree: next.estree})\n        }\n\n        return ok\n      }\n\n      lastCrash = next.message\n      effects.enter(chunkType)\n      effects.consume(code)\n      return inside\n    }\n\n    effects.enter(chunkType)\n    return inside(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (\n      (code === codes.rightCurlyBrace && size === 0) ||\n      code === codes.eof ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(chunkType)\n      return before(code)\n    }\n\n    // Don’t count if gnostic.\n    if (code === codes.leftCurlyBrace && !acorn) {\n      size += 1\n    } else if (code === codes.rightCurlyBrace) {\n      size -= 1\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /**\n   * After eol.\n   *\n   * ```markdown\n   *   | a {b +\n   * > | c} d\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function eolAfter(code) {\n    const now = self.now()\n\n    // Lazy continuation in a flow expression (or flow tag) is a syntax error.\n    if (\n      now.line !== pointStart.line &&\n      !allowLazy &&\n      self.parser.lazy[now.line]\n    ) {\n      // `markdown-rs` uses:\n      // ``Unexpected lazy line in expression in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc``.\n      throw new VFileMessage(\n        'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n        self.now(),\n        'micromark-extension-mdx-expression:unexpected-eof'\n      )\n    }\n\n    // Idea: investigate if we’d need to use more complex stripping.\n    // Take this example:\n    //\n    // ```markdown\n    // >  aaa <b c={`\n    // >      d\n    // >  `} /> eee\n    // ```\n    //\n    // The block quote takes one space from each line, the paragraph doesn’t.\n    // The intent above is *perhaps* for the split to be as `>␠␠|␠␠␠␠|d`,\n    // Currently, we *don’t* do anything at all, it’s `>␠|␠␠␠␠␠|d` instead.\n    //\n    // Note: we used to have some handling here, and `markdown-rs` still does,\n    // which should be removed.\n    return before(code)\n  }\n}\n\n/**\n * Mix of `markdown-rs`’s `parse_expression` and `MdxExpressionParse`\n * functionality, to wrap our `eventsToAcorn`.\n *\n * In the future, the plan is to realise the rust way, which allows arbitrary\n * parsers.\n *\n * @this {TokenizeContext}\n * @param {Acorn} acorn\n * @param {AcornOptions | null | undefined} acornOptions\n * @param {number} eventStart\n * @param {Point} pointStart\n * @param {boolean} allowEmpty\n * @param {boolean} spread\n * @returns {MdxSignal}\n */\n// eslint-disable-next-line max-params\nfunction mdxExpressionParse(\n  acorn,\n  acornOptions,\n  eventStart,\n  pointStart,\n  allowEmpty,\n  spread\n) {\n  // Gnostic mode: parse w/ acorn.\n  const result = eventsToAcorn(this.events.slice(eventStart), {\n    acorn,\n    acornOptions,\n    start: pointStart,\n    expression: true,\n    allowEmpty,\n    prefix: spread ? '({' : '',\n    suffix: spread ? '})' : ''\n  })\n  const estree = result.estree\n\n  // Get the spread value.\n  if (spread && estree) {\n    // Should always be the case as we wrap in `d={}`\n    assert(estree.type === 'Program', 'expected program')\n    const head = estree.body[0]\n    assert(head, 'expected body')\n\n    // Can occur in some complex attributes.\n    /* c8 ignore next 11 */\n    if (\n      head.type !== 'ExpressionStatement' ||\n      head.expression.type !== 'ObjectExpression'\n    ) {\n      throw new VFileMessage(\n        'Unexpected `' +\n          head.type +\n          '` in code: expected an object spread (`{...spread}`)',\n        positionFromEstree(head).start,\n        'micromark-extension-mdx-expression:non-spread'\n      )\n    } else if (head.expression.properties[1]) {\n      throw new VFileMessage(\n        'Unexpected extra content in spread: only a single spread is supported',\n        positionFromEstree(head.expression.properties[1]).start,\n        'micromark-extension-mdx-expression:spread-extra'\n      )\n    } else if (\n      head.expression.properties[0] &&\n      head.expression.properties[0].type !== 'SpreadElement'\n    ) {\n      throw new VFileMessage(\n        'Unexpected `' +\n          head.expression.properties[0].type +\n          '` in code: only spread elements are supported',\n        positionFromEstree(head.expression.properties[0]).start,\n        'micromark-extension-mdx-expression:non-spread'\n      )\n    }\n  }\n\n  if (result.error) {\n    return {\n      type: 'nok',\n      message: new VFileMessage(\n        'Could not parse expression with acorn: ' + result.error.message,\n        {\n          line: result.error.loc.line,\n          column: result.error.loc.column + 1,\n          offset: result.error.pos\n        },\n        'micromark-extension-mdx-expression:acorn'\n      )\n    }\n  }\n\n  return {type: 'ok', estree}\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 25794, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25799, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-factory-mdx-expression@2.0.1/node_modules/micromark-factory-mdx-expression/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('estree').Program} Program\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @typedef MdxSignalOk\n *   Good result.\n * @property {'ok'} type\n *   Type.\n * @property {Program | undefined} estree\n *   Value.\n *\n * @typedef MdxSignalNok\n *   Bad result.\n * @property {'nok'} type\n *   Type.\n * @property {VFileMessage} message\n *   Value.\n *\n * @typedef {MdxSignalNok | MdxSignalOk} MdxSignal\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {codes, types} from 'micromark-util-symbol'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\n\nconst trouble =\n  'https://github.com/micromark/micromark-extension-mdx-expression/tree/main/packages/micromark-extension-mdx-expression'\n\nconst unexpectedEofHash =\n  '#unexpected-end-of-file-in-expression-expected-a-corresponding-closing-brace-for-'\nconst unexpectedLazyHash =\n  '#unexpected-lazy-line-in-expression-in-container-expected-line-to-be-prefixed'\nconst nonSpreadHash =\n  '#unexpected-type-in-code-expected-an-object-spread-spread'\nconst spreadExtraHash =\n  '#unexpected-extra-content-in-spread-only-a-single-spread-is-supported'\nconst acornHash = '#could-not-parse-expression-with-acorn'\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful\n * @param {TokenType} type\n *   Token type for whole (`{}`).\n * @param {TokenType} markerType\n *   Token type for the markers (`{`, `}`).\n * @param {TokenType} chunkType\n *   Token type for the value (`1`).\n * @param {Acorn | null | undefined} [acorn]\n *   Object with `acorn.parse` and `acorn.parseExpressionAt`.\n * @param {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn.\n * @param {boolean | null | undefined} [addResult=false]\n *   Add `estree` to token (default: `false`).\n * @param {boolean | null | undefined} [spread=false]\n *   Support a spread (`{...a}`) only (default: `false`).\n * @param {boolean | null | undefined} [allowEmpty=false]\n *   Support an empty expression (default: `false`).\n * @param {boolean | null | undefined} [allowLazy=false]\n *   Support lazy continuation of an expression (default: `false`).\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryMdxExpression(\n  effects,\n  ok,\n  type,\n  markerType,\n  chunkType,\n  acorn,\n  acornOptions,\n  addResult,\n  spread,\n  allowEmpty,\n  allowLazy\n) {\n  const self = this\n  const eventStart = this.events.length + 3 // Add main and marker token\n  let size = 0\n  /** @type {Point} */\n  let pointStart\n  /** @type {Error} */\n  let lastCrash\n\n  return start\n\n  /**\n   * Start of an MDX expression.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftCurlyBrace, 'expected `{`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    pointStart = self.now()\n    return before\n  }\n\n  /**\n   * Before data.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    if (code === codes.eof) {\n      if (lastCrash) throw lastCrash\n\n      const error = new VFileMessage(\n        'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n        {\n          place: self.now(),\n          ruleId: 'unexpected-eof',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + unexpectedEofHash\n      throw error\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return eolAfter\n    }\n\n    if (code === codes.rightCurlyBrace && size === 0) {\n      /** @type {MdxSignal} */\n      const next = acorn\n        ? mdxExpressionParse.call(\n            self,\n            acorn,\n            acornOptions,\n            chunkType,\n            eventStart,\n            pointStart,\n            allowEmpty || false,\n            spread || false\n          )\n        : {type: 'ok', estree: undefined}\n\n      if (next.type === 'ok') {\n        effects.enter(markerType)\n        effects.consume(code)\n        effects.exit(markerType)\n        const token = effects.exit(type)\n\n        if (addResult && next.estree) {\n          Object.assign(token, {estree: next.estree})\n        }\n\n        return ok\n      }\n\n      lastCrash = next.message\n      effects.enter(chunkType)\n      effects.consume(code)\n      return inside\n    }\n\n    effects.enter(chunkType)\n    return inside(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | a {Math.PI} c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (\n      (code === codes.rightCurlyBrace && size === 0) ||\n      code === codes.eof ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(chunkType)\n      return before(code)\n    }\n\n    // Don’t count if gnostic.\n    if (code === codes.leftCurlyBrace && !acorn) {\n      size += 1\n    } else if (code === codes.rightCurlyBrace) {\n      size -= 1\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /**\n   * After eol.\n   *\n   * ```markdown\n   *   | a {b +\n   * > | c} d\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function eolAfter(code) {\n    const now = self.now()\n\n    // Lazy continuation in a flow expression (or flow tag) is a syntax error.\n    if (\n      now.line !== pointStart.line &&\n      !allowLazy &&\n      self.parser.lazy[now.line]\n    ) {\n      const error = new VFileMessage(\n        'Unexpected lazy line in expression in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc',\n        {\n          place: self.now(),\n          ruleId: 'unexpected-lazy',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + unexpectedLazyHash\n      throw error\n    }\n\n    // Idea: investigate if we’d need to use more complex stripping.\n    // Take this example:\n    //\n    // ```markdown\n    // >  aaa <b c={`\n    // >      d\n    // >  `} /> eee\n    // ```\n    //\n    // The block quote takes one space from each line, the paragraph doesn’t.\n    // The intent above is *perhaps* for the split to be as `>␠␠|␠␠␠␠|d`,\n    // Currently, we *don’t* do anything at all, it’s `>␠|␠␠␠␠␠|d` instead.\n    //\n    // Note: we used to have some handling here, and `markdown-rs` still does,\n    // which should be removed.\n    return before(code)\n  }\n}\n\n/**\n * Mix of `markdown-rs`’s `parse_expression` and `MdxExpressionParse`\n * functionality, to wrap our `eventsToAcorn`.\n *\n * In the future, the plan is to realise the rust way, which allows arbitrary\n * parsers.\n *\n * @this {TokenizeContext}\n * @param {Acorn} acorn\n * @param {AcornOptions | null | undefined} acornOptions\n * @param {TokenType} chunkType\n * @param {number} eventStart\n * @param {Point} pointStart\n * @param {boolean} allowEmpty\n * @param {boolean} spread\n * @returns {MdxSignal}\n */\n// eslint-disable-next-line max-params\nfunction mdxExpressionParse(\n  acorn,\n  acornOptions,\n  chunkType,\n  eventStart,\n  pointStart,\n  allowEmpty,\n  spread\n) {\n  // Gnostic mode: parse w/ acorn.\n  const result = eventsToAcorn(this.events.slice(eventStart), {\n    acorn,\n    tokenTypes: [chunkType],\n    acornOptions,\n    start: pointStart,\n    expression: true,\n    allowEmpty,\n    prefix: spread ? '({' : '',\n    suffix: spread ? '})' : ''\n  })\n  const estree = result.estree\n\n  // Get the spread value.\n  if (spread && estree) {\n    // Should always be the case as we wrap in `d={}`\n    assert(estree.type === 'Program', 'expected program')\n    const head = estree.body[0]\n    assert(head, 'expected body')\n\n    if (\n      head.type !== 'ExpressionStatement' ||\n      head.expression.type !== 'ObjectExpression'\n    ) {\n      const place = positionFromEstree(head)\n      assert(place, 'expected position')\n      const error = new VFileMessage(\n        'Unexpected `' +\n          head.type +\n          '` in code: expected an object spread (`{...spread}`)',\n        {\n          place: place.start,\n          ruleId: 'non-spread',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + nonSpreadHash\n      throw error\n    }\n\n    if (head.expression.properties[1]) {\n      const place = positionFromEstree(head.expression.properties[1])\n      assert(place, 'expected position')\n      const error = new VFileMessage(\n        'Unexpected extra content in spread: only a single spread is supported',\n        {\n          place: place.start,\n          ruleId: 'spread-extra',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + spreadExtraHash\n      throw error\n    }\n\n    if (\n      head.expression.properties[0] &&\n      head.expression.properties[0].type !== 'SpreadElement'\n    ) {\n      const place = positionFromEstree(head.expression.properties[0])\n      assert(place, 'expected position')\n      const error = new VFileMessage(\n        'Unexpected `' +\n          head.expression.properties[0].type +\n          '` in code: only spread elements are supported',\n        {\n          place: place.start,\n          ruleId: 'non-spread',\n          source: 'micromark-extension-mdx-expression'\n        }\n      )\n      error.url = trouble + nonSpreadHash\n      throw error\n    }\n  }\n\n  if (result.error) {\n    const error = new VFileMessage('Could not parse expression with acorn', {\n      cause: result.error,\n      place: {\n        line: result.error.loc.line,\n        column: result.error.loc.column + 1,\n        offset: result.error.pos\n      },\n      ruleId: 'acorn',\n      source: 'micromark-extension-mdx-expression'\n    })\n    error.url = trouble + acornHash\n\n    return {type: 'nok', message: error}\n  }\n\n  return {type: 'ok', estree}\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 26080, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26085, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdx-expression@1.0.8/node_modules/micromark-extension-mdx-expression/dev/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Acorn | null | undefined} [acorn]\n *   Acorn parser to use (optional).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn (default: `{ecmaVersion: 2020, locations: true,\n *   sourceType: 'module'}`).\n *\n *   All fields except `locations` can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add `estree` fields to tokens with results from acorn.\n * @property {boolean | null | undefined} [spread=false]\n *   Undocumented option to parse only a spread (used by\n *   `micromark-extension-mdx-jsx` to parse spread attributes).\n * @property {boolean | null | undefined} [allowEmpty=true]\n *   Undocumented option to disallow empty attributes (used by\n *   `micromark-extension-mdx-jsx` to prohobit empty attribute values).\n */\n\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Create an extension for `micromark` to enable MDX expression syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   expression syntax.\n */\nexport function mdxExpression(options) {\n  const options_ = options || {}\n  const addResult = options_.addResult\n  const acorn = options_.acorn\n  // Hidden: `micromark-extension-mdx-jsx` supports expressions in tags,\n  // and one of them is only “spread” elements.\n  // It also has expressions that are not allowed to be empty (`<x y={}/>`).\n  // Instead of duplicating code there, this are two small hidden feature here\n  // to test that behavior.\n  const spread = options_.spread\n  let allowEmpty = options_.allowEmpty\n  /** @type {AcornOptions} */\n  let acornOptions\n\n  if (allowEmpty === null || allowEmpty === undefined) {\n    allowEmpty = true\n  }\n\n  if (acorn) {\n    if (!acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {ecmaVersion: 2020, sourceType: 'module'},\n      options_.acornOptions\n    )\n  } else if (options_.acornOptions || options_.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {\n      [codes.leftCurlyBrace]: {tokenize: tokenizeFlowExpression, concrete: true}\n    },\n    text: {[codes.leftCurlyBrace]: {tokenize: tokenizeTextExpression}}\n  }\n\n  /**\n   * MDX expression (flow).\n   *\n   * ```markdown\n   * > | {Math.PI}\n   *     ^^^^^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFlowExpression(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of an MDX expression (flow).\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // To do: in `markdown-rs`, constructs need to parse the indent themselves.\n      // This should also be introduced in `micromark-js`.\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return before(code)\n    }\n\n    /**\n     * After optional whitespace, before expression.\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function before(code) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        after,\n        'mdxFlowExpression',\n        'mdxFlowExpressionMarker',\n        'mdxFlowExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty\n      )(code)\n    }\n\n    /**\n     * After expression.\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *              ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      return markdownSpace(code)\n        ? factorySpace(effects, end, types.whitespace)(code)\n        : end(code)\n    }\n\n    /**\n     * After expression, after optional whitespace.\n     *\n     * ```markdown\n     * > | {Math.PI}␠␊\n     *               ^\n     * ```\n     *\n     * @type {State}\n     */\n    function end(code) {\n      return code === codes.eof || markdownLineEnding(code)\n        ? ok(code)\n        : nok(code)\n    }\n  }\n\n  /**\n   * MDX expression (text).\n   *\n   * ```markdown\n   * > | a {Math.PI} c.\n   *       ^^^^^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeTextExpression(effects, ok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of an MDX expression (text).\n     *\n     * ```markdown\n     * > | a {Math.PI} c.\n     *       ^\n     * ```\n     *\n     *\n     * @type {State}\n     */\n    function start(code) {\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        ok,\n        'mdxTextExpression',\n        'mdxTextExpressionMarker',\n        'mdxTextExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty,\n        true\n      )(code)\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED;;;;;;;;;;;;;;;;;;CAkBC;;;;;;;;;;;;;;;;AAkBM,SAAS,cAAc,OAAO;IACnC,MAAM,WAAW,WAAW,CAAC;IAC7B,MAAM,YAAY,SAAS,SAAS;IACpC,MAAM,QAAQ,SAAS,KAAK;IAC5B,sEAAsE;IACtE,6CAA6C;IAC7C,0EAA0E;IAC1E,4EAA4E;IAC5E,yBAAyB;IACzB,MAAM,SAAS,SAAS,MAAM;IAC9B,IAAI,aAAa,SAAS,UAAU;IACpC,yBAAyB,GACzB,IAAI;IAEJ,IAAI,eAAe,QAAQ,eAAe,WAAW;QACnD,aAAa;IACf;IAEA,IAAI,OAAO;QACT,IAAI,CAAC,MAAM,iBAAiB,EAAE;YAC5B,MAAM,IAAI,MACR;QAEJ;QAEA,eAAe,OAAO,MAAM,CAC1B;YAAC,aAAa;YAAM,YAAY;QAAQ,GACxC,SAAS,YAAY;IAEzB,OAAO,IAAI,SAAS,YAAY,IAAI,SAAS,SAAS,EAAE;QACtD,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;QACL,MAAM;YACJ,CAAC,+NAAM,cAAc,CAAC,EAAE;gBAAC,UAAU;gBAAwB,UAAU;YAAI;QAC3E;QACA,MAAM;YAAC,CAAC,+NAAM,cAAc,CAAC,EAAE;gBAAC,UAAU;YAAsB;QAAC;IACnE;IAEA;;;;;;;;;;GAUC,GACD,SAAS,uBAAuB,OAAO,EAAE,EAAE,EAAE,GAAG;QAC9C,MAAM,OAAO,IAAI;QAEjB,OAAO;QAEP;;;;;;;;;KASC,GACD,SAAS,MAAM,IAAI;YACjB,2EAA2E;YAC3E,oDAAoD;YACpD,uLAAO,SAAS,+NAAM,cAAc,EAAE;YACtC,OAAO,OAAO;QAChB;QAEA;;;;;;;;;KASC,GACD,SAAS,OAAO,IAAI;YAClB,OAAO,iRAAqB,IAAI,CAC9B,MACA,SACA,OACA,qBACA,2BACA,0BACA,OACA,cACA,WACA,QACA,YACA;QACJ;QAEA;;;;;;;;;KASC,GACD,SAAS,MAAM,IAAI;YACjB,OAAO,oPAAc,QACjB,iPAAa,SAAS,KAAK,+NAAM,UAAU,EAAE,QAC7C,IAAI;QACV;QAEA;;;;;;;;;KASC,GACD,SAAS,IAAI,IAAI;YACf,OAAO,SAAS,+NAAM,GAAG,IAAI,yPAAmB,QAC5C,GAAG,QACH,IAAI;QACV;IACF;IAEA;;;;;;;;;;GAUC,GACD,SAAS,uBAAuB,OAAO,EAAE,EAAE;QACzC,MAAM,OAAO,IAAI;QAEjB,OAAO;QAEP;;;;;;;;;;KAUC,GACD,SAAS,MAAM,IAAI;YACjB,uLAAO,SAAS,+NAAM,cAAc,EAAE;YACtC,OAAO,iRAAqB,IAAI,CAC9B,MACA,SACA,IACA,qBACA,2BACA,0BACA,OACA,cACA,WACA,QACA,YACA,MACA;QACJ;IACF;AACF"}},
    {"offset": {"line": 26259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26264, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdx-expression@1.0.8/node_modules/micromark-extension-mdx-expression/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/syntax.js').Options} Options\n */\n\nexport {mdxExpression} from './lib/syntax.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 26272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26277, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdx-expression@3.0.0/node_modules/micromark-extension-mdx-expression/dev/lib/syntax.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Acorn | null | undefined} [acorn]\n *   Acorn parser to use (optional).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Configuration for acorn (default: `{ecmaVersion: 2024, locations: true,\n *   sourceType: 'module'}`).\n *\n *   All fields except `locations` can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add `estree` fields to tokens with results from acorn (default:\n *   `false`).\n * @property {boolean | null | undefined} [spread=false]\n *   Undocumented option to parse only a spread (used by\n *   `micromark-extension-mdx-jsx` to parse spread attributes) (default:\n *   `false`).\n * @property {boolean | null | undefined} [allowEmpty=true]\n *   Undocumented option to disallow empty attributes (used by\n *   `micromark-extension-mdx-jsx` to prohobit empty attribute values)\n *   (default: `false`).\n */\n\nimport {ok as assert} from 'devlop'\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/**\n * Create an extension for `micromark` to enable MDX expression syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   expression syntax.\n */\nexport function mdxExpression(options) {\n  const options_ = options || {}\n  const addResult = options_.addResult\n  const acorn = options_.acorn\n  // Hidden: `micromark-extension-mdx-jsx` supports expressions in tags,\n  // and one of them is only “spread” elements.\n  // It also has expressions that are not allowed to be empty (`<x y={}/>`).\n  // Instead of duplicating code there, this are two small hidden feature here\n  // to test that behavior.\n  const spread = options_.spread\n  let allowEmpty = options_.allowEmpty\n  /** @type {AcornOptions} */\n  let acornOptions\n\n  if (allowEmpty === null || allowEmpty === undefined) {\n    allowEmpty = true\n  }\n\n  if (acorn) {\n    if (!acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {ecmaVersion: 2024, sourceType: 'module'},\n      options_.acornOptions\n    )\n  } else if (options_.acornOptions || options_.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {\n      [codes.leftCurlyBrace]: {\n        name: 'mdxFlowExpression',\n        tokenize: tokenizeFlowExpression,\n        concrete: true\n      }\n    },\n    text: {\n      [codes.leftCurlyBrace]: {\n        name: 'mdxTextExpression',\n        tokenize: tokenizeTextExpression\n      }\n    }\n  }\n\n  /**\n   * MDX expression (flow).\n   *\n   * ```markdown\n   * > | {Math.PI}\n   *     ^^^^^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFlowExpression(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of an MDX expression (flow).\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // To do: in `markdown-rs`, constructs need to parse the indent themselves.\n      // This should also be introduced in `micromark-js`.\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return before(code)\n    }\n\n    /**\n     * After optional whitespace, before expression.\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function before(code) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        after,\n        'mdxFlowExpression',\n        'mdxFlowExpressionMarker',\n        'mdxFlowExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty\n      )(code)\n    }\n\n    /**\n     * After expression.\n     *\n     * ```markdown\n     * > | {Math.PI}\n     *              ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      return markdownSpace(code)\n        ? factorySpace(effects, end, types.whitespace)(code)\n        : end(code)\n    }\n\n    /**\n     * After expression, after optional whitespace.\n     *\n     * ```markdown\n     * > | {Math.PI}␠␊\n     *               ^\n     * ```\n     *\n     * @type {State}\n     */\n    function end(code) {\n      // We want to allow tags directly after expressions.\n      //\n      // This case is useful:\n      //\n      // ```mdx\n      // <a>{b}</a>\n      // ```\n      //\n      // This case is not (very?) useful:\n      //\n      // ```mdx\n      // {a}<b/>\n      // ```\n      //\n      // …but it would be tougher than needed to disallow.\n      //\n      // To allow that, here we call the flow construct of\n      // `micromark-extension-mdx-jsx`, and there we call this one.\n      //\n      // It would introduce a cyclical interdependency if we test JSX and\n      // expressions here.\n      // Because the JSX extension already uses parts of this monorepo, we\n      // instead test it there.\n      const lessThanValue = self.parser.constructs.flow[codes.lessThan]\n      const constructs = Array.isArray(lessThanValue)\n        ? lessThanValue\n        : /* c8 ignore next 3 -- always a list when normalized. */\n        lessThanValue\n        ? [lessThanValue]\n        : []\n      const jsxTag = constructs.find(function (d) {\n        return d.name === 'mdxJsxFlowTag'\n      })\n\n      /* c8 ignore next 3 -- this is tested in `micromark-extension-mdx-jsx` */\n      if (code === codes.lessThan && jsxTag) {\n        return effects.attempt(jsxTag, end, nok)(code)\n      }\n\n      return code === codes.eof || markdownLineEnding(code)\n        ? ok(code)\n        : nok(code)\n    }\n  }\n\n  /**\n   * MDX expression (text).\n   *\n   * ```markdown\n   * > | a {Math.PI} c.\n   *       ^^^^^^^^^\n   * ```\n   *\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeTextExpression(effects, ok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of an MDX expression (text).\n     *\n     * ```markdown\n     * > | a {Math.PI} c.\n     *       ^\n     * ```\n     *\n     *\n     * @type {State}\n     */\n    function start(code) {\n      assert(code === codes.leftCurlyBrace, 'expected `{`')\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        ok,\n        'mdxTextExpression',\n        'mdxTextExpressionMarker',\n        'mdxTextExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty,\n        true\n      )(code)\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 26487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26492, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdx-expression@3.0.0/node_modules/micromark-extension-mdx-expression/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/syntax.js').Options} Options\n */\n\nexport {mdxExpression} from './lib/syntax.js'\n"],"names":[],"mappings":"AAAA;;CAEC"}},
    {"offset": {"line": 26500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26504, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/acorn-jsx@5.3.2_acorn@8.11.2/node_modules/acorn-jsx/xhtml.js"],"sourcesContent":["module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 26759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26763, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/acorn-jsx@5.3.2_acorn@8.11.2/node_modules/acorn-jsx/index.js"],"sourcesContent":["'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 27166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27171, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdxjs@1.0.1/node_modules/micromark-extension-mdxjs/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-extension-mdx-expression').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {Parser} from 'acorn'\nimport acornJsx from 'acorn-jsx'\nimport {mdxExpression} from 'micromark-extension-mdx-expression'\nimport {mdxJsx} from 'micromark-extension-mdx-jsx'\nimport {mdxMd} from 'micromark-extension-mdx-md'\nimport {mdxjsEsm} from 'micromark-extension-mdxjs-esm'\nimport {combineExtensions} from 'micromark-util-combine-extensions'\n\n/**\n * Create an extension for `micromark` to enable MDX syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   syntax.\n */\nexport function mdxjs(options) {\n  const settings = Object.assign(\n    {\n      acorn: Parser.extend(acornJsx()),\n      acornOptions: {ecmaVersion: 2020, sourceType: 'module'},\n      addResult: true\n    },\n    options\n  )\n\n  return combineExtensions([\n    mdxjsEsm(settings),\n    mdxExpression(settings),\n    mdxJsx(settings),\n    mdxMd\n  ])\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;;;;;;;;AAmBM,SAAS,MAAM,OAAO;IAC3B,MAAM,WAAW,OAAO,MAAM,CAC5B;QACE,OAAO,8LAAO,MAAM,CAAC;QACrB,cAAc;YAAC,aAAa;YAAM,YAAY;QAAQ;QACtD,WAAW;IACb,GACA;IAGF,OAAO,yQAAkB;QACvB,+PAAS;QACT,8QAAc;QACd,yPAAO;;KAER;AACH"}},
    {"offset": {"line": 27208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27213, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/micromark-extension-mdxjs@3.0.0/node_modules/micromark-extension-mdxjs/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-extension-mdx-expression').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {Parser} from 'acorn'\nimport acornJsx from 'acorn-jsx'\nimport {mdxExpression} from 'micromark-extension-mdx-expression'\nimport {mdxJsx} from 'micromark-extension-mdx-jsx'\nimport {mdxMd} from 'micromark-extension-mdx-md'\nimport {mdxjsEsm} from 'micromark-extension-mdxjs-esm'\nimport {combineExtensions} from 'micromark-util-combine-extensions'\n\n/**\n * Create an extension for `micromark` to enable MDX syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable MDX\n *   syntax.\n */\nexport function mdxjs(options) {\n  const settings = Object.assign(\n    {\n      acorn: Parser.extend(acornJsx()),\n      acornOptions: {ecmaVersion: 2024, sourceType: 'module'},\n      addResult: true\n    },\n    options\n  )\n\n  return combineExtensions([\n    mdxjsEsm(settings),\n    mdxExpression(settings),\n    mdxJsx(settings),\n    mdxMd()\n  ])\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;;;;;;;;AAmBM,SAAS,MAAM,OAAO;IAC3B,MAAM,WAAW,OAAO,MAAM,CAC5B;QACE,OAAO,8LAAO,MAAM,CAAC;QACrB,cAAc;YAAC,aAAa;YAAM,YAAY;QAAQ;QACtD,WAAW;IACb,GACA;IAGF,OAAO,yQAAkB;QACvB,+PAAS;QACT,8QAAc;QACd,yPAAO;QACP;KACD;AACH"}},
    {"offset": {"line": 27250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27255, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-mdx@2.3.0/node_modules/remark-mdx/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-mdxjs').Options} MicromarkOptions\n * @typedef {import('mdast-util-mdx').ToMarkdownOptions} ToMarkdownOptions\n * @typedef {import('mdast-util-mdx')} DoNotTouchAsThisIncludesMdxInTree\n */\n\n/**\n * @typedef {MicromarkOptions & ToMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {mdxjs} from 'micromark-extension-mdxjs'\nimport {mdxFromMarkdown, mdxToMarkdown} from 'mdast-util-mdx'\n\n/**\n * Plugin to support MDX (import/exports: `export {x} from 'y'`; expressions:\n * `{1 + 1}`; and JSX: `<Video id={123} />`).\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options | null | undefined] | [], Root>}\n */\nexport default function remarkMdx(options) {\n  const data = this.data()\n\n  add('micromarkExtensions', mdxjs(options))\n  add('fromMarkdownExtensions', mdxFromMarkdown())\n  add('toMarkdownExtensions', mdxToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {Array<unknown>} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;;;CAGC;;;;;;;;AAYc,SAAS,UAAU,OAAO;IACvC,MAAM,OAAO,IAAI,CAAC,IAAI;IAEtB,IAAI,uBAAuB,uOAAM;IACjC,IAAI,0BAA0B;IAC9B,IAAI,wBAAwB,yNAAc;IAE1C;;;GAGC,GACD,SAAS,IAAI,KAAK,EAAE,KAAK;QACvB,MAAM,OACJ,mBAAmB;QACnB,oBAAoB,GACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAI,IAAI,CAAC,MAAM,GAAG,EAAE;QAG/C,KAAK,IAAI,CAAC;IACZ;AACF"}},
    {"offset": {"line": 27285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27290, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-mdx@3.0.0/node_modules/remark-mdx/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast-util-mdx').ToMarkdownOptions} ToMarkdownOptions\n * @typedef {import('micromark-extension-mdxjs').Options} MicromarkOptions\n * @typedef {import('unified').Processor} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & ToMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {mdxFromMarkdown, mdxToMarkdown} from 'mdast-util-mdx'\nimport {mdxjs} from 'micromark-extension-mdxjs'\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Add support for MDX (JSX: `<Video id={123} />`, export/imports: `export {x}\n * from 'y'`; and expressions: `{1 + 1}`).\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkMdx(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(mdxjs(settings))\n  fromMarkdownExtensions.push(mdxFromMarkdown())\n  toMarkdownExtensions.push(mdxToMarkdown(settings))\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC,GAED;;;CAGC;;;;;;;;AAKD,8BAA8B,GAC9B,MAAM,eAAe,CAAC;AAWP,SAAS,UAAU,OAAO;IACvC,8CAA8C;IAC9C,sDAAsD;IACtD,MAAM,OAAiC,IAAI;IAC3C,MAAM,WAAW,WAAW;IAC5B,MAAM,OAAO,KAAK,IAAI;IAEtB,MAAM,sBACJ,KAAK,mBAAmB,IAAI,CAAC,KAAK,mBAAmB,GAAG,EAAE;IAC5D,MAAM,yBACJ,KAAK,sBAAsB,IAAI,CAAC,KAAK,sBAAsB,GAAG,EAAE;IAClE,MAAM,uBACJ,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,GAAG,EAAE;IAE9D,oBAAoB,IAAI,CAAC,uOAAM;IAC/B,uBAAuB,IAAI,CAAC;IAC5B,qBAAqB,IAAI,CAAC,yNAAc;AAC1C"}},
    {"offset": {"line": 27319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27324, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/remark-mdx@3.0.0/node_modules/remark-mdx/index.js"],"sourcesContent":["// Augment node types:\n/// <reference types=\"mdast-util-mdx\" />\n\n/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {default} from './lib/index.js'\n"],"names":[],"mappings":"AAAA,sBAAsB;AACtB,wCAAwC;AAExC;;CAEC"}},
    {"offset": {"line": 27334, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27342, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/markdown-extensions@1.1.1/node_modules/markdown-extensions/index.js"],"sourcesContent":["'use strict';\nmodule.exports = require('./markdown-extensions.json');\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO,GAAG"}},
    {"offset": {"line": 27344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27349, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/markdown-extensions@2.0.0/node_modules/markdown-extensions/index.js"],"sourcesContent":["// TODO: Load the JSON file when Node.js supports that.\n\nconst markdownExtension = [\n\t'md',\n\t'markdown',\n\t'mdown',\n\t'mkdn',\n\t'mkd',\n\t'mdwn',\n\t'mkdown',\n\t'ron',\n];\n\nexport default markdownExtension;\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;AAEvD,MAAM,oBAAoB;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;uCAEc"}},
    {"offset": {"line": 27364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27369, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/next-mdx-remote@4.4.1_react-dom@18.2.0_react@18.2.0/node_modules/next-mdx-remote/dist/serialize.js"],"sourcesContent":["import { compile } from '@mdx-js/mdx';\nimport { VFile } from 'vfile';\nimport { matter } from 'vfile-matter';\nimport require$$0 from 'os';\n\nvar lib$2 = {};\n\nvar lib$1 = {};\n\nvar jsTokens = {};\n\n// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(jsTokens, \"__esModule\", {\n  value: true\n});\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\njsTokens.default = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g;\n\njsTokens.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0], closed: undefined};\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4]);\n  else if (match[ 5]) token.type = \"comment\";\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7];\n  else if (match[ 8]) token.type = \"regex\";\n  else if (match[ 9]) token.type = \"number\";\n  else if (match[10]) token.type = \"name\";\n  else if (match[11]) token.type = \"punctuator\";\n  else if (match[12]) token.type = \"whitespace\";\n  return token\n};\n\nvar lib = {};\n\nvar identifier = {};\n\nObject.defineProperty(identifier, \"__esModule\", {\n  value: true\n});\nidentifier.isIdentifierStart = isIdentifierStart;\nidentifier.isIdentifierChar = isIdentifierChar;\nidentifier.isIdentifierName = isIdentifierName;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nfunction isIdentifierName(name) {\n  let isFirst = true;\n\n  for (let i = 0; i < name.length; i++) {\n    let cp = name.charCodeAt(i);\n\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    if (isFirst) {\n      isFirst = false;\n\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n\n  return !isFirst;\n}\n\nvar keyword = {};\n\nObject.defineProperty(keyword, \"__esModule\", {\n  value: true\n});\nkeyword.isReservedWord = isReservedWord;\nkeyword.isStrictReservedWord = isStrictReservedWord;\nkeyword.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nkeyword.isStrictBindReservedWord = isStrictBindReservedWord;\nkeyword.isKeyword = isKeyword;\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\n(function (exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierName;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierChar\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierChar;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierStart\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierStart;\n  }\n});\nObject.defineProperty(exports, \"isReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindOnlyReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isKeyword;\n  }\n});\n\nvar _identifier = identifier;\n\nvar _keyword = keyword;\n}(lib));\n\nvar chalk = {exports: {}};\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nvar escapeStringRegexp = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\nvar ansiStyles = {exports: {}};\n\nvar conversions$2 = {exports: {}};\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\nvar cssKeywords = colorName;\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert$2 = conversions$2.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert$2) {\n\tif (convert$2.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert$2[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert$2[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert$2[model].labels.length !== convert$2[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert$2[model].channels;\n\t\tvar labels = convert$2[model].labels;\n\t\tdelete convert$2[model].channels;\n\t\tdelete convert$2[model].labels;\n\t\tObject.defineProperty(convert$2[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert$2[model], 'labels', {value: labels});\n\t}\n}\n\nconvert$2.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert$2.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert$2.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert$2.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert$2.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert$2.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert$2.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert$2.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert$2.rgb.lab = function (rgb) {\n\tvar xyz = convert$2.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert$2.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert$2.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert$2.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert$2.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert$2.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$2.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$2.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$2.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert$2.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert$2.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert$2.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert$2.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert$2.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert$2.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert$2.rgb.ansi16(convert$2.hsv.rgb(args), args[2]);\n};\n\nconvert$2.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert$2.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert$2.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert$2.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert$2.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert$2.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert$2.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert$2.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert$2.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert$2.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert$2.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert$2.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert$2.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert$2.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert$2.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert$2.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert$2.gray.hsl = convert$2.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert$2.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert$2.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert$2.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert$2.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert$2.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\nvar conversions$1 = conversions$2.exports;\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions$1);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions$1[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions$1[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions$1[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nvar route$1 = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\nvar conversions = conversions$2.exports;\nvar route = route$1;\n\nvar convert$1 = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert$1[fromModel] = {};\n\n\tObject.defineProperty(convert$1[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert$1[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert$1[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert$1[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nvar colorConvert = convert$1;\n\n(function (module) {\nconst colorConvert$1 = colorConvert;\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert$1, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert$1, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert$1, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert$1)) {\n\t\tif (typeof colorConvert$1[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert$1[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n}(ansiStyles));\n\nvar hasFlag$1 = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n\nconst os = require$$0;\nconst hasFlag = hasFlag$1;\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nvar supportsColor_1 = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nvar templates = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n\n(function (module) {\nconst escapeStringRegexp$1 = escapeStringRegexp;\nconst ansiStyles$1 = ansiStyles.exports;\nconst stdoutColor = supportsColor_1.stdout;\n\nconst template = templates;\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles$1.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles$1)) {\n\tansiStyles$1[key].closeRe = new RegExp(escapeStringRegexp$1(ansiStyles$1[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles$1[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles$1.color.closeRe = new RegExp(escapeStringRegexp$1(ansiStyles$1.color.close), 'g');\nfor (const model of Object.keys(ansiStyles$1.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles$1.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles$1.color.close,\n\t\t\t\t\tcloseRe: ansiStyles$1.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles$1.bgColor.closeRe = new RegExp(escapeStringRegexp$1(ansiStyles$1.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles$1.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles$1.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles$1.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles$1.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles$1.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles$1.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles$1.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n}(chalk));\n\nObject.defineProperty(lib$1, \"__esModule\", {\n  value: true\n});\nlib$1.default = highlight;\nlib$1.getChalk = getChalk;\nlib$1.shouldHighlight = shouldHighlight;\n\nvar _jsTokens = jsTokens;\n\nvar _helperValidatorIdentifier = lib;\n\nvar _chalk = chalk.exports;\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs$1(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE$1 = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE$1).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs$1(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}\n\nObject.defineProperty(lib$2, \"__esModule\", {\n  value: true\n});\nvar codeFrameColumns_1 = lib$2.codeFrameColumns = codeFrameColumns;\nlib$2.default = _default;\n\nvar _highlight = lib$1;\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}\n\n/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n/**\n * Attempt to parse position information from an error message originating from the MDX compiler.\n * Only used if the error object doesn't contain\n */\nfunction parsePositionInformationFromErrorMessage(message) {\n    const positionInfoPattern = /\\d+:\\d+(-\\d+:\\d+)/g;\n    const match = message.match(positionInfoPattern);\n    if (match) {\n        // take the last match, that seems to be the most reliable source of the error.\n        const lastMatch = match.slice(-1)[0];\n        const [line, column] = lastMatch.split('-')[0].split(':');\n        return {\n            start: {\n                line: Number.parseInt(line, 10),\n                column: Number.parseInt(column, 10),\n            },\n        };\n    }\n}\n/**\n * Prints a nicely formatted error message from an error caught during MDX compilation.\n *\n * @param error - Error caught from the mdx compiler\n * @param source - Raw MDX string\n * @returns Error\n */\nfunction createFormattedMDXError(error, source) {\n    const position = error?.position ?? parsePositionInformationFromErrorMessage(error?.message);\n    const codeFrames = position\n        ? codeFrameColumns_1(source, {\n            start: {\n                line: position.start.line,\n                column: position.start.column ?? 0,\n            },\n        }, { linesAbove: 2, linesBelow: 2 })\n        : '';\n    const formattedError = new Error(`[next-mdx-remote] error compiling MDX:\n${error?.message}\n${codeFrames ? '\\n' + codeFrames + '\\n' : ''}\nMore information: https://mdxjs.com/docs/troubleshooting-mdx`);\n    formattedError.stack = '';\n    return formattedError;\n}\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n */\n\nvar convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        // @ts-ignore looks like a list of tests / partial test object.\n        return 'length' in test ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  );\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  var checks = [];\n  var index = -1;\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index]);\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    var index = -1;\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    var key;\n\n    for (key in check) {\n      if (node[key] !== check[key]) return\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n */\n\n/** @type {Array.<Node>} */\nconst empty = [];\n\nconst remove =\n  /**\n   * @type {(\n   *  (<Tree extends Node>(node: Tree, options: RemoveOptions, test: Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>|Array<Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>>) => Tree|null) &\n   *  (<Tree extends Node>(node: Tree, test: Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>|Array<Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>>) => Tree|null)\n   * )}\n   */\n  (\n    /**\n     * Mutate the given tree by removing all nodes that pass `test`.\n     * The tree is walked in preorder (NLR), visiting the node itself, then its head, etc.\n     *\n     * @param {Node} tree Tree to filter\n     * @param {RemoveOptions} options Whether to drop parent nodes if they had children, but all their children were filtered out. Default is `{cascade: true}`\n     * @param {Type|Props|TestFunction<Node>|Array<Type|Props|TestFunction<Node>>} test is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options);\n      const cascade =\n        options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade;\n\n      return preorder(tree)\n\n      /**\n       * Check and remove nodes recursively in preorder.\n       * For each composite node, modify its children array in-place.\n       *\n       * @param {Node} node\n       * @param {number|undefined} [index]\n       * @param {Parent|undefined} [parent]\n       * @returns {Node|null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array.<Node>} */\n        // @ts-expect-error looks like a parent.\n        const children = node.children || empty;\n        let childIndex = -1;\n        let position = 0;\n\n        if (is(node, index, parent)) {\n          return null\n        }\n\n        if (children.length > 0) {\n          // Move all living children to the beginning of the children array.\n          while (++childIndex < children.length) {\n            // @ts-expect-error looks like a parent.\n            if (preorder(children[childIndex], childIndex, node)) {\n              children[position++] = children[childIndex];\n            }\n          }\n\n          // Cascade delete.\n          if (cascade && !position) {\n            return null\n          }\n\n          // Drop other nodes.\n          children.length = position;\n        }\n\n        return node\n      }\n    }\n  );\n\n/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n/**\n * remark plugin which removes all import and export statements\n */\nfunction removeImportsExportsPlugin() {\n    return (tree) => remove(tree, 'mdxjsEsm');\n}\n\n/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\nfunction getCompileOptions(mdxOptions = {}, rsc = false) {\n    const areImportsEnabled = mdxOptions?.useDynamicImport;\n    // don't modify the original object when adding our own plugin\n    // this allows code to reuse the same options object\n    const remarkPlugins = [\n        ...(mdxOptions.remarkPlugins || []),\n        ...(areImportsEnabled ? [] : [removeImportsExportsPlugin]),\n    ];\n    return {\n        ...mdxOptions,\n        remarkPlugins,\n        outputFormat: 'function-body',\n        // Disable the importSource option for RSC to ensure there's no `useMDXComponents` implemented.\n        providerImportSource: rsc ? undefined : '@mdx-js/react',\n    };\n}\n/**\n * Parses and compiles the provided MDX string. Returns a result which can be passed into <MDXRemote /> to be rendered.\n */\nasync function serialize(source, { scope = {}, mdxOptions = {}, parseFrontmatter = false, } = {}, rsc = false) {\n    const vfile = new VFile(source);\n    // makes frontmatter available via vfile.data.matter\n    if (parseFrontmatter) {\n        matter(vfile, { strip: true });\n    }\n    let compiledMdx;\n    try {\n        compiledMdx = await compile(vfile, getCompileOptions(mdxOptions, rsc));\n    }\n    catch (error) {\n        throw createFormattedMDXError(error, String(vfile));\n    }\n    let compiledSource = String(compiledMdx);\n    return {\n        compiledSource,\n        frontmatter: (vfile.data.matter ?? {}),\n        scope: scope,\n    };\n}\n\nexport { serialize };\n"],"names":[],"mappings":";;;;;;;;;;;;AAKA,IAAI,QAAQ,CAAC;AAEb,IAAI,QAAQ,CAAC;AAEb,IAAI,WAAW,CAAC;AAEhB,sDAAsD;AACtD,+BAA+B;AAE/B,OAAO,cAAc,CAAC,UAAU,cAAc;IAC5C,OAAO;AACT;AAEA,gFAAgF;AAChF,yBAAyB;AACzB,SAAS,OAAO,GAAG;AAEnB,SAAS,YAAY,GAAG,SAAS,KAAK;IACpC,IAAI,QAAQ;QAAC,MAAM;QAAW,OAAO,KAAK,CAAC,EAAE;QAAE,QAAQ;IAAS;IAC3D,IAAI,KAAK,CAAE,EAAE,EAAE,MAAM,IAAI,GAAG,UAAW,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE;SAC7E,IAAI,KAAK,CAAE,EAAE,EAAE,MAAM,IAAI,GAAG;SAC5B,IAAI,KAAK,CAAE,EAAE,EAAE,MAAM,IAAI,GAAG,WAAW,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;SAChE,IAAI,KAAK,CAAE,EAAE,EAAE,MAAM,IAAI,GAAG;SAC5B,IAAI,KAAK,CAAE,EAAE,EAAE,MAAM,IAAI,GAAG;SAC5B,IAAI,KAAK,CAAC,GAAG,EAAE,MAAM,IAAI,GAAG;SAC5B,IAAI,KAAK,CAAC,GAAG,EAAE,MAAM,IAAI,GAAG;SAC5B,IAAI,KAAK,CAAC,GAAG,EAAE,MAAM,IAAI,GAAG;IACjC,OAAO;AACT;AAEA,IAAI,MAAM,CAAC;AAEX,IAAI,aAAa,CAAC;AAElB,OAAO,cAAc,CAAC,YAAY,cAAc;IAC9C,OAAO;AACT;AACA,WAAW,iBAAiB,GAAG;AAC/B,WAAW,gBAAgB,GAAG;AAC9B,WAAW,gBAAgB,GAAG;AAC9B,IAAI,+BAA+B;AACnC,IAAI,0BAA0B;AAC9B,MAAM,0BAA0B,IAAI,OAAO,MAAM,+BAA+B;AAChF,MAAM,qBAAqB,IAAI,OAAO,MAAM,+BAA+B,0BAA0B;AACrG,+BAA+B,0BAA0B;AACzD,MAAM,6BAA6B;IAAC;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAI;IAAG;IAAI;IAAI;IAAK;IAAI;IAAI;IAAK;IAAI;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAK;IAAI;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAK;IAAI;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAAI;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAG;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAG;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAK;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAK;IAAI;IAAG;IAAG;IAAI;IAAI;IAAI;IAAG;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAG;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAI;IAAG;IAAK;IAAI;IAAI;IAAG;IAAI;IAAG;IAAI;IAAI;IAAI;IAAG;IAAG;IAAG;IAAK;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAI;IAAG;IAAK;IAAI;IAAK;IAAI;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAI;IAAI;IAAG;IAAG;IAAG;IAAI;IAAG;IAAI;IAAI;IAAG;IAAG;IAAI;IAAG;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAK;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAI;IAAK;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAI;IAAI;IAAG;IAAK;IAAI;IAAK;IAAG;IAAI;IAAK;IAAK;IAAK;IAAI;IAAK;IAAM;IAAI;IAAI;IAAM;IAAM;IAAK;IAAM;IAAK;IAAG;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAG;IAAI;IAAI;IAAG;IAAI;IAAK;IAAI;IAAK;IAAI;IAAG;IAAG;IAAI;IAAI;IAAI;IAAG;IAAG;IAAG;IAAI;IAAM;IAAG;IAAM;IAAI;IAAG;IAAM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAK;IAAI;IAAG;IAAI;IAAG;IAAG;IAAK;IAAM;IAAK;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAM;IAAI;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAK;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAI;IAAG;IAAG;IAAM;IAAI;IAAK;IAAI;IAAI;IAAG;IAAI;IAAG;IAAK;IAAI;IAAI;IAAI;IAAM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAI;IAAG;IAAK;IAAI;IAAI;IAAG;IAAG;IAAM;IAAG;IAAG;IAAI;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IA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"}},
    {"offset": {"line": 31496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31501, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/next-mdx-remote@4.4.1_react-dom@18.2.0_react@18.2.0/node_modules/next-mdx-remote/serialize.js"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport { serialize } from './dist/serialize.js'\n\nexport { serialize }\n"],"names":[],"mappings":"AAAA;;;CAGC"}},
    {"offset": {"line": 31511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}